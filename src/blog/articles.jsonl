{"text":"Why not to do a startup Posted on June 18, 2007 In this series of posts I will walk through some of my accumulated knowledge and experience in building high-tech startups. My specific experience is from three companies I have co-founded: Netscape, sold to America Online in 1998 for $4.2 billion; Opsware (formerly Loudcloud), a public software company with an approximately $1 billion market cap; and now Ning, a new, private consumer Internet company. But more generally, I’ve been fortunate enough to be involved in and exposed to a broad range of other startups—maybe 40 or 50 in enough detail to know what I’m talking about—since arriving in Silicon Valley in 1994: as a board member, as an angel investor, as an advisor, as a friend of various founders, and as a participant in various venture capital funds. This series will focus on lessons learned from this entire cross-section of Silicon Valley startups—so don’t think that anything I am talking about is referring to one of my own companies: most likely when I talk about a scenario I have seen or something I have experienced, it is from some other startup that I am not naming but was involved with some other way than as a founder. Finally, much of my perspective is based on Silicon Valley and the environment that we have here—the culture, the people, the venture capital base, and so on.  Some of it will travel well to other regions and countries, some probably will not.  Caveat emptor. With all that out of the way, let’s start at the beginning: why not to do a startup. Startups, even in the wake of the crash of 2000, have become imbued with a real mystique—you read a lot about how great it is to do a startup, how much fun it is, what with the getting to invent the future, all the free meals, foosball tables, and all the rest. Now, it is true that there are a lot of great things about doing a startup.  They include, in my experience: Most fundamentally, the opportunity to be in control of your own destiny—you get to succeed or fail on your own, and you don’t have some bozo telling you what to do.  For a certain kind of personality, this alone is reason enough to do a startup. The opportunity to create something new—the proverbial blank sheet of paper.  You have the ability—actually, the obligation—to imagine a product that does not yet exist and bring it into existence, without any of the constraints normally faced by larger companies. The opportunity to have an impact on the world—to give people a new way to communicate, a new way to share information, a new way to work together, or anything else you can think of that would make the world a better place.  Think it should be easier for low-income people to borrow money?  Start Prosper.  Think television should be opened up to an infinite number of channels?  Start Joost.  Think that computers should be based on Unix and open standards and not proprietary technology?  Start Sun. The ability to create your ideal culture and work with a dream team of people you get to assemble yourself.  Want your culture to be based on people who have fun every day and enjoy working together?  Or, are hyper-competitive both in work and play?  Or, are super-focused on creating innovative new rocket science technologies?  Or, are global in perspective from day one?  You get to choose, and to build your culture and team to suit. And finally, money—startups done right can of course be highly lucrative.  This is not just an issue of personal greed—when things go right, your team and employees will themselves do very well and will be able to support their families, send their kids to college, and realize their dreams, and that’s really cool.  And if you’re really lucky, you as the entrepreneur can ultimately make profound philanthropic gifts that change society for the better. However, there are many more reasons to not do a startup. First, and most importantly, realize that a startup puts you on an emotional rollercoaster unlike anything you have ever experienced. You will flip rapidly from a day in which you are euphorically convinced you are going to own the world, to a day in which doom seems only weeks away and you feel completely ruined, and back again. Over and over and over. And I’m talking about what happens to stable entrepreneurs. There is so much uncertainty and so much risk around practically everything you are doing.  Will the product ship on time?  Will it be fast enough?  Will it have too many bugs?  Will it be easy to use?  Will anyone use it?  Will your competitor beat you to market?  Will you get any press coverage?  Will anyone invest in the company?  Will that key new engineer join?  Will your key user interface designer quit and go to Google?  And on and on and on... Some days things will go really well and some things will go really poorly.  And the level of stress that you’re under generally will magnify those transient data points into incredible highs and unbelievable lows at whiplash speed and huge magnitude. Second, in a startup, absolutely nothing happens unless you make it happen. This one throws both founders and employees new to startups. In an established company—no matter how poorly run or demoralized—things happen.  They just happen.  People come in to work.  Code gets written.  User interfaces get designed.  Servers get provisioned.  Markets get analyzed.  Pricing gets studied and determined.  Sales calls get made.  The wastebaskets get emptied.  And so on. A startup has none of the established systems, rhythms, infrastructure that any established company has. In a startup it is very easy for the code to not get written, for the user interfaces to not get designed... for people to not come into work... and for the wastebaskets to not get emptied. You as the founder have to put all of these systems and routines and habits in place and get everyone actually rowing—forget even about rowing in the right direction: just rowing at all is hard enough at the start. And until you do, absolutely nothing happens. Unless, of course, you do it yourself. Have fun emptying those wastebaskets. Third, you get told no—a lot. Unless you’ve spent time in sales, you are probably not familiar with being told no a lot. It’s not so much fun. Go watch Death of a Salesman and then Glengarry Glen Ross. That’s roughly what it’s like. You’re going to get told no by potential employees, potential investors, potential customers, potential partners, reporters, analysts... Over and over and over. And when you do get a “yes”, half the time you’ll get a call two days later and it’ll turn out the answer has morphed into “no”. Better start working on your fake smile. Fourth, hiring is a huge pain in the ass. You will be amazed how many windowshoppers you’ll deal with. A lot of people think they want to be part of a startup, but when the time comes to leave their cushy job at HP or Apple, they flinch—and stay. Going through the recruiting process and being seduced by a startup is heady stuff for your typical engineer or midlevel manager at a big company—you get to participate vicariously in the thrill of a startup without actually having to join or do any of the hard work. As a founder of a startup trying to hire your team, you’ll run into this again and again. When Jim Clark decided to start a new company in 1994, I was one of about a dozen people at various Silicon Valley companies he was talking to about joining him in what became Netscape. I was the only one who went all the way to saying “yes” (largely because I was 22 and had no reason not to do it). The rest flinched and didn’t do it. And this was Jim Clark, a legend in the industry who was coming off of the most successful company in Silicon Valley in 1994—Silicon Graphics Inc. How easy do you think it’s going to be for you? Then, once you do get through the windowshoppers and actually hire some people, your success rate on hiring is probably not going to be higher than 50%, and that’s if you’re good at it. By that I mean that half or more of the people you hire aren’t going to work out.  They’re going to be too lazy, too slow, easily rattled, political, bipolar, or psychotic. And then you have to either live with them, or fire them. Which ones of those sounds like fun? Fifth, God help you, at some point you’re going to have to hire executives. You think hiring employees is hard and risky—wait until you start hiring for VP Engineering, VP Marketing, VP Sales, VP HR, General Counsel, and CFO. There’s been a lot of talk in Silicon Valley lately about work/life balance—about how you should be able to do a startup and simultaneously live a full and fulfilling outside life. Now, personally, I have a lot of sympathy for that point of view. And I try hard in my companies (well, at least my last two companies) to do whatever I can to help make sure that people aren’t ground down to little tiny spots on the floor by the workload and the hours. But, it’s really difficult. The fact is that startups are incredibly intense experiences and take a lot out of people in the best of circumstances. And just because you want people to have work/life balance, it’s not so easy when you’re close to running out of cash, your product hasn’t shipped yet, your VC is mad at you, and your Kleiner Perkins-backed competitor in Menlo Park—you know, the one whose employees’ average age seems to be about 19—is kicking your butt. Which is what it’s going to be like most of the time. And even if you can help your employees have proper work/life balance, as a founder you certainly won’t. (In case you were wondering, by the way, the hours do compound the stress.) Seventh, it’s really easy for the culture of a startup to go sideways. This combines the first and second items above. This is the emotional rollercoaster wreaking havoc on not just you but your whole company. It takes time for the culture of any company to become “set”—for the team of people who have come together for the first time to decide collectively what they’re all about, what they value—and how they look at challenge and adversity. In the best case, you get an amazing dynamic of people really pulling together, supporting one another, and working their collective tails off in pursuit of a dream. In the worst case, you end up with widespread, self-reinforcing bitterness, disillusionment, cynicism, bad morale, contempt for management, and depression. And you as the founder have much less influence over this than you’ll think you do. Guess which way it usually goes. Eighth, there are lots of X factors that can come along and whup you right upside the head, and there’s absolutely nothing you can do about them. Stock market crashes. A better funded startup with a more experienced team that’s been hard at work longer than you have, in stealth mode, that unexpectedly releases a product that swiftly comes to dominate your market, completely closing off your opportunity, and you had no idea they were even working on it. At best, any given X factor might slam shut the fundraising window, cause customers to delay or cancel purchases—or, at worst, shut down your whole company. Russian mobsters laundering millions of dollars of dirty money through your service, resulting in the credit card companies closing you down. You think I’m joking about that one? OK, now here’s the best part: I haven’t even talked about figuring out what product to build, building it, taking it to market, and standing out from the crowd. All the risks in the core activities of what your company actually does are yet to come, and to be discussed in future posts in this series. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"When the VCs say “no” Posted on June 20, 2007 This post is about what to do between when the VCs say “no” to funding your startup, and when you either change their minds or find some other path. I’m going to assume that you’ve done all the basics: developed a plan and a pitch, decided that venture financing is right for you and you are right for venture financing, lined up meetings with properly qualified VCs, and made your pitch. And the answer has come back and it’s “no”. One “no” doesn’t mean anything—the VC could just be having a bad day, or she had a bad experience with another company in your category, or she had a bad experience with another company with a similar name, or she had a bad experience with another founder who kind of looks like you, or her Mercedes SLR McLaren’s engine could have blown up on the freeway that morning—it could be anything.  Go meet with more VCs. If you meet with three VCs and they all say “no”, it could just be a big coincidence.  Go meet with more VCs. If you meet with five, or six, or eight VCs and they all say no, it’s not a coincidence. There is something wrong with your plan. Or, even if there isn’t, there might as well be, because you’re still not getting funded. Meeting with more VCs after a bunch have said no is probably a waste of time.  Instead, retool your plan—which is what this post is about. But first, lay the groundwork to go back in later. It’s an old—and true—cliche that VCs rarely actually say “no”—more often they say “maybe”, or “not right now”, or “my partners aren’t sure”, or “that’s interesting, let me think about it”. They do that because they don’t want to invest in your company given the current facts, but they want to keep the door open in case the facts change. And that’s exactly what you want—you want to be able to go back to them with a new set of facts, and change their minds, and get to “yes”. So be sure to take “no” gracefully—politely ask them for feedback (which they probably won’t give you, at least not completely honestly—nobody likes calling someone else’s baby ugly—believe me, I’ve done it), thank them for their time, and ask if you can call them again if things change. Trust me—they’d much rather be saying “yes” than “no”—they need all the good investments they can get. Second, consider the environment. Being told “no” by VCs in 1999 is a lot different than being told “no” in 2002. If you were told “no” in 1999, I’m sure you’re a wonderful person and you have huge potential and your mother loves you very much, but your plan really was seriously flawed. If you were told “no” in 2002, you probably actually were the next Google, but most of the VCs were hiding under their desks and they just missed it. In my opinion, we’re now in a much more rational environment than either of those extremes—a lot of good plans are being funded, along with some bad ones, but not all the bad ones. I’ll proceed under the assumption that we’re in normal times.  But if things get truly euphoric or truly funereal again, the rest of this post will probably not be very helpful—in either case. Third, retool your plan. This is the hard part—changing the facts of your plan and what you are trying to do, to make your company more fundable. To describe the dimensions that you should consider as you contemplate retooling your plan, let me introduce the onion theory of risk. If you’re an investor, you look at the risk around an investment as if it’s an onion.  Just like you peel an onion and remove each layer in turn, risk in a startup investment comes in layers that get peeled away—reduced—one by one. Your challenge as an entrepreneur trying to raise venture capital is to keep peeling layers of risk off of your particular onion until the VCs say “yes”—until the risk in your startup is reduced to the point where investing in your startup doesn’t look terrifying and merely looks risky. What are the layers of risk for a high-tech startup? It depends on the startup, but here are some of the common ones: Founder risk—does the startup have the right founding team?  A common founding team might include a great technologist, plus someone who can run the company, at least to start.  Is the technologist really all that?  Is the business person capable of running the company?  Is the business person missing from the team altogether?  Is it a business person or business people with no technologist, and therefore virtually unfundable? Market risk—is there a market for the product (using the term product and service interchangeably)?  Will anyone want it?  Will they pay for it?  How much will they pay?  How do we know? Competition risk—are there too many other startups already doing this?  Is this startup sufficiently differentiated from the other startups, and also differentiated from any large incumbents? Timing risk—is it too early?  Is it too late? Financing risk—after we invest in this round, how many additional rounds of financing will be required for the company to become profitable, and what will the dollar total be?  How certain are we about these estimates?  How do we know? Marketing risk—will this startup be able to cut through the noise?  How much will marketing cost?  Do the economics of customer acquisition—the cost to acquire a customer, and the revenue that customer will generate—work? Distribution risk—does this startup need certain distribution partners to succeed?  Will it be able to get them?  How?  (For example, this is a common problem with mobile startups that need deals with major mobile carriers to succeed.) Technology risk—can the product be built?  Does it involve rocket science—or an equivalent, like artificial intelligence or natural language processing?  Are there fundamental breakthroughs that need to happen?  If so, how certain are we that they will happen, or that this team will be able to make them? Product risk—even assuming the product can in theory be built, can this team build it? Hiring risk—what positions does the startup need to hire for in order to execute its plan?  E.g. a startup planning to build a high-scale web service will need a VP of Operations—will the founding team be able to hire a good one? Location risk—where is the startup located?  Can it hire the right talent in that location?  And will I as the VC need to drive more than 20 minutes in my Mercedes SLR McLaren to get there? You know, when you stack up all these layers and look at the full onion, you realize it’s amazing that any venture investments ever get made. What you need to do is take a hard-headed look at each of these risks—and any others that are specific to your startup and its category—and put yourself in the VC’s shoes: what could this startup do to minimize or eliminate enough of these risks to make the company fundable? Then do those things. This isn’t very much fun, since it will probably involve making significant changes to your plan, but look on the bright side: it’s excellent practice for when your company ultimately goes public and has to file an S1 registration statement with the SEC, in which you have to itemize in huge detail every conceivable risk and bad thing that could ever possibly happen to you, up to and including global warming. Some ideas on reducing risk: Founder risk—the tough one.  If you’re the technologist on a founding team with a business person, you have to consider the possibility that the VCs don’t think the business person is strong enough to be the founding CEO.  Or vice versa, maybe they think the technologist isn’t strong enough to build the product.  You may have to swap out one or more founders, and/or add one or more founders. I put this one right up front because it can be a huge issue and the odds of someone being honest with you about it in the specific are not that high. Market risk—you probably need to validate the market, at a practical level.  Sometimes more detailed and analytical market research will solve the problem, but more often you actually need to go get some customers to demonstrate that the market exists.  Preferably, paying customers.  Or at least credible prospects who will talk to VCs to validate the market hypothesis. Competition risk—is your differentiation really sharp enough?  Rethink this one from the ground up.  Lots of startups do not have strong enough differentiation out of the gate, even after they get funded.  If you don’t have a really solid idea as to how you’re dramatically different from or advantaged over known and unknown competitors, you might not want to start a company in the first place. Two additional points on competition risk that founders routinely screw up in VC pitches: Never, ever say that you have no competitors.  That signals naivete.  Great markets draw competitors, and so if you really have no competition, you must not be in a great market.  Even if you really believe you have no competitors, create a competitive landscape slide with adjacent companies in related market segments and be ready to talk crisply about how you are like and unlike those adjacent companies. And never, ever say your market projections indicate you’re going to be hugely successful if you get only 2% of your (extremely large) market.  That also signals naivete.  If you’re going after 2% of a large market, that means the presumably larger companies that are going to take the other 98% are going to kill you.  You have to have a theory for how you’re going to get a significantly higher market share than 2%.  (I pick 2% because that’s the cliche, but if you’re a VC, you’ve probably heard someone use it.) Timing risk—the only thing to do here is to make more progress, and demonstrate that you’re not too early or too late.  Getting customers in the bag is the most valuable thing you can do on this one. Financing risk—rethink very carefully how much money you will need to raise after this round of financing, and try to change the plan in plausible ways to require less money.  For example, only serve Cristal at your launch party, and not Remy Martin “Black Pearl” Louis XIII cognac. Marketing risk—first, make sure your differentiation is super-sharp, because without that, you probably won’t be able to stand out from the noise. Then, model out your customer acquisition economics in detail and make sure that you can show how you’ll get more revenue from a customer than it will cost in sales and marketing expense to acquire that customer.  This is a common problem for startups pursuing the small business market, for example. If it turns out you need a lot of money in absolute terms for marketing, look for alternate approaches—perhaps guerilla marketing, or some form of virality. Distribution risk—this is a very tough one—if your plan has distribution risk, which is to say you need a key distribution partner to make it work, personally I’d recommend shelving the plan and doing something else.  Otherwise, you may need to go get the distribution deal before you can raise money, which is almost impossible. Technology risk—there’s only one way around this, which is to build the product, or at least get it to beta, and then raise money. Product risk—same answer—build it. Hiring risk—the best way to address this is to figure out which position/positions the VCs are worried about, and add it/them to the founding team.  This will mean additional dilution for you, but it’s probably the only way to solve the problem. Location risk—this is the one you’re really not going to like.  If you’re not in a major center of entrepreneurialism and you’re having trouble raising money, you probably need to move.  There’s a reason why most films get made in Los Angeles, and there’s a reason most venture-backed US tech startups happen in Silicon Valley and handful of other places—that’s where the money is.  You can start a company wherever you want, but you may not be able to get it funded there. You’ll notice that a lot of what you may need to do is kick the ball further down the road—make more progress against your plan before you raise venture capital. This obviously raises the issue of how you’re supposed to do that before you’ve raised money. Try to raise angel money, or bootstrap off of initial customers or consulting contracts, or work on it after hours while keeping your current job, or quit your job and live off of credit cards for a while. Lots of entrepreneurs have done these things and succeeded—and of course, many have failed. Nobody said this would be easy. The most valuable thing you can do is actually build your product.  When in doubt, focus on that. The next most valuable thing you can do is get customers—or, for a consumer Internet service, establish a pattern of page view growth. The whole theory of venture capital is that VCs are investing in risk—another term for venture capital is “risk capital”—but the reality is that VCs will only take on so much risk, and the best thing you can do to optimize your chances of raising money is to take out risk. Peel away at the onion. Then, once you’ve done that, recraft the pitch around the new facts.  Go do the pitches again.  And repeat as necessary. And to end on a happy note, remember that “yes” can turn into “no” at any point up until the cash hits your company’s bank account. So keep your options open all the way to the end. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"“But I don’t know any VCs!” Posted on June 25, 2007 In my last post in this series, When the VCs say “no”, I discussed what to do once you have been turned down for venture funding for the first time. However, this presupposes you’ve been able to pitch VCs in the first place.  What if you have a startup for which you’d like to raise venture funding, but you don’t know any VCs? I can certainly sympathize with this problem—when I was in college working on Mosaic at the University of Illinois, the term “venture capital” might as well have been “klaatu barada nikto” for all I knew.  I had never met a venture capitalist, no venture capitalist had ever talked to me, and I wouldn’t have recognized one if I’d stumbled over his checkbook on the sidewalk.  Without Jim Clark, I’m not at all certain I would have been able to raise money to start a company like Netscape, had it even occured to me to start a company in the first place. The starting point for raising money from VCs when you don’t know any VCs is to realize that VCs work mostly through referrals—they hear about a promising startup or entrepreneur from someone they have worked with before, like another entrepreneur, an executive or engineer at one of the startups they have funded, or an angel investor with whom they have previously co-invested. The reason for this is simply the math: any individual VC can only fund a few companies per year, and for every one she funds, she probably meets with 15 or 20, and there are hundreds more that would like to meet with her that she doesn’t possibly have time to meet with.  She has to rely on her network to help her screen the hundreds down to 15 or 20, so she can spend her time finding the right one out of the 15 or 20. Therefore, submitting a business plan “over the transom”, or unsolicited, to a venture firm is likely to amount to just as much as submitting a screenplay “over the transom” to a Hollywood talent agency—that is, precisely nothing. So the primary trick becomes getting yourself into a position where you’re one of the 15 or 20 a particular venture capitalist is meeting with based on referrals from her network, not one of the hundreds of people who don’t come recommended by anyone and whom she has no intention of meeting. But before you think about doing that, the first order of business is to (paraphrasing for a family audience) “have your stuff together”—create and develop your plan, your presentation, and your supporting materials so that when you do meet with a VC, you impress her right out of the gate as bringing her a fundable startup founded by someone who knows what he—that’s you—is doing. My recommendation is to read up on all the things you should do to put together a really effective business plan and presentation, and then pretend you have already been turned down once—then go back to my last post and go through all the different things you should anticipate and fix before you actually do walk through the door. One of the reason VCs only meet with startups through their networks is because too many of the hundreds of other startups that they could meet with come across as amateurish and uninformed, and therefore not fundable, when they do take meetings with them.  So you have a big opportunity to cut through the noise by making a great first impression—which requires really thinking things through ahead of time and doing all the hard work up front to really make your pitch and plan a masterpiece. Working backwards from that, the best thing you can walk in with is a working product.  Or, if you can’t get to a working product without raising venture funding, then at least a beta or prototype of some form—a web site that works but hasn’t launched, or a software mockup with partial functionality, or something.  And of course it’s even better if you walk in with existing “traction” of some form—customers, beta customers, some evidence of adoption by Internet users, whatever is appropriate for your particular startup. With a working product that could be the foundation of a fundable startup, you have a much better chance of getting funded once you do get in the door.  Back to my rule of thumb from the last post: when in doubt, work on the product. Failing a working product and ideally customers or users, be sure to have as fleshed out a presentation as you possibly can—including mockups, screenshots, market analyses, customer research such as interviews with real prospects, and the like. Don’t bother with a long detailed written business plan.  Most VCs will either fund a startup based on a fleshed out Powerpoint presentation of about 20 slides, or they won’t fund it at all.  Corollary: any VC who requires a long detailed written business plan is probably not the right VC to be working with. Next: qualify, qualify, qualify.  Do extensive research on venture capitalists and find the ones who focus on the sector relevant to your startup.  It is completely counterproductive to everyone involved for you to pitch a health care VC on a consumer Internet startup, or vice versa.  Individual VCs are usually quite focused in the kinds of companies they are looking for, and identifying those VCs and screening out all the others is absolutely key. Now, on to developing contacts: The best way to develop contacts with VCs, in my opinion, is to work at a venture-backed startup, kick butt, get promoted, and network the whole way. If you can’t get hired by a venture-backed startup right now, work at a well-regarded large tech company that employs a lot of people like Google or Apple, gain experience, and then go to work at a venture-backed startup, kick butt, get promoted, and network the whole way. And if you can’t get hired by a well-regarded large tech company, go get a bachelor’s or master’s degree at a major research university from which well-regarded large tech companies regularly recruit, then work at a well-regarded large tech company that employs a lot of people like Google or Apple, gain experience, and then go to work at a venture-backed startup, kick butt, get promoted, and network the whole way. I sound like I’m joking, but I’m completely serious—this is the path taken by many venture-backed entrepreneurs I know. Some alternate techniques that don’t take quite as long: If you’re still in school, immediately transfer to, or plan on going to graduate school at, a large research university with well-known connections to the venture capital community, like Stanford or MIT. Graduate students at Stanford are directly responsible for such companies as Sun, Cisco, Yahoo, and Google, so needless to say, Silicon Valley VCs are continually on the prowl on the Stanford engineering campus for the next Jerry Yang or Larry Page. (In contrast, the University of Illinois, where I went to school, is mostly prowled by mutant cold-weather cows.) Alternately, jump all over Y Combinator.  This program, created by entrepreneur Paul Graham and his partners, funds early-stage startups in an organized program in Silicon Valley and Boston and then makes sure the good ones get in front of venture capitalists for follow-on funding.  It’s a great idea and a huge opportunity for the people who participate in it. Read VC blogs—read them all, and read them very very carefully.  VCs who blog are doing entrepreneurs a huge service both in conveying highly useful information as well as frequently putting themselves out there to be contacted by entrepreneurs in various ways including email, comments, and even uploaded podcasts.  Each VC is different in terms of how she wants to engage with people online, but by all means read as many VC blogs as you can and interact with as many of them as you can in appropriate ways. See the list of VC bloggers on my home page, as well as on the home pages of various of those bloggers. At the very least you will start to get a really good sense of which VCs who blog are interested in which kinds of companies. At best, a VC blogger may encourage her readers to communicate with her in various ways, including soliciting email pitches in certain startup categories of interest to her. Fred Wilson of Union Square Ventures has even gone so far as to encourage entrepreneurs to record and upload audio pitches for new ventures so he can listen to them on his IPod.  I don’t know if he’s still doing that, but it’s worth reading his blog and finding out. Along those lines, some VCs are aggressive early adopters of new forms of communication and interaction—current examples being Facebook and Twitter.  Observationally, when a VC is exploring a new communiation medium like Facebook or Twitter, she can be more interested in interacting with various people over that new medium than she might otherwise be.  So, when such a new thing comes out—like, hint hint, Facebook or Twitter—jump all over it, see which VCs are using it, and interact with them that way—sensibly, of course. More generally, it’s a good idea for entrepreneurs who are looking for funding to blog—about their startup, about interesting things going on, about their point of view.  This puts an entrepreneur in the flow of conversation, which can lead to interaction with VCs through the normal medium of blogging.  And, when a VC does decide to take a look at you and your company, she can read your blog to get a sense of who you are and how you think.  It’s another great opportunity to put forward a fantastic first impression. Finally, if you are a programmer, I highly encourage you, if you have time, to create or contribute to a meaningful open source project.  The open source movement is an amazing opportunity for programmers all over the world to not only build useful software that lots of people can use, but also build their own reputations completely apart from whatever day jobs they happen to have.  Being able to email a VC and say, “I’m the creator of open source program X which has 50,000 users worldwide, and I want to tell you about my new startup” is a lot more effective than your normal pitch. If you engage in a set of these techniques over time, you should be able to interact with at least a few VCs in ways that they find useful and that might lead to further conversations about funding, or even introductions to other VCs. I’m personally hoping that the next Google comes out of a VC being sent an email pitch after the entrepreneur read that VC’s blog.  Then every VC on the planet will suddenly start blogging, overnight. If none of those ideas work for you: Your alternatives in reverse (declining) order of preference for funding are, in my view: angel funding, bootstrapping via consulting contracts or early customers, keeping your day job and working on your startup in your spare time, and credit card debt. Angel funding—funding from individuals who like to invest small amounts of money in early-stage startups, often before VCs come in—can be a great way to go since good angels know good VCs and will be eager to introduce you to them so that your company goes on to be successful for the angel as well as for you. This of course begs the question of how to raise angel money, which is another topic altogether! I am not encouraging the other three alternatives—bootstrapping, working on it part time, or credit card debt.  Each has serious problems.  But, it is easy to name highly successful entrepreneurs who have followed each of those paths, so they are worth noting. Finally, be sure to read this page on Sequoia Capital’s web site. Sequoia is one of the very best venture firms in the world, and has funded many companies that you have heard of including Oracle, Apple, Yahoo, and Google. On that page, Sequoia does entrepreneurs everywhere a huge service by first listing the criteria that they look for in a startup, then the recommended structure for your pitch presentation, and then finally actually asks for pitches “over the transom”. I have not done a thorough review of other VC web sites to see who else is being this open, but for Sequoia to be offering this to the world at large is a huge opportunity for the right startup.  Don’t let it pass by. [Editorial note: This will be the last VC-related post in this series for a while.  From now on I plan to focus much more on how to make a startup successful.] This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"The only thing that matters Posted on June 25, 2007 This post is all about the only thing that matters for a new startup. But first, some theory: If you look at a broad cross-section of startups—say, 30 or 40 or more; enough to screen out the pure flukes and look for patterns—two obvious facts will jump out at you. First obvious fact: there is an incredibly wide divergence of success—some of those startups are insanely successful, some highly successful, many somewhat successful, and quite a few of course outright fail. Second obvious fact: there is an incredibly wide divergence of caliber and quality for the three core elements of each startup—team, product, and market. At any given startup, the team will range from outstanding to remarkably flawed; the product will range from a masterpiece of engineering to barely functional; and the market will range from booming to comatose. And so you start to wonder—what correlates the most to success—team, product, or market?  Or, more bluntly, what causes success?  And, for those of us who are students of startup failure—what’s most dangerous: a bad team, a weak product, or a poor market? Let’s start by defining terms. The caliber of a startup team can be defined as the suitability of the CEO, senior staff, engineers, and other key staff relative to the opportunity in front of them. You look at a startup and ask, will this team be able to optimally execute against their opportunity?  I focus on effectiveness as opposed to experience, since the history of the tech industry is full of highly successful startups that were staffed primarily by people who had never “done it before”. The quality of a startup’s product can be defined as how impressive the product is to one customer or user who actually uses it: How easy is the product to use?  How feature rich is it?  How fast is it?  How extensible is it?  How polished is it?  How many (or rather, how few) bugs does it have? The size of a startup’s market is the the number, and growth rate, of those customers or users for that product. (Let’s assume for this discussion that you can make money at scale—that the cost of acquiring a customer isn’t higher than the revenue that customer will generate.) Some people have been objecting to my classification as follows: “How great can a product be if nobody wants it?”  In other words, isn’t the quality of a product defined by how appealing it is to lots of customers? No.  Product quality and market size are completely different. Here’s the classic scenario: the world’s best software application for an operating system nobody runs.  Just ask any software developer targeting the market for BeOS, Amiga, OS/2, or NeXT applications what the difference is between great product and big market. If you ask entrepreneurs or VCs which of team, product, or market is most important, many will say team.  This is the obvious answer, in part because in the beginning of a startup, you know a lot more about the team than you do the product, which hasn’t been built yet, or the market, which hasn’t been explored yet. Plus, we’ve all been raised on slogans like “people are our most important asset”—at least in the US, pro-people sentiments permeate our culture, ranging from high school self-esteem programs to the Declaration of Independence’s inalienable rights to life, liberty, and the pursuit of happiness—so the answer that team is the most important feels right. And who wants to take the position that people don’t matter? On the other hand, if you ask engineers, many will say product.  This is a product business, startups invent products, customers buy and use the products.  Apple and Google are the best companies in the industry today because they build the best products.  Without the product there is no company.  Just try having a great team and no product, or a great market and no product.  What’s wrong with you?  Now let me get back to work on the product. Personally, I’ll take the third position—I’ll assert that market is the most important factor in a startup’s success or failure. In a great market—a market with lots of real potential customers—the market pulls product out of the startup. The market needs to be fulfilled and the market will be fulfilled, by the first viable product that comes along. The product doesn’t need to be great; it just has to basically work.  And, the market doesn’t care how good the team is, as long as the team can produce that viable product. In short, customers are knocking down your door to get the product; the main goal is to actually answer the phone and respond to all the emails from people who want to buy. And when you have a great market, the team is remarkably easy to upgrade on the fly. This is the story of search keyword advertising, and Internet auctions, and TCP/IP routers. Conversely, in a terrible market, you can have the best product in the world and an absolutely killer team, and it doesn’t matter—you’re going to fail. You’ll break your pick for years trying to find customers who don’t exist for your marvelous product, and your wonderful team will eventually get demoralized and quit, and your startup will die. This is the story of videoconferencing, and workflow software, and micropayments. In honor of Andy Rachleff, formerly of Benchmark Capital, who crystallized this formulation for me, let me present Rachleff’s Law of Startup Success: The #1 company-killer is lack of market. Andy puts it this way: When a great team meets a lousy market, market wins. When a lousy team meets a great market, market wins. When a great team meets a great market, something special happens. You can obviously screw up a great market—and that has been done, and not infrequently—but assuming the team is baseline competent and the product is fundamentally acceptable, a great market will tend to equal success and a poor market will tend to equal failure.  Market matters most. And neither a stellar team nor a fantastic product will redeem a bad market. Well, first question: Since team is the thing you have the most control over at the start, and everyone wants to have a great team, what does a great team actually get you? Hopefully a great team gets you at least an OK product, and ideally a great product. However, I can name you a bunch of examples of great teams that totally screwed up their products.  Great products are really, really hard to build. Hopefully a great team also gets you a great market—but I can also name you lots of examples of great teams that executed brilliantly against terrible markets and failed.  Markets that don’t exist don’t care how smart you are. In my experience, the most frequent case of great team paired with bad product and/or terrible market is the second- or third-time entrepreneur whose first company was a huge success.  People get cocky, and slip up.  There is one high-profile, highly successful software entrepreneur right now who is burning through something like $80 million in venture funding in his latest startup and has practically nothing to show for it except for some great press clippings and a couple of beta customers—because there is virtually no market for what he is building. Conversely, I can name you any number of weak teams whose startups were highly successful due to explosively large markets for what they were doing. Finally, to quote Tim Shephard: “A great team is a team that will always beat a mediocre team, given the same market and product.” Second question: Can’t great products sometimes create huge new markets? This is a best case scenario, though. VMWare is the most recent company to have done it—VMWare’s product was so profoundly transformative out of the gate that it catalyzed a whole new movement toward operating system virtualization, which turns out to be a monster market. And of course, in this scenario, it also doesn’t really matter how good your team is, as long as the team is good enough to develop the product to the baseline level of quality the market requires and get it fundamentally to market. Understand I’m not saying that you should shoot low in terms of quality of team, or that VMWare’s team was not incredibly strong—it was, and is.  I’m saying, bring a product as transformative as VMWare’s to market and you’re going to succeed, full stop. Short of that, I wouldn’t count on your product creating a new market from scratch. Third question: as a startup founder, what should I do about all this? Let’s introduce Rachleff’s Corollary of Startup Success: The only thing that matters is getting to product/market fit. Product/market fit means being in a good market with a product that can satisfy that market. You can always feel when product/market fit isn’t happening.  The customers aren’t quite getting value out of the product, word of mouth isn’t spreading, usage isn’t growing that fast, press reviews are kind of “blah”, the sales cycle takes too long, and lots of deals never close. And you can always feel product/market fit when it’s happening.  The customers are buying the product just as fast as you can make it—or usage is growing just as fast as you can add more servers.  Money from customers is piling up in your company checking account.  You’re hiring sales and customer support staff as fast as you can.  Reporters are calling because they’ve heard about your hot new thing and they want to talk to you about it.  You start getting entrepreneur of the year awards from Harvard Business School.  Investment bankers are staking out your house.  You could eat free for a year at Buck’s. Lots of startups fail before product/market fit ever happens. My contention, in fact, is that they fail because they never get to product/market fit. Carried a step further, I believe that the life of any startup can be divided into two parts: before product/market fit (call this “BPMF”) and after product/market fit (“APMF”). When you are BPMF, focus obsessively on getting to product/market fit. Do whatever is required to get to product/market fit.  Including changing out people, rewriting your product, moving into a different market, telling customers no when you don’t want to, telling customers yes when you don’t want to, raising that fourth round of highly dilutive venture capital—whatever is required. When you get right down to it, you can ignore almost everything else. I’m not suggesting that you do ignore everything else—just that judging from what I’ve seen in successful startups, you can. Whenever you see a successful startup, you see one that has reached product/market fit—and usually along the way screwed up all kinds of other things, from channel model to pipeline development strategy to marketing plan to press relations to compensation policies to the CEO sleeping with the venture capitalist.  And the startup is still successful. Conversely, you see a surprising number of really well-run startups that have all aspects of operations completely buttoned down, HR policies in place, great sales model, thoroughly thought-through marketing plan, great interview processes, outstanding catered food, 30\" monitors for all the programmers, top tier VCs on the board—heading straight off a cliff due to not ever finding product/market fit. Ironically, once a startup is successful, and you ask the founders what made it successful, they will usually cite all kinds of things that had nothing to do with it.  People are terrible at understanding causation.  But in almost every case, the cause was actually product/market fit. Because, really, what else could it possibly be? [Editorial note: this post obviously raises way more questions than it answers.  How exactly do you go about getting to product/market fit if you don’t hit it right out of the gate?  How do you evaluate markets for size and quality, especially before they’re fully formed?  What actually makes a product “fit” a market?  What role does timing play?  How do you know when to change strategy and go after a different market or build a different product?  When do you need to change out some or all of your team?  And why can’t you count on on a great team to build the right product and find the right market?  All these topics will be discussed in future posts in this series.] This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"The Moby Dick theory of big companies Posted on June 27, 2007 “There she blows,” was sung out from the mast-head. “Where away?” demanded the captain. “Three points off the lee bow, sir.” “Raise up your wheel. Steady!” “Steady, sir.” “Mast-head ahoy! Do you see that whale now?” “Ay ay, sir! A shoal of Sperm Whales! There she blows! There she breaches!” “Sing out! sing out every time!” “Ay Ay, sir! There she blows! there—there—THAR she blows—bowes—bo-o-os!” “Two miles and a half.” “Thunder and lightning! so near! Call all hands.” — J. Ross Browne’s Etchings of a Whaling Cruize, 1846 There are times in the life of a startup when you have to deal with big companies. Maybe you’re looking for a partnership or distribution deal. Perhaps you want an investment. Sometimes you want a marketing or sales alliance. From time to time you need a big company’s permission to do something. Or maybe a big company has approached you and says it wants to buy your startup. The most important thing you need to know going into any discussion or interaction with a big company is that you’re Captain Ahab, and the big company is Moby Dick. “Scarcely had we proceeded two days on the sea, when about sunrise a great many Whales and other monsters of the sea, appeared. Among the former, one was of a most monstrous size. ... This came towards us, open-mouthed, raising the waves on all sides, and beating the sea before him into a foam.” — Tooke’s Lucian, “The True History” When Captain Ahab went in search of the great white whale Moby Dick, he had absolutely no idea whether he would find Moby Dick, whether Moby Dick would allow himself to be found, whether Moby Dick would try to immediately capsize the ship or instead play cat and mouse, or whether Moby Dick was off mating with his giant whale girlfriend. What happened was entirely up to Moby Dick. And Captain Ahab would never be able explain to himself or anyone else why Moby Dick would do whatever it was he’d do. You’re Captain Ahab, and the big company is Moby Dick. “Clap eye on Captain Ahab, young man, and thou wilt find that he has only one leg.” “What do you mean, sir? Was the other one lost by a whale?” “Lost by a whale! Young man, come nearer to me: it was devoured, chewed up, crunched by the monstrousest parmacetty that ever chipped a boat!—ah, ah!” The behavior of any big company is largely inexplicable when viewed from the outside. I always laugh when someone says, “Microsoft is going to do X”, or “Google is going to do Y”, or “Yahoo is going to do Z”. Odds are, nobody inside Microsoft, Google, or Yahoo knows what Microsoft, Google, or Yahoo is going to do in any given circumstance on any given issue. Sure, maybe the CEO knows, if the issue is really big, but you’re probably not dealing at the CEO level, and so that doesn’t matter. The inside of any big company is a very, very complex system consisting of many thousands of people, of whom at least hundreds and probably thousands are executives who think they have some level of decision-making authority. On any given issue, many people inside the company are going to get some kind of vote on what happens—maybe 8 people, maybe 10, 15, 20, sometimes many more. When I was at IBM in the early 90’s, they had a formal decision making process called “concurrence”—on any given issue, a written list of the 50 or so executives from all over the company who would be affected by the decision in any way, no matter how minor, would be assembled, and any one of those executives could “nonconcur” and veto the decision. That’s an extreme case, but even a non-extreme version of this process—and all big companies have one; they have to—is mind-bendingly complex to try to understand, even from the inside, let alone the outside. “... and the breath of the whale is frequently attended with such an insupportable smell, as to bring on a disorder of the brain.” — Ulloa’s South America You can count on there being a whole host of impinging forces that will affect the dynamic of decision-making on any issue at a big company. The consensus building process, trade-offs, quids pro quo, politics, rivalries, arguments, mentorships, revenge for past wrongs, turf-building, engineering groups, product managers, product marketers, sales, corporate marketing, finance, HR, legal, channels, business development, the strategy team, the international divisions, investors, Wall Street analysts, industry analysts, good press, bad press, press articles being written that you don’t know about, customers, prospects, lost sales, prospects on the fence, partners, this quarter’s sales numbers, this quarter’s margins, the bond rating, the planning meeting that happened last week, the planning meeting that got cancelled this week, bonus programs, people joining the company, people leaving the company, people getting fired by the company, people getting promoted, people getting sidelined, people getting demoted, who’s sleeping with whom, which dinner party the CEO went to last night, the guy who prepares the Powerpoint presentation for the staff meeting accidentally putting your startup’s name in too small a font to be read from the back of the conference room... You can’t possibly even identify all the factors that will come to bear on a big company’s decision, much less try to understand them, much less try to influence them very much at all. “The larger whales, whalers seldom venture to attack. They stand in so great dread of some of them, that when out at sea they are afraid to mention even their names, and carry dung, lime-stone, juniper-wood, and some other articles of the same nature in their boats, in order to terrify and prevent their too near approach.” — Uno Von Troil’s Letters on Banks’s and Solander’s Voyage to Iceland In 1772 Moby Dick might stalk you for three months, then jump out of the water and raise a huge ruckus, then vanish for six months, then come back and beach your whole boat, or alternately give you the clear shot you need to harpoon his giant butt. And you’re never going to know why. A big company might study you for three months, then approach you and tell you they want to invest in you or partner with you or buy you, then vanish for six months, then come out with a directly competitive product that kills you, or alternately acquire you and make you and your whole team rich. And you’re never going to know why. The upside of dealing with a big company is that there’s potentially a ton of whale meat in it for you. Sorry, mixing my metaphors. The right deal with the right big company can have a huge impact on a startup’s success. “And what thing soever besides cometh within the chaos of this monster’s mouth, be it beast, boat, or stone, down it goes all incontinently that foul great swallow of his, and perisheth in the bottomless gulf of his paunch.” — Holland’s Plutarch’s Morals The downside of dealing with a big company is that he can capsize you—maybe by stepping on you in one way or another and killing you, but more likely by wrapping you up in a bad partnership that ends up holding you back, or just making you waste a huge amount of time in meetings and get distracted from your core mission. First, don’t do startups that require deals with big companies to make them successful. The risk of never getting those deals is way too high, no matter how hard you are willing to work at it. And even if you get the deals, they probably won’t work out the way you hoped. “‘Stern all!’ exclaimed the mate, as upon turning his head, he saw the distended jaws of a large Sperm Whale close to the head of the boat, threatening it with instant destruction;—‘Stern all, for your lives!’” — Wharton the Whale Killer Second, never assume that a deal with a big company is closed until the ink hits the paper and/or the cash hits the company bank account. There is always something that can cause a deal that looks like it’s closed, to suddenly get blown to smithereens—or vanish without a trace. At day-break, the three mast-heads were punctually manned afresh. “D’ye see him?” cried Ahab after allowing a little space for the light to spread. Third, be extremely patient. Big companies play “hurry up and wait” all the time. In the last few years I’ve dealt with one big East Coast technology company in particular that has played “hurry up and wait” with me at least four separate times—including a mandatory immediate cross-country flight just to have dinner with the #2 executive—and has never followed through on anything. If you want a deal with a big company, it is probably going to take a lot longer to put together than you think. “My God! Mr. Chace, what is the matter?” I answered, “we have been stove by a whale.” — “Narrative of the Shipwreck of the Whale Ship Essex of Nantucket, Which Was Attacked and Finally Destroyed by a Large Sperm Whale in the Pacific Ocean” by Owen Chace of Nantucket, First Mate of Said Vessel, New York, 1821 Fourth, beware bad deals. I am thinking of one high-profile Internet startup in San Francisco right now that is extremely promising, has great technology and a unique offering, that did two big deals early with high-profile big company partners, and has become completely hamstrung in its ability to execute on its core business as a result. Fifth, never, ever assume a big company will do the obvious thing. What is obvious to you—or any outsider—is probably not obvious on the inside, once all the other factors that are involved are taken into account. Sixth, be aware that big companies care a lot more about what other big companies are doing than what any startup is doing. Hell, big companies often care a lot more about what other big companies are doing than they care about what their customers are doing. Moby Dick cared a lot more about what the other giant white whales were doing than those annoying little people in that flimsy boat. “The Whale is harpooned to be sure; but bethink you, how you would manage a powerful unbroken colt, with the mere appliance of a rope tied to the root of his tail.” — A Chapter on Whaling in Ribs and Trucks Seventh, if doing deals with big companies is going to be a key part of your strategy, be sure to hire a real pro who has done it before. Only the best and most experienced whalers had a chance at taking down Moby Dick. This is why senior sales and business development people get paid a lot of money. They’re worth it. “Oh! Ahab,” cried Starbuck, “not too late is it, even now, the third day, to desist. See! Moby Dick seeks thee not. It is thou, thou, that madly seekest him!” Eighth, don’t get obsessed. Don’t turn into Captain Ahab. By all means, talk to big companies about all kinds of things, but always be ready to have the conversation just drop and to return to your core business. Rare is the startup where a deal with a big company leads to success, or lack thereof leads to huge failure. (However, see also Microsoft and Digital Research circa 1981. Talk about a huge whale.) Diving beneath the settling ship, the whale ran quivering along its keel; but turning under water, swiftly shot to the surface again, far off the other bow, but within a few yards of Ahab’s boat, where, for a time, the whale lay quiescent. “...Towards thee I roll, thou all-destroying but unconquering whale; to the last I grapple with thee; from hell’s heart I stab at thee; for hate’s sake I spit my last breath at thee. Sink all coffins and all hearses to one common pool! and since neither can be mine, let me then tow to pieces, while still chasing thee, though tied to thee, thou damned whale! THUS, I give up the spear!” The harpoon was darted; the stricken whale flew forward; with igniting velocity the line ran through the grooves;—ran foul. Ahab stooped to clear it; he did clear it; but the flying turn caught him round the neck, and voicelessly as Turkish mutes bowstring their victim, he was shot out of the boat, ere the crew knew he was gone. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"How much funding is too little? Too much? Posted on July  3, 2007 In this post, I answer these questions: How much funding for a startup is too little? How much funding for a startup is too much? And how can you know, and what can you do about it? The first question to ask is, what is the correct, or appropriate, amount of funding for a startup? The answer to that question, in my view, is based my theory that a startup’s life can be divided into two parts—Before Product/Market Fit, and After Product/Market Fit. Before Product/Market Fit, a startup should ideally raise at least enough money to get to Product/Market Fit. After Product/Market Fit, a startup should ideally raise at least enough money to fully exploit the opportunity in front of it, and then to get to profitability while still fully exploiting that opportunity. I will further argue that the definition of “at least enough money” in each case should include a substantial amount of extra money beyond your default plan, so that you can withstand bad surprises.  In other words, insurance.  This is particularly true for startups that have not yet achieved Product/Market Fit, since you have no real idea how long that will take. These answers all sound obvious, but in my experience, a surprising number of startups go out to raise funding and do not have an underlying theory of how much money they are raising and for precisely what purpose they are raising it. What if you can’t raise that much money at once? Obviously, many startups find that they cannot raise enough money at one time to accomplish these objectives—but I believe this is still the correct underlying theory for how much money a startup should raise and around which you should orient your thinking. If you are Before Product/Market Fit and you can’t raise enough money in one shot to get to Product/Market Fit, then you will need get as far as you can on each round and demonstrate progress towards Product/Market Fit when you raise each new round. If you are After Product/Market Fit and you can’t raise enough money in one shot to fully exploit your opportunity, you have a high-class problem and will probably—but not definitely—find that it gets continually easier to raise new money as you need it. What if you don’t want to raise that much money at once? You can argue you should raise a smaller amount of money at a time, because if you are making progress—either BPMF or APMF—you can raise the rest of the money you need later, at a higher valuation, and give away less of the company. This is the reason some entrepreneurs who can raise a lot of money choose to hold back. Here’s why you shouldn’t do that: What are the consequences of not raising enough money? Not raising enough money risks the survival of your company, for the following reasons: First, you may have—and probably will have—unanticipated setbacks within your business. Maybe a new product release slips, or you have unexpected quality issues, or one of your major customers goes bankrupt, or a challenging new competitor emerges, or you get sued by a big company for patent infringement, or you lose a key engineer. Second, the funding window may not be open when you need more money. Sometimes investors are highly enthusiastic about funding new businesses, and sometimes they’re just not. When they’re not—when the “window is shut”, as the saying goes—it is very hard to convince them otherwise, even though those are many of the best times to invest in startups because of the prevailing atmosphere of fear and dread that is holding everyone else back. Those of us who were in startups that lived through 2001-2003 know exactly what this can be like. Third, something completely unanticipated, and bad, might happen. Another major terrorist attack is the one that I frankly worry about the most.  A superbug.  All-out war in the Middle East.  North Korea demonstrating the ability to launch a true nuclear-tipped ICBM.  Giant flaming meteorites.  Such worst-case scenarios will not only close the funding window, they might keep it closed for a long time. Funny story: it turns out that a lot of Internet business models from the late 90’s that looked silly at the time actually work really well—either in their original form or with some tweaking. And there are quite a few startups from the late 90’s that are doing just great today—examples being OpenTable (which is about to go public) and TellMe (which recently sold itself to Microsoft for $800 million), and my own company Opsware—which would be bankrupt today if we hadn’t raised a ton of money when we could, and instead just did its first $100 million revenue year and has a roughly $1 billion public market value. I’ll go so far as to say that the big difference between the startups from that era that are doing well today versus the ones that no longer exist, is that the former group raised a ton of money when they could, and the latter did not. So how much money should I raise? In general, as much as you can. Without giving away control of your company, and without being insane. Entrepreneurs who try to play it too aggressive and hold back on raising money when they can because they think they can raise it later occasionally do very well, but are gambling their whole company on that strategy in addition to all the normal startup risks. Suppose you raise a lot of money and you do really well.  You’ll be really happy and make a lot of money, even if you don’t make quite as much money as if you had rolled the dice and raised less money up front. Suppose you don’t raise a lot of money when you can and it backfires.  You lose your company, and you’ll be really, really sad. Is it really worth that risk? There is one additional consequence to raising a lot of money that you should bear in mind, although it is more important for some companies than others. That is liquidation preference.  In the scenario where your company ultimately gets acquired: the more money you raise from outside investors, the higher the acquisition price has to be for the founders and employees to make money on top of the initial payout to the investors. In other words, raising a lot of money can make it much harder to effectively sell your company for less than a very high price, which you may not be able to get when the time comes. If you are convinced that your company is going to get bought, and you don’t think the purchase price will be that high, then raising less money is a good idea purely in terms of optimizing for your own financial outcome.  However, that strategy has lots of other risks and will be addressed in another entertaining post, to be entitled “Why building to flip is a bad idea”. Taking these factors into account, though, in a normal scenario, raising more money rather than less usually makes sense, since you are buying yourself insurance against both internal and external potential bad events—and that is more important than worrying too much about dilution or liquidation preference. How much money is too much? There are downside consequences to raising too much money. I already discussed two of them—possibly incremental dilution (which I dismissed as a real concern in most situations), and possibly excessively high liquidation preference (which should be monitored but not obsessed over). The big downside consequence to too much money, though, is cultural corrosion. You don’t have to be in this industry very long before you run into the startup that has raised a ton of money and has become infected with a culture of complacency, laziness, and arrogance. Raising a ton of money feels really good—you feel like you’ve done something, that you’ve accomplished something, that you’re successful when a lot of other people weren’t. And of course, none of those things are true. Raising money is never an accomplishment in and of itself—it just raises the stakes for all the hard work you would have had to do anyway: actually building your business. Some signs of cultural corrosion caused by raising too much money: Hiring too many people—slows everything down and makes it much harder for you to react and change.  You are almost certainly setting yourself up for layoffs in the future, even if you are successful, because you probably won’t accurately allocate the hiring among functions for what you will really need as your business grows. Lazy management culture—it is easy for a management culture to get set where the manager’s job is simply to hire people, and then every other aspect of management suffers, with potentially disastrous long-term consequences to morale and effectiveness. Engineering team bloat—another side effect of hiring too many people; it’s very easy for engineering teams to get too large, and it happens very fast.  And then the “Mythical Man Month” effect kicks in and everything slows to a crawl, your best people get frustrated and quit, and you’re in huge trouble. Lack of focus on product and customers—it’s a lot easier to not be completely obsessed with your product and your customers when you have a lot of money in the bank and don’t have to worry about your doors closing imminently. Too many salespeople too soon—out selling a product that isn’t quite ready yet, hasn’t yet achieved Product/Market Fit—alienating early adopters and making it much harder to go back when the product does get right. Product schedule slippage—what’s the urgency?  We have all this cash!  Creating a golden opportunity for a smaller, scrappier startup to come along and kick your rear. So what should you do if you do raise a lot of money? As my old boss Jim Barksdale used to say, the main thing is to keep the main thing the main thing—be just as focused on product and customers when you raise a lot of money as you would be if you hadn’t raised a lot of money. Easy to say, hard to do, but worth it. Continue to run as lean as you can, bank as much of the money as possible, and save it for a rainy day—or a nuclear winter. Tell everyone inside the company, over and over and over, until they can’t stand it anymore, and then tell them some more, that raising money does not count as an accomplishment and that you haven’t actually done anything yet other than raise the stakes and increase the pressure. Illustrate that point by staying as scrappy as possible on material items—office space, furniture, etc.  The two areas to splurge, in my opinion, are big-screen monitors and ergonomic office chairs.  Other than that, it should be Ikea all the way. The easiest way to lose control of your spending when you raise too much money is to hire too many people.  The second easiest way is to pay people too much.  Worry more about the first one than the second one; more people multiply spending a lot faster than a few raises. Generally speaking, act like you haven’t raised nearly as much money as you actually have—in how you talk, act, and spend. In particular, pay close attention to deadlines.  The easiest thing to go wrong when you raise a lot of money is that suddenly things don’t seem so urgent anymore.  Oh, they are.  Competitors still lurk behind every bush and every tree, metaphorically speaking.  Keeping moving fast if you want to survive. There are certain startups that raised an excessive amount of money, proceeded to spend it like drunken sailors, and went on to become hugely successful.  Odds are, you’re not them.  Don’t bet your company on it. There are a lot more startups that raised an excessive amount of money, burned through it, and went under. Remember Geocast?  General Magic?  Microunity?  HAL?  Trilogy Systems? This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Why a startup’s initial business plan doesn’t matter that much Posted on July 31, 2007 A startup’s initial business plan doesn’t matter that much, because it is very hard to determine up front exactly what combination of product and market will result in success. By definition you will be doing something new, in a world that is a very uncertain place.  You are simply probably not going to know whether your initial idea will work as a product and a business, or not.  And you will probably have to rapidly evolve your plan—possibly every aspect of it—as you go. (The military has a saying that expresses the same concept—“No battle plan ever survives contact with the enemy.”  In this case, your enemy is the world at large.) It is therefore much more important for a startup to aggressively seek out a big market, and product/market fit within that market, once the startup is up and running, than it is to try to plan out what you are going to do in great detail ahead of time. The history of successful startups is quite clear on this topic. Normally I would simply point to Microsoft, which started as a programming tools company before IBM all but forced Bill Gates to go into the operating system business, or Oracle, which was a consultancy for the CIA before Larry Ellison decided to productize the relational database, or Intel, which was a much smaller company focused on the memory chip market until the Japanese onslaught of the mid-80’s forced Andy Grove to switch focus to CPUs. However, I’ve recently been reading Randall Stross’s marvelous book about Thomas Edison, The Wizard of Menlo Park. Edison’s first commercially viable breakthrough invention was the phonograph—the forerunner to what you kids know as the record player, the turntable, the Walkman, the CD player, and the IPod.  Edison went on, of course, to become one of the greatest inventors and innovators of all time. As our story begins, Edison, an unknown inventor running his own startup, is focused on developing better hardware for telegraph operators.  He is particularly focused on equipment for telegraph operators to be able to send voice messages over telegraph lines. The day after Edison had noted the idea for recording voice messages received by a telegraphy office, he came up with a variation.  That evening, on 18 July 1877, when [his lab’s] midnight dinner had been consumed... [Edison] turned around to face [his assistant Charles Batchelor] and casually remarked, “Batch, if we had a point on this, we could make a record of some material which we could afterwards pull under the point, and it would give us the speech back.” As soon as Edison had pointed it out, it seemed so obvious that they did not pause to appreciate... the suggestion.  Everyone jumped up to rig a test... within an hour, they had the gizmo set up on the table... Edison sat down, leaned into the mouthpiece... [and] delivered the stock phrase the lab used to test telephone diaphragms: “Mary had a little lamb.” ...Batchelor reinserted the beginning of the [strip on which the phrase had been recorded]... out came “ary ad ell am.”  “It was not fine talking,” Batchelor recalled, “but the shape of it was there.”  The men celebrated with a whoop, shook hands with one another, and worked on.  By breakfast the following morning, they had succeeded in getting clear articulation from waxed paper, the first recording medium—in the first midnight recording session. ...The discovery was treated suprisingly casually in the lab’s notebooks... It was a singular moment in the modern history of invention, but, in the years that would follow, Edison would never tell the story the way it actually unfolded that summer, always moving the events from July 1877 to December.  We may guess the reason why: in July, he and his assistants failed to appreciate what they had discovered.  At the time, they were working feverishly to develop a set of working telephones to show their best prospect... Western Union... There was no time to pause and reflect on the incidental invention of what was the first working model of the phonograph... The invention continued to be labeled in the notebooks with the broader rubric “speaking telegraph”, reflecting the assumption that it would be put to use in the telegraph office, recording messages.  An unidentified staff member draw up a list of possible names for the machine, which included: tel-autograph, tel-autophone, “chronophone = time-announcer = speaking clock”, “didaskophone = teaching speaker = portable teacher”, “glottophone = language sounder or speaker”, “climatophone = weather announcer”, “klangophone = bird cry sounder”, “hulagmophone = barking sounder”... ...In October 1877, [Edison] wrote his father that he was “at present very hard up for cash,” but if his “speaking telegraph” was successful, he would receive an advance on royalties.  The commercial potential of his still-unnamed recording apparatus remained out of sight... [A description of the phonograph in Scientific American in early November] set off a frenzy in America and Europe.  The New York Sun was fascinated by the metaphysical implications of an invention that could play “echoes from dead voices”.  The New York Times predicted [in an eerie foreshadowing of their bizarre coverage of the Internet in the mid-1990’s] that a large business would develop in “bottled sermons”, and wealthy connoisseurs would take pride in keeping “a well-stocked oratorical cellar.” ...Such was the authority of Scientific American’s imprimatur that all of this extraordinary attention was lavished not on the first working phonograph made for public inspection, but merely a description supplied by Edison’s assistant. ...By late November, Edison and his staff had caught onto the phonograph’s commercial potential as a gadget for entertainment... a list of possible uses for the phonograph was noted [by Edison and his staff], assembled apparently by free association: speaking toys (dogs, reptiles, humans), whistling toy train engines, music boxes, clocks and watches that announced the time.  There was even an inkling of the future importance of personal music collections, here described as the machine for the whole family to enjoy, equipped with a thousand [music recordings], “giving endless amusement.” ...The first actual model, however, remained to be built... On 4 December 1877, Batchelor’s diary laconically noted, “[staff member John Kruesi] made phonograph today”; it received no more notice than the other entry, “working on speaking tel”, the invention [for telegraph operators] that continued to be at the top of the laboratory’s research agenda... ...On 7 December 1877, [Edison] walked into the New York office of Scientific American, placed a small machine on the editor’s desk, and with about a dozen people gathered around, turned the crank.  “How do you do?” asked the machine, introducing itself crisply.  “How do you like the phonograph?”  It itself was feeling quite well, it assured its listeners, and then cordially bid everyone a good night... ...Having long worked within the world of telegraphic equipment, [Edison] had been perfectly placed to receive the technical inspiration for the phonograph.  But that same world, oriented to a handful of giant industrial customers, had nothing in common with the consumer marketplace... The story goes on and on—and you should read the book; it’s all like this. If Thomas Edison didn’t know what he had when he invented the phonograph while he thought he was trying to create better industrial equipment for telegraph operators... ...what are the odds that you—or any entrepreneur—is going to have it all figured out up front? This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Hiring, managing, promoting, and firing executives Posted on August 28, 2007 One of the most critical things a startup founder must do is develop a top-notch executive team.  This is a topic that could fill a whole book, but in this post I will provide specific guidelines on how to hire, manage, promote, and fire executives in a startup based on my personal observations and experiences. For the purposes of this post, definitions:  An executive is a leader—someone who runs a function within the company and has primary responsibility for an organization within the company that will contribute to the company’s success or failure.  The difference between an executive and a manager is that the executive has a higher degree of latitude to organize, make decisions, and execute within her function than a manager.  The manager may ask what the right thing to do is; the executive should know. The general theory of executives, like managers, is, per Andy Grove: the output of an executive is the output of her organization.  Therefore, the primary task of an executive is to maximize the output of her organization.  However, in a startup, a successful executive must accomplish three other critical tasks simultaneously: Build her organization—typically when an executive arrives or is promoted into her role at a startup, she isn’t there to be a caretaker; rather she must build her organization, often from scratch.  This is a sharp difference from many big company executives, who can spend their entire careers running organizations other people built—often years or decades earlier. Be a primary individual contributor—a startup executive must “roll up her sleeves” and produce output herself.  There are no shortage of critical things to be done at a startup, and an executive who cannot personally produce while simultaneously building and running her organization typically will not last long.  Again, this is a sharp difference from many big companies, where executives often serve more as administrators and bureaucrats. Be a team player—a startup executive must take personal responsibility for her relationships with her peers and people throughout the startup, in all functions and at all levels.  Big companies can often tolerate internal rivalries and warfare; startups cannot. Being a startup executive is not an easy job.  The rewards are substantial—the ability to contribute directly to the startups’s success; the latitude to build and run an organization according to her own theories and principles; and a meaningful equity stake that can lead to personal financial independence if the startup succeeds—but the responsibilities are demanding and intense. First, if you’re not sure whether you need an executive for a function, don’t hire one. Startups, particularly well-funded startups, often hire executives too early.  Particularly before a startup has achieved product/market fit, it is often better to have a highly motivated manager or director running a function than an executive. Hiring an executive too quickly can lead to someone who is really expensive, sitting there in the middle of the room, doing very little.  Not good for the executive, not good for the rest of the team, not good for the burn rate, and not good for the company. Hire an executive only when it’s clear that you need one: when an organization needs to get built; when hiring needs to accelerate; when you need more processes and structure and rigor to how you do things. Second, hire the best person for the next nine months, not the next three years. I’ve seen a lot of startups overshoot on their executive hires.  They need someone to build the software development team from four people to 30 people over the next nine months, so they hire an executive from a big company who has been running 400 people.  That is usually death. Hire for what you need now—and for roughly the next nine months.  At the very least, you will get what you need now, and the person you hire may well be able to scale and keep going for years to come. In contrast, if you overhire—if you hear yourself saying, “this person will be great when we get bigger”—you are most likely hiring someone who, best case, isn’t that interested in doing things at the scale you need, and worst case, doesn’t know how. Third, whenever possible, promote from within. Great companies develop their own executives.  There are several reasons for this: You get to develop your best people and turn them into executives, which is great for both them and you—this is the single best, and usually the only, way to hold onto great people for long periods of time. You ensure that your executives completely know and understand your company culture, strategy, and ethics. Your existing people are the “devil you know”—anyone new coming from outside is going to have flaws, often really serious ones, but you probably won’t figure out what they are until after you’ve hired them.  With your existing people, you know, and you minimize your odds of being shocked and appalled. Of course, this isn’t always possible.  Which segues us directly into... Fourth, my list of the key things to look at, and for, when evaluating executive candidates: Look for someone who is hungry and driven—someone who wants a shot at doing “their thing”.  Someone who has been an up and comer at a midsized company but wants a shot at being a primary executive at a startup can be a great catch. Flip side of that: beware people who have “done it before”.  Sometimes you do run into someone who has been VP Engineering at four companies and loves it and wants to do it at a fifth company.  More often, you will be dealing with someone who is no longer hungry and driven.  This is a very, very big problem to end up with—be very careful. Don’t disqualify someone based on ego or cockiness—as long as she’s not insane.  Great executives are high-ego—you want someone driven to run things, driven to make decisions, confident in herself and her abilities.  I don’t mean loud and obnoxious, I mean assured and determined, bleeding over into cocky.  If a VC’s ideal investment is a company that will succceed without him, then your ideal executive hire is someone who will succeed without you. Beware hiring a big company executive for a startup.  The executive skill sets required for a big company vs a startup are very different.  Even great big company executives frequently have no idea what to do once they arrive at a startup. In particular, really beware hiring an executive from an incredibly successful big company.  This is often very tempting—who wouldn’t want to bring onboard someone who sprinkles some of that IBM (in the 80’s), Microsoft (in the 90’s), or Google (today) fairy dust on your startup?  The issue is that people who have been at an incredibly successful big company often cannot function in a normal, real world, competitive situation where they don’t start every day with 80% market share.  Back in the 80’s, you often heard, “never hire anyone straight out of IBM—first, let them go somewhere else and fail, and then hire them”.  Believe it. This probably goes without saying, but look for a pattern of output—accomplishment.  Validate it by reference checking peers, reports, and bosses.  Along the way, reference check personality and teamwork, but look first and foremost for a pattern of output. Fifth, by all means, use an executive recruiter, but for sourcing, not evaluation. There are some executive recruiters who are actually really good at evaluation.  Others are not.  It’s beside the point.  It’s your job to evaluate and make the decision, not the recruiter’s. I say this because I have never met a recruiter who lacks confidence in his ability to evaluate candidates and pass judgment on who’s right for a given situation.  This can lull a startup founder into relying on the recruiter’s judgment instead of really digging in and making your own decision.  Betting that your recruiter is great at evaluation is not a risk you want to take.  You’re the one who has to fire the executive if it doesn’t work out. Sixth, be ready to pay market compensation, including more cash compensation than you want, but watch for red flags in the compensation discussion. You want someone focused on upside—on building a company.  That means, a focus on their stock option package first and foremost. Watch out for candidates who want egregious amounts of cash, high bonuses, restricted stock, vacation days, perks, or—worst of all—guaranteed severance.  A candiate who is focused on those things, as opposed to the option package, is not ready to do a startup. On a related note, be careful about option accceleration in the event of change of control.  This is often reasonable for support functions such as finance, legal, and HR where an acquirer would most likely not have a job for the startup executive in any of those functions.  But this is not reasonable, in my view, for core functions such as engineering, product management, marketing, or sales.  You don’t want your key executives focused on selling the company—unless of course you want them focused on selling the company.  Make your acceleration decisions accordingly. Seventh, when hiring the executive to run your former specialty, be careful you don’t hire someone weak on purpose. This sounds silly, but you wouldn’t believe how often it happens.  The CEO who used to be a product manager who has a weak product management executive.  The CEO who used to be in sales who has a weak sales executive.  The CEO who used to be in marketing who has a weak marketing executive. I call this the “Michael Eisner Memorial Weak Executive Problem”—after the CEO of Disney who had previously been a brilliant TV network executive.  When he bought ABC at Disney, it promptly fell to fourth place.  His response?  “If I had an extra two days a week, I could turn around ABC myself.”  Well, guess what, he didn’t have an extra two days a week. A CEO—or a startup founder—often has a hard time letting go of the function that brought him to the party.  The result: you hire someone weak into the executive role for that function so that you can continue to be “the man”—consciously or subconsciously.  Don’t let it happen to you—make sure the person you hire into that role is way better than you used to be. Eighth, recognize that hiring an executive is a high-risk proposition. You often see a startup with a screwed up development process, but “when we get our VP of Engineering onboard, everything will get fixed”.  Or a startup that is missing its revenue targets, but “when we get our VP of sales, reveue will take off”. Here’s the problem: in my experience, if you know what you’re doing, the odds of a given executive hire working out will be about 50/50.  That is, about 50% of the time you’ll screw up and ultimately have to replace the person.  (If you don’t know what you’re doing, your failure rate will be closer to 100%.) Why?  People are people.  People are complicated.  People have flaws.  You often don’t know what those flaws are until after you get to know them.  Those flaws are often fatal in an executive role.  And more generally, sometimes the fit just isn’t there. This is why I’m so gung ho on promoting from within.  At least then you know what the flaws are up front. First, manage your executives. It’s not that uncommon to see startup founders, especially first-timers, who hire executives and are then reluctant to manage them. You can see the thought process: I just hired this really great, really experienced VP of Engineering who has way more experience running development teams than I ever did—I should just let him go do his thing! That’s a bad idea.  While respecting someone’s experience and skills, you should nevertheless manage every executive as if she were a normal employee.  This means weekly 1:1’s, performance reviews, written objectives, career development plans, the whole nine yards.  Skimp on this and it is very easy for both your relationship with her and her effectiveness in the company to skew sideways. This even holds if you’re 22 and she’s 40, or 50, or 60!  Don’t be shy, that will just scare her—and justifiably so. Second, give your executives the latitude to run their organizations. This is the balancing act with the previous point, but it’s equally important.  Don’t micromanage. The whole point of having an executive is to have someone who can figure out how to build and run an organization so that you don’t have to.  Manage her, understand what she is doing, be very clear on the results you expect, but let her do the job. Here’s the key corollary to that: if you want to give an executive full latitude, but you’re reluctant to do so because you’re not sure she can make it happen, then it’s probably time to fire her. In my experience it’s not that uncommon for a founder or CEO to be uncomfortable—sometimes only at a gut level—at really giving an executive the latitude to run with the ball.  That is a surefire signal that the executive is not working out and probably needs to be fired.  More on that below. Third, ruthlessly violate the chain of command in order to gather data. I don’t mean going around telling people under an executive what to do without her knowing about it.  I mean, ask questions, continually, at all levels of the organization.  How are things going?  What do you think of the new hires?  How often are you meeting with your manager?  And so on. You never want the bulk of your information about a function coming from the executive running that function.  That’s the best way to be completely and utterly surprised when everything blows up. Here’s the kicker: a great executive never minds when the CEO talks to people in her organization.  In fact, she loves it, because it means the CEO just hears more great things about her. If you have an executive who doesn’t want you to talk to people in her organization, you have a bad executive. This will be controversial, but I am a big fan of promoting talented people as fast as you can—promoting up and comers into executive roles, and promoting executives into bigger and broader responsibilities. You can clearly overdo this—you can promote someone before they are ready and in the worst case, completely screw up their career.  (Seen it.  Done it.)  You can also promote someone to their level of incompetence—the Peter Principle.  (Seen it.  Done it.) However, life is short, startups move fast, and you have stuff to get done.  You aren’t going to have the privilege of working with that many great, talented, high-potential people in your career.  When you find one, promote her as fast as you can.  Great for her, great for the company, and great for you. This assumes you are properly training and managing her along the way.  That is left as an exercise for the reader. The surest sign someone is ready for promotion is when they’re doing a great job running their current team.  Projects are getting done, team morale is good, new hires are top quality, people are happy.  Time to promote some people into new challenges. I’m a firm believer that most people who do great things are doing them for the first time.  Returning to my theory of hiring, I’d rather have someone all fired up to do something for the first time than someone who’s done it before and isn’t that excited to do it again.  You rarely go wrong giving someone who is high potential the shot. This assumes you can tell the high potential people apart from everyone else.  That too is left as an exercise for the reader. First, recognize the paradox of deciding to fire an executive. The paradox works like this: It takes time to gather data to evaluate an executive’s performance.  You can’t evaluate an executive based on her own output, like a normal employee—you have to evaluate her based on the output of her organization.  It takes time for her to build and manage her organization to generate output.  Therefore, it takes longer to evaluate the performance of an executive than a normal employee. But, an executive can cause far more damage than a normal employee.  A normal employee doesn’t work out, fine, replace him.  An executive doesn’t work out, it can—worst case—permanently cripple her function and sometimes the entire company.  Therefore, it is far more important to fire a bad executive as fast as possible, versus a normal employee. Solution?  There isn’t one.  It’s a permanent problem. I once asked Andy Grove, one of the world’s all-time best CEOs, about this.  He said, you always fire a bad executive too late.  If you’re really good, you’ll fire her about three months too late.  But you’ll always do it too late.  If you did it fast enough that it wasn’t too late, you wouldn’t have enough data, and you’d risk being viewed as arbitrary and capricious by the rest of the organization. Second, the minute you have a bad feeling in your gut, start gathering data. Back to the point on ruthlessly violating the chain of command—get to it.  Talk to everyone.  Know what’s going on.  Unless you’re paranoid—and, shockingly, I have met paranoid founders and CEOs, and not counting Andy Grove—you need to gather the data because you’re going to need to fire the executive—if you’re good, in about three months. In the meantime, of course do everything you can to coach and develop and improve the executive.  If it works out, that’s great.  If not, get ready. A few specific things I think are critical to look for: Is the executive hiring?  If there are open headcount slots and nobody’s coming in the door, you have a problem.  Just as bad is when the new hires aren’t very good—when they’re bringing down the average quality of the organization. Is the executive training and developing her people?  Often in a startup, an executive is hired to take over a function that’s already been started, at least in rudimentary form.  The people in that function should be noticeably better at their jobs, and highly respectful of the executive’s skills, within the first several months at the very least.  If not, you have a problem. What do the other executives think?  Great executives are often imperfect but their peers always respect them.  If your other executives are skeptical of a new executive after the first few months, you have a problem. Is it painful for you to interact with the executive?  Do you try to avoid or cancel your 1:1’s?  Does talking to her give you a headache?  Do you often not understand what point she’s trying to make or why she’s focused on such an odd issue?  If the answer to any of these questions is yes, you have a problem. Firing an executive sucks.  It’s disruptive to the organization.  It creates a lot of work for you—not least of which is you’ll have to go find someone else for the job.  And, it risks making you look bad, since you’re the one who hired the person in the first place. And it always seems to happen at a critical time in your startup’s life, when the last thing you need is a distraction like this. Nevertheless, the only thing to do is do it, do it professionally, make clear to the organization what will happen next, and get on down the road. In my opinion the two most common mistakes people make when they fire executives both fall in the category of pulling one’s punches, and I highly recommend avoiding them: Long transition periods—tempting, but counterproductive.  Confusing, demoralizing, and just plain weird.  Instead, make a clean break, put a new person in charge—even if only on an acting basis—and get moving. Demotion as an alternative to firing (or, alternately, “I know, we’ll hire her a boss!”).  Hate it.  Great people don’t deal well with getting demoted.  There is an occasional exception.  Unless you are positive you have such an exception, skip it, and move directly to the conclusion. Fourth, don’t feel guilty. You’re not beheading anyone. Anyone who got a job as an executive at a startup is going to have an easy time getting the next job.  After all, she can always paint you as a crazy founder, or inept CEO. More often than not, when you fire an executive, you are doing her a favor—you are giving her a chance to find a better fit in a different company where she will be more valued, more respected, and more successful.  This sounds mushy, but I mean it.  And if she can’t, then she has a much deeper problem and you just dodged a huge bullet. And on that cheery note, good luck! This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"How to hire a professional CEO Posted on August 30, 2007 If you don’t have anyone on your founding team who is capable of being CEO, then sell your company—now. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"The truth about venture capitalists Posted on June  8, 2007 A lot of people have opinions about venture capital—the pros and cons of VC, whether or not to take VC, which venture capitalists to take money from, how to get VCs to invest in your company, whether VCs are seasoned risk-taking professional investors or psychotic entrepreneur-hating sociopaths, etc. Often these opinions are based on one individual’s specific personal experience with venture capital, and often based on someone’s negative experience—as is often the case, people who have negative experiences are more motivated to tell others than people who have positive experiences. With that in mind, I will try to provide my hopefully broad perspective on the topic. I’ll just say up front that I don’t think my point of view on this is any more valid than that of any of my fellow entrepreneurs—everyone’s experience is different, and this is definitely a topic where reasonable people disagree. My experience with venture capital includes: being the cofounder of two VC-backed startups that later went public (Kleiner Perkins-backed Netscape and Benchmark-backed Opsware); cofounder of a third startup that hasn’t raised professional venture capital (Ning); participant as angel investor or board member or friend to dozens of entrepreneurs who have raised venture capital; and an investor (limited partner) in a significant number of venture funds, ranging from some of the best performing funds ever (1995 vintage) to some of the worst performing funds ever (1999).  And all of this over a time period ranging from the recovery of the early 90’s bust to the late 90’s boom to the early 00’s bust to the late 00’s whatever you want to call it. I’m starting to understand why I don’t have any hair left. The most important thing to understand about venture capitalists is that they are in business to do a very specific thing. They raise a large amount of money—often $100 million or more—today, in order to invest in a series of high-risk startups over the next small number of years—usually 3 to 4 years. The legal lifespan of the fund is usually 10 years, so that’s the absolute outer limit on their investment horizon. They generally intend, and their investors generally expect, to have the returns from those startups flow back within the next 4 to 6 years—that’s their realistic investment horizon. Within that structure, they generally operate according to the baseball model (quoting some guy): “Out of ten swings at the bat, you get maybe seven strikeouts, two base hits, and if you are lucky, one home run.  The base hits and the home runs pay for all the strikeouts.” They don’t get seven strikeouts because they’re stupid; they get seven strikeouts because most startups fail, most startups have always failed, and most startups will always fail. So logically their investment selection strategy has to be, and is, to require a credible potential of a 10x gain within 4 to 6 years on any individual investment—so that the winners will pay for the losers and in the timeframe that their investors expect. From this, you can answer the question of which startups should raise venture capital and which ones shouldn’t. Startups that have a credible potential to be sold or go public for a 10x gain on invested capital within 4 to 6 years of the date of funding should consider raising venture capital. Most other startups should not raise venture capital.  This includes: startups where the founders want to stay private and independent for a long time; startups where there’s no inherent leverage in the business model that could result in a 10x gain in 4 to 6 years; and startups working on projects with a longer fuse than 4 to 6 years. Notably, there are many fine businesses in the world—many of them highly profitable, and very satisfying to run—that do not have leverage in their model that makes them suitable for venture capital investment. By leverage in this context, I mean: the ability to make something once (a piece of software, a chip design, a web site) and sell it (directly or indirectly) to a lot of people (1,000 business customers or 10 million consumers)—which leads to the classic “hockey stick” revenue projection. Venture capitalists shouldn’t, and can’t, invest in companies that don’t hit these criteria—not because they’re not good businesses but because their own investors wouldn’t stand for it. There are also many fine entrepreneurs in the world who want their companies to stay small, or who don’t want to sell their companies or take them public.  That is also well and good, and those entrepreneurs should not raise venture capital. On the other hand, a business that is built for leverage that could be sold or go public in 4 to 6 years should strongly consider raising professional venture capital, for three reasons: First, you get the cash to invest in the business and grow it at the speed required to realize its full potential. It’s satisfying to say you don’t want to deal with VCs and you want to do it on your own, but if your business has the potential to get big, in my view you should take the cash to invest to make it as big as you can, and that usually requires more capital than you can raise from bootstrapping or from angels. Second, you get that cash from a professional investor who invests in this kind of business as her full-time job and reason for existence in the world. Most other possible investors in a high-growth startup will be much more difficult to deal with than a professional venture capitalist. Third, in the best case, you will get help building your high-growth business from the venture capital partner you take money from (but see more on this in Part 2). When a venture capitalist turns you down, it isn’t personal and it isn’t (usually) because she’s stupid.  Instead, it’s often for one of these reasons: One, she can’t see the leverage—she can’t see you getting to a sale or IPO with a credible prospect of a 10x return within 4 to 6 years.  If she can’t see this, and 10 of her peers at other firms can’t see it, then you may want to revisit your fundamental business model assumptions and try to understand what’s missing. Remember, it’s in her best interest to see the full potential in your business—she is looking for high-potential startups in which to invest. Two, she thinks that what you’re doing is too early or unproven. This is the one that drives entrepreneurs nuts.  Isn’t the whole point of venture capital to make risky investments in unproven technologies and markets? Unfortunately, that’s life—sometimes things are simply too early for venture capital.  In that case, develop your idea further with bootstrap or angel funding and then take it back to the VCs later with more proof points. Three, she isn’t convinced that you’ve assembled the right team to go after the opportunity.  This usually means she doesn’t think your technical founder(s) are strong enough, or she doesn’t think your founding CEO is strong enough.  Again, it’s in her best interest to see the potential in the team if it’s there—so if she and 10 of her peers pass on your startup because of concerns about the team, then you may want to rethink your team. There are many other reasons in addition to these that a VC may pass on your investment that have nothing to do with you: She loves it but she can’t talk her partners into it—which happens. She’s fully committed and doesn’t have time to take on a new opportunity. It would require traveling and she can’t or won’t do that. You’re in a market she doesn’t know much about. Or, she had a bad experience with a similar investment in the past. The frustrating part is that she won’t always tell you why she’s passing—in large part because she wants to keep the door open to investing at a later date if things change (i.e. if it becomes clearer that you have a home run on your hands). For that reason, whenever a VC passes and explains why, no matter how mean or unfair they sound, the best response is to thank them for their honesty. I’m trying to keep these posts from getting too long, so I’ll stop here, but tantalize you with the topics to be covered in Part 2: Comparing venture firms, and comparing partners within firms. The VC’s ideal investment. How much help, and what kinds of help, you can expect from your VC. How VC’s spend an awful lot of their time, and why you should feel sorry for them. VCs: soulless and rapacious capitalists, or surprisingly generous philanthropists?  Or both? Why we should be thankful that we live in a world in which VCs exist, even if they yell at us during board meetings, assuming they’ll fund our companies at all. And, how to make a VC’s head explode. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"The truth about venture capitalists Posted on June  8, 2007 Comparing venture firms, and comparing partners within firms: When raising venture capital, remember that venture firms vary wildly in style and quality. For example, some venture firms are very entrepreneur-friendly.  Others are notoriously brutal. Interestingly, financial success in the venture capital profession does not seem to be correlated to entrepreneur-friendliness. Individuals (partners) within each venture firm vary wildly in style, personality, knowledge, experience, ability to be helpful, drive, and ethics. Personally I’d recommend being more focused on picking the right partner than picking the right firm. This is slightly counterintuitive advice—and firm quality does matter—but the partner is the person you’re going to be working with.  The other people at the firm you will see probably twice in the whole lifespan of your company. Best of both worlds is to pick a strong partner at a strong firm, but be aware going in that even strong firms have weak partners. Venture capital professionals arguably used to be a more homogeneous group: the founders and pioneers of the business, and their hand-picked proteges who had grown up as venture capitalists under close supervision and with rigorous training. The explosion of venture capital in the late 90’s has led to a much broader range of people becoming partners in venture capital firms. Many partners today have little venture capital experience but come out of an operating background (an executive role at a big company, or experience as an entrepreneur with their own startup), or come out of some other background (corporate attorney or executive recruiter), or come straight out of business school with no meaningful experience whatsoever. There are pros and cons to working with any of these kinds of partners. For example, VCs with operating experience are great when it comes to sitting down and talking about how to run a business, but sometimes they have less perspective (because their career was probably focused on one or two companies, whereas a professional VC has probably invested in 30+ companies), and they may have trouble keeping their hands off the steering wheel. A VC with an executive recruiting background can be incredibly helpful at recruiting—one of the main areas in which a VC can add value (see below). And a VC who used to be an attorney can be very helpful when you need to get a parking ticket fixed. But there’s probably still no substitute for the VC who has been a VC for 20 years and has seen more strange startup situations up close and personal than you can imagine. A venture capitalist’s ideal investment: A venture capitalist’s ideal investment is the one that would be a huge success without her. How much help, and what kinds of help, you can expect from your VC: Assuming your startup does not fall in the category of a VC’s ideal investment, what kinds of help can you hope for from your VC? First, it’s important to really internalize that the founders of a startup are the ones who have to make a startup succeed. Odds are, nothing your VC does, no matter how helpful or well-intentioned, is going to tip the balance between success and failure. In addition, VCs are—usually—incredibly busy people.  Sitting on as many as a dozen boards, sourcing new investments, tracking the fast-moving technology industry, raising money and managing their LPs, and pitching in on their partners’ companies and their problems takes up a lot of time. (Although every once in a while you will run into a VC who is lazy as sin—but that’s a topic for another post, when I’ve had more to drink.) The best assumption to make is that your VC’s primary value add is the cash they are investing. Then you’ll always be surprised on the upside. Additional areas in which a VC can help include: recruiting, strategy, partner introductions, customer introductions, additional fundraising, and generally being a good sounding board and source of advice and industry knowledge. Some firms run incredibly helpful programs such as forums in which new consumer Internet startups can interact with major advertisers, for example. The only real way to find out how much help you can really expect from your new VC is to ask the founders of other companies funded by that same partner. Finally, never expect the help to just happen unsolicited.  If you want it, ask for it proactively. You actually don’t want a VC who provides too much help without being asked.  I leave the why as an exercise for the reader. How VCs spend an awful lot of their time, and why you should feel sorry for them: My friends who are VCs seem to spend a surprising amount of their time working with their failing companies. The reason goes right back to the definition of a VC’s ideal investment: their winners are succeeding—they don’t need very much help. Some of the best VCs in the industry spend most of their time on their successes, helping to boost them to higher and higher levels of success. But generally, life in the VC trenches seems to consist of trying to jumpstart or otherwise fix fatally flawed startups. Can you imagine how un-fun that would be? Venture capitalists: soulless and rapacious capitalists, or surprisingly generous philanthropists?  Or both? Here’s something surprising about venture capitalists: their primary job is often helping very worthwhile nonprofits build larger and larger endowments to be able to continually make the world a better place. The largest investors in many top-tier venture capital firms are nonprofits—particularly universities and large philanthropic foundations. This is partially because such institutions are very patient investors and have very long time horizons.  But this is also partially because many of the top venture capitalists feel a real sense of obligation and mission to help such vital organizations grow and flourish. Traditionally this has been hard to see because venture capital firms have wrapped the identities of their investors (limited partners, in the lingo) in confidentiality agreements.  But more recently, via certain SEC filings and disclosures by public universities, it has become possible to get a glimpse into the investor bases of some of the world’s best venture capital firms. For example, it has been previously well publicized that you can see who Sequoia’s investors are by reading the SEC disclosure on the Google/Youtube acquisition. You can see in that filing that Sequoia’s major investors include such universities as Amherst, Brown, Colby, Columbia, and Dartmouth—and that’s just into the D’s.  Similarly, philanthropic foundations invested in Sequoia include the Ford Foundation, the Moore Foundation, the Irvine Foundation, the Rockefeller Foundation, and the Hewlett Foundation. The best VCs get to improve society in two ways: by helping new companies take shape and contribute new technologies and medical cures into the world, and by helping universities and foundations execute their missions to educate and improve people’s lives. Why we should be thankful that we live in a world in which VCs exist, even if they yell at us during board meetings, assuming they’ll fund our companies at all: Imagine living in a world in which professional venture capital didn’t exist. There’s no question that fewer new high-potential companies would be funded, fewer new technologies would be brought to market, and fewer medical cures would be invented. We should not only be thankful that we live in a world in which VCs exist, we should hope that VCs succeed and flourish for decades and centuries to come, because the companies they fund can do so much good in the world—and as we have seen, a lot of the financial gains that result flow into the coffers of nonprofit institutions that themselves do huge good in the world. Remember, professional venture capital has only existed in its modern form for about the last 40 years.  In that time the world has seen its most amazing flowering of technological and medical progress, ever.  That is not a coincidence. How to make a VC’s head explode, in one easy step: Point out to her that her compensation from carried interest should be taxed as ordinary income, not capital gains, since she’s receiving a fee for service and it’s not her capital at risk. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"The truth about venture capitalists Posted on June 10, 2007 (This will be the last post on venture capital for a while, if I can help it.) The current venture capital environment in the United States is characterized by a very large number of venture firms (866, according to the National Venture Capital Association), investing an extraordinarily large amount of capital (over $7 billion in the first quarter of 2007 alone, according to Price Waterhouse). Traditionally the venture capital industry was said to experience a “seven fat years, seven lean years” model—seven years of boom, followed by seven years of bust. Following that pattern, the late 60’s/early 70’s were great (the “-tronics” boom—this is when Intel was funded by Arthur Rock), the mid-70’s were terrible, 1978-1985 was great (the PC!), ’86-92 was terrible, ’93-99 was fantastic, and ’00-06 was not so good. As you’d expect, inflows of capital to venture firms during the lean years typically shrank dramatically—venture capital returns are terrible during the lean years, and who in their right mind wants to put more money into an investment vehicle with terrible returns? This capital inflow shrinkage would then lead to a significant percentage of venture firms closing their doors (technically, not raising new funds—the venture capital firm equivalent of going under)—especially the newer, less proven ones. Ultimately, capital inflows would shrink to the point where the remaining venture firms were managing a much smaller base of cash, which primed the pump for dramatic investment returns over the next seven fat years: less capital + a new wave of high-growth startups = explosive investment returns. That is the cycle that has played out every time—except this time. Let’s examine that $7 billion invested by venture firms in the first quarter of 2007. Annualized, that is an annual investment rate of about $28 billion per year. Pulling the data on venture capital investing by year over the last 10 years, we see that this is, as you might expect, substantially lower than 1999’s $54 billion and 2000’s $105 billion (what a year!)... ...but, higher than 1997’s $15 billion and 1998’s $21 billion. And that rate of investment has been broadly consistent for the last several years—in fact, it’s been trending up. Even when you adjust for inflation, venture capital funding is flowing into venture firms and out to startups at a higher rate in 2007 than in 1997 and 1998. Those of you remember 1997 and 1998 will remember that those were true boom times for venture capital.  The returns on funds from ’93-95 were extraordinary—some of the best ever—and limited partners were shoveling money into venture firms, leading VCs to fund new companies as fast as they possibly could. Yet, despite disastrous venture returns on average from 2000-2006, the cash spigot from investors in venture capital firms continues to be wide open to a level where VCs can be more active in 2007 than they were in 1998. While some older, stale venture firms have recently shut down—Sevin Rosen and Yankee come to mind—the rate of venture firm death has not been anywhere close to what you’d expect, and in fact many new funds have been formed and raised money in the last few years. And the cash just keeps on coming. Somehow we’ve ended up in a paradox: venture capital returns, on average, have been terrible, but contrary to historical precedent, the money keeps flooding in, venture firms keep going, and you have more money chasing deals than you did in the middle of the dot com boom. How can we explain this? Institutional investors who invest in venture funds—large university endowments, philanthropic foundations, and pension funds—began radically shifting their investment strategies in the early to mid 1990’s, and that shift has led to private equity generally, and venture capital specifically, becoming a permanent “asset class” for those investors. I call this the “asset-classization” of venture capital. A large institutional investor like a university endowment runs its investment strategy with a top-down approach that says, we’ll put x% in stocks, y% in bonds, and so on—this is called asset allocation. The actual details of which stocks, which bonds, etc. are less important—the big decision is what percentage of the total capital to put in which asset classes, because when you run a huge pool of capital, that’s what mathematically drives your returns.  (You can’t put enough money into any single investment to really move the needle, at least not without being irresponsible, so you have to think in broad strokes—in terms of asset classes.) Traditionally, such large institutional investors were quite conservative.  An asset allocation that was perhaps 60% US equities, 30% US bonds, and 10% cash would not have been unreasonable. Really daring institutional investors might have allocated some percentage to non-US equities, or (gasp) high-yield “junk” bonds. This all started to change in the late 80’s and early 90’s when a group of advanced thinkers, such as David Swensen, then and now head of the Yale University endowment, crunched the numbers and realized that if they had a long-term time horizon (which they did—Yale and its peers are expected to be around for some time), they could generate higher returns by allocating more of their capital to so-called “alternative asset classes”—basically, anything other than public stocks, bonds, and cash. This meant hedge funds, real estate partnerships, commodities, timber, leveraged buyout firms—and venture capital. To read about this new strategy—and it is a fascinating strategy—pick up a copy of David Swensen’s excellent book Pioneering Portfolio Management, which describes his approach in detail.  (Be sure to also pick up a copy of his book for individual investors—Unconventional Success—which explains why you can’t pursue this strategy without getting your clock cleaned.) The institutions such as Yale and its peers that adopted a Swensen-style strategy did fantastically well in the 1990’s, and outperformed (technically, “kicked the ass of”) any institution that had an older, more conservative investment policy. This predictably led a significant number of institutions to shift massively into alternative investments and venture capital in the late 90’s, just in time to get hammered by the crash of 2000-2002. Here’s the interesting part: that hammering—by people who, say, only started investing in venture funds in 1999—has not resulted in a significant pullback on the part of institutional investors from venture capital. Instead, venture capital has become an apparently permanent asset class of many large institutional investors—and increasingly, smaller institutional investors. Those institutional investors are managing so much money—literally trillions of dollars—that even a very small asset allocation to venture capital represents an enormous amount of cash—tens of billions of dollars per year. An organization called NACUBO (don’t ask) tracks asset allocation behavior of university endowments, and tells us that the average large ($1+ billion) university endowment had a 3.5% asset allocation to venture capital in 2006. 3.5% of a ginormous amount of money is a lot of money. But it’s a small percentage of the total base, so apparently what’s been happening is that although returns on venture capital have been poor (technically, “sucking”) for the last several years, institutions that invest in venture capital are not taking that much actual pain on their overall asset bases, and they don’t see that many better alternatives, and so they’re sticking with their overall asset allocations and therefore sticking with venture capital. You can argue that this is smart—that such institutions are very well set up for the next venture capital boom, and that they will do very well over the next 10-20 years with this strategy—versus the old approach of pulling out just before the sector was set to boom again. You can also argue that this is not smart—that this is leading to more venture dollars chasing few good deals and long-run terrible returns for everyone.  Particularly since historically, most of the positive returns for venture capital have gone to the top 10% of venture firms—or maybe even the top 10 venture firms—and most of the money going into venture capital as an asset class by definition is going into the other 90% of venture firms. But regardless, it does seem to be the case. And that’s why, from where I sit in Silicon Valley, there are probably 200 venture capital firms within 20 miles with likely over $20 billion of capital at their disposal chasing a very small number of good potential investments, despite terrible average returns for the asset class over the last seven years. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"How to hire the best people you’ve ever worked with Posted on June  6, 2007 There are many aspects to hiring great people, and various people smarter than me have written extensively on the topic. So I’m not going to try to be comprehensive. But I am going to relay some lessons learned through hard experience on how to hire the best people you’ve ever worked with—particularly for a startup. I’m going to cover two key areas in this post: Criteria: what to value when evaluating candidates. And process: how to actually run the hiring process, and if necessary the aftermath of making a mistake. Lots of people will tell you to hire for intelligence. Especially in this industry. You will read, hire the smartest people out there and your company’s success is all but guaranteed. I think intelligence, per se, is highly overrated. Specifically, I am unaware of any actual data that shows a correlation between raw intelligence, as measured by any of the standard metrics (educational achievement, intelligence tests, or skill at solving logic puzzles) and company success. Now, clearly you don’t want to hire dumb people, and clearly you’d like to work with smart people. But let’s get specific. Most of the lore in our industry about the role of intelligence in company success comes from two stratospherically successful companies—Microsoft, and now Google—that are famous for hiring for intelligence. Microsoft’s metric for intelligence was the ability to solve logic puzzles. (I don’t know if the new, MBA-heavy Microsoft still does this, but I do know this is how Microsoft in its heyday worked.) For example, a classic Microsoft interview question was: “Why is a manhole cover round?” The right answer, of course, is, “Who cares?  Are we in the manhole business?” (Followed by twisting in your chair to look all around, getting up, and leaving.) Google, on the other hand, uses the metric of educational achievement. Have a PhD?  Front of the line.  Masters?  Next.  Bachelor’s?  Go to the end. In apparent direct contraction to decades of experience in the computer industry that PhD’s are the hardest people to motivate to ship commercially viable products—with rare exception.  (Hi, Tim!  Hi, Diego!) Now, on the one hand, you can’t question the level of success of either company. But maybe, just maybe, their success had a lot to do with other factors—say, huge markets, extreme aggressiveness, right time/right place, key distribution deals, and at least in one case, great products. Because here’s the problem: I’m not aware of another Microsoft that’s been built by hiring based on logic puzzles.  And I’m not aware of another Google that’s been built by hiring PhD’s. So maybe there are other hiring criteria that are equally, or more, important. Here’s what I think those criteria are. I define drive as self-motivation—people who will walk right through brick walls, on their own power, without having to be asked, to achieve whatever goal is in front of them. People with drive push and push and push and push and push until they succeed. Winston Churchill after the evacuation of Dunkirk: “We shall not flag or fail. We shall go on to the end, we shall fight in France, we shall fight on the seas and oceans, we shall fight with growing confidence and growing strength in the air, we shall defend our Island, whatever the cost may be, we shall fight on the beaches, we shall fight on the landing grounds, we shall fight in the fields and in the streets, we shall fight in the hills; we shall never surrender.” That’s what you want. Some people have it and some people don’t. Of the people who have it, with some of them it comes from guilt, often created by family pressure. With others, it comes from a burning desire to make it big. With others, it comes from being incredibly Type A. Whatever... go with it. Drive is independent of educational experience, grade point averages, and socioeconomic background. (But Marc, isn’t a 4.0 GPA a sure sign of drive?  Well, it’s a sign that the person is driven to succeed on predefined tests with clear criteria and a grader—in an environment where the student’s parents are often paying a lot of money for the privilege of having their child take the tests.  That may or may not be the same thing as being driven to succeed in the real world.) Drive is even independent of prior career success. Driven people don’t tend to stay long at places where they can’t succeed, and just because they haven’t succeeded in the wrong companies doesn’t mean they won’t succeed at your company—if they’re driven. I think you can see drive in a candidate’s eyes, and in a candidate’s background. For the background part, I like to see what someone has done. Not been involved in, or been part of, or watched happen, or was hanging around when it happened. I look for something you’ve done, either in a job or (often better yet) outside of a job. The business you started and ran in high school. The nonprofit you started and ran in college. If you’re a programmer: the open source project to which you’ve made major contributions. If you can’t find anything—if a candidate has just followed the rules their whole lives, showed up for the right classes and the right tests and the right career opportunities without achieving something distinct and notable, relative to their starting point—then they probably aren’t driven. And you’re not going to change them. Motivating people who are fundamentally unmotivated is not easy. But motivating people who are self-motivated is wind at your back. I like specifically looking for someone for which this job is their big chance to really succeed. For this reason, I like hiring people who haven’t done the specific job before, but are determined to ace it regardless. I also like specifically looking for someone who comes from some kind of challenging background—a difficult family situation, say, or someone who had to work his/her way through school—who is nevertheless on par with his/her more fortunate peers in skills and knowledge. Finally, beware in particular people who have been at highly successful companies. People used to say, back when IBM owned the industry: never hire someone straight out of IBM.  First, let them go somewhere else and fail.  Then, once they’ve realized the real world is not like IBM, hire them and they’ll be great. And remember, an awful lot of people who have been at hugely successful companies were just along for the ride. Career success is great to look for—but it’s critical to verify that the candidates out of hugely successful companies actually did what they claim in their roles at those companies.  And that they really get it, that the real world is a lot tougher than being IBM in the 80’s, or Microsoft in the 90’s, or Google today. Second criterion: curiosity. Curiosity is a proxy for, do you love what you do? Anyone who loves what they do is inherently intensely curious about their field, their profession, their craft. They read about it, study it, talk to other people about it... immerse themselves in it, continuously. And work like hell to stay current in it. Not because they have to. But because they love to. Anyone who isn’t curious doesn’t love what they do. And you should be hiring people who love what they do. As an example, programmers. Sit a programmer candidate for an Internet company down and ask them about the ten most interesting things happening in Internet software. REST vs SOAP, the new Facebook API, whether Ruby on Rails is scalable, what do you think of Sun’s new Java-based scripting language, Google’s widgets API, Amazon S3, etc. If the candidate loves their field, they’ll have informed opinions on many of these topics. That’s what you want. Now, you might say, Marc, that’s great for a young kid who has a lot of spare time to stay current, but what about the guy who has a family and only has time for a day job and can’t spend nights and weekends reading blogs and staying that current? Well, when you run into a person like that who isn’t current in their field, the other implication is that their day job isn’t keeping them current. If they’ve been in that job for a while, then ask yourself, is the kind of person you’re looking for really going to have tolerated staying in a day job where their skills and knowledge get stale, for very long? Remember—because of the Internet, staying current in any field no longer costs any money. In my experience, drive and curiosity seem to coincide pretty frequently. The easiest way to be driven is to be in a field that you love, and you’ll automatically be curious. Third and final criterion: ethics. Ethics are hard to test for. But watch for any whiff of less than stellar ethics in any candidate’s background or references. And avoid, avoid, avoid. Unethical people are unethical by nature, and the odds of a metaphorical jailhouse conversion are quite low. Priests, rabbis, and ministers should give people a second chance on ethics—not hiring managers at startups. One way to test for an aspect of ethics—honesty—is to test for how someone reacts when they don’t know something. Pick a topic you know intimately and ask the candidate increasingly esoteric questions until they don’t know the answer. They’ll either say they don’t know, or they’ll try to bullshit you. Guess what.  If they bullshit you during the hiring process, they’ll bullshit you once they’re onboard. A candidate who is confident in his own capabilities and ethical—the kind you want—will say “I don’t know” because they know that the rest of the interview will demonstrate their knowledge, and they know that you won’t react well to being bullshitted—because they wouldn’t react well either. Second topic: process—how to run the hiring process. First, have a written hiring process. Whatever your hiring process is—write it down, and make sure everyone has a copy of it, on paper. It’s continually shocking how many startups have a random hiring process, and as a result hire apparently randomly. Second, do basic skills tests. It’s amazing how many people come in and interview for jobs where their resume says they’re qualified, but ask them basic questions about how to do things in their domain, and they flail. For example, test programmers on basic algorithms—linked lists, binary searches. Just in pseudocode—it doesn’t matter if they know the relevant Java library calls. It does matter if they are unable to go up to the whiteboard and work their way through something that was covered in their first algorithms course. A lot of people come in and interview for programming jobs who, at their core, can’t program. And it’s such a breath of fresh air when you get someone who just goes, oh yeah, a linked list, sure, let me show you. The same principle applies to other fields. For a sales rep—have them sell you on your product all the way to a closed deal. For a marketing person—have them whiteboard out a launch for your new product. Third, plan out and write down interview questions ahead of time. I’m assuming that you know the right interview questions for the role—and frankly, if you don’t, you probably shouldn’t be the hiring manager for that position. The problem I’m addressing is: most people don’t know how to interview a candidate. And even people who do know how, aren’t necessarily good at coming up with questions on the fly. So just make sure you have questions planned out and assigned to each interviewer ahead of time. I do this myself—always enter the room with a list of questions pre-planned—because I don’t want to count on coming up with them on the fly. The best part is that you can then iteratively refine the questions with your team as you interview candidates for the position. This is one of the best ways for an organization to become really good at hiring: by iterating the questions, you’re refining what your criteria are—and how you screen for those criteria. Fourth, pay attention to the little things during the interview process. You see little hints of things in the interview process that blow up to disasters of unimaginable proportions once the person is onboard. Person never laughs?  Probably hard to get along with. Person constantly interrupts?  Egomaniac, run for the hills. Person claims to be good friends with someone you know but then doesn’t know what the friend is currently doing?  Bullshitter. Person gives nonlinear answers to simple questions?  Complete disorganized and undisciplined on the job. Person drones on and on?  Get ready for hell. Fifth, pay attention to the little things during the reference calls. (You are doing reference calls, right?) Most people softball deficiencies in people they’ve worked with when they do reference calls. “He’s great, super-smart, blah blah blah, but...” “Sometimes wasn’t that motivated”—the person is a slug, you’re going to have to kick their rear every morning to get them to do anything. “Could sometimes be a little hard to get along with”—hugely unpleasant. “Had an easier time working with men than women”—raging sexist. “Was sometimes a little moody”—suffering from clinical depression, and unmedicated. Sixth, fix your mistakes fast... but not too fast. If you are super-scrupulous about your hiring process, you’ll still have maybe a 70% success rate of a new person really working out—if you’re lucky. And that’s for individual contributors. If you’re hiring executives, you’ll probably only have a 50% success rate. Anyone who tells you otherwise is hiring poorly and doesn’t realize it. Most startups in my experience are undisciplined at fixing hiring mistakes—i.e., firing people who aren’t working out. First, realize that while you’re going to hate firing someone, you’re going to feel way better after the fact than you can currently imagine. Second, realize that the great people on your team will be happy that you’ve done it—they knew the person wasn’t working out, and they want to work with other great people, and so they’ll be happy that you’ve done the right thing and kept the average high. (The reason I say “not too fast” is because your great people are watching to see how you fire people, and if you do it too fast you’ll be viewed as arbitrary and capricious—but trust me, most startup managers do not have this problem, they have the opposite problem.) Third, realize that you’re usually doing the person you’re firing a favor—you’re releasing them from a role where they aren’t going to succeed or get promoted or be valued, and you’re giving them the opportunity to find a better role in a different company where they very well might be an incredible star. (And if they can’t, were they really the kind of person you wanted to hire in the first place?) One of the good things about our industry is that there are frequently lots of new jobs being created and so you’re almost never pushing someone out onto the street—so don’t feel that you’re dooming their families to the poorhouse, because you aren’t. You’re not that important in their lives. I can name a number of people I’ve fired or participated in firing who have gone on to be quite successful at other companies. They won’t necessarily talk to me anymore, though :-). Finally, although this goes without saying: value the hell out of the great people you do have on your team.  Given all of the above, they are incredibly special people. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Serial entrepreneurs and today’s Silicon Valley Posted on October 29, 2007 Several days ago, Gary Rivlin of the New York Times called me about a story he was writing about the brilliant Max Levchin of Paypal and Slide, and the general topic of serial entrepreneurs in Silicon Valley.  The story came out yesterday; below are the notes I prepared for my conversation with Gary. In a nutshell, Gary’s question to me was: what makes serial entrepreneurs tick?  Why do people like Max keep going and start new companies when they could just park it on a beach and suck down mai tais? First, in my experience, Silicon Valley entrepreneurs are all over the map when it comes to personality and motivation.  Some are purely mercenary—one hit and they’re out.  Others just love the technology, and the business is a side effect.  Still others are like Chauncey Gardiner in Being There.  And some just love starting and building companies. Second, there were serial entrepreneurs in the past, but there are certainly more now than ever before.  There are many factors that lead to this—here are the big ones: There are simply more entrepreneurs now—due to the amazing surge in venture capital and the culture of startups over the last 10-15 years—so you’d expect more serial entrepreneurs just based on that. A lot of new companies simply develop faster these days than they did in the past.  Microsoft and Oracle, for example, both put in 10 years of incredibly hard work before going public (both founded in ’76, IPO in ’86), and they only had a few hundred employees each when they went public—and those were the two biggest software successes of their era. Versus these days, when many companies are founded, built, scaled up, and sold (or, yes, taken public!) in a few years. The process can happen so fast that people are freed up much faster; therefore, upon being freed up they are younger and tend to have more raw energy than people who in the past would have spent 10 or 20 or 30 years building a single company—and by the time they freed up, they maybe didn’t want to put that level of effort into something again. Also because of the faster cycle time, when you start company #2 you can assume that it won’t necessarily consume the next 10-20-30 years of your life—you can probably build something successful over say 5 years, maybe 8 years max, and so you’re not committing the rest of your life. This makes it easier for people to say, OK, hey, it worked once, I’ll try it again. The culture of startups in the Valley is clicking on all cylinders—everything from fundraising to hiring to building out a management team to signing up lawyers and accountants and bankers is simply easier than ever before.  I’m talking in a macro sense—over the last 10 years, versus prior decades, even considering the early 2000’s bust. So it’s just easier to start the next company that it was the past—the “pain in the ass” factor is lower. In terms of exit, there are some IPO’s, but the big thing is that M&A is a widely accepted and viable exit.  Big companies in and related to the Valley have actually become quite good, in general, at acquiring small companies—not perfect, but quite good.  They do it frequently, in order to build out their product families or grow market share.  This of course inspires more companies to be started and tends to compress the time cycles further. Third, all that said, it is striking how many of the truly revolutionary companies are started, at least in part, by people who haven’t done it before.  Google (Brin and Page), Yahoo (Yang and Filo), Facebook (Zuckerberg), Apple (Jobs and Wozniak), etc. When you see one of those really revolutionary companies and there’s some young kid with the idea, of course, they often are linked up with one or more seasoned, experienced people—Google (Schmidt, Doerr, Moritz), Yahoo (Moritz, Koogle), Facebook (Thiel, Breyer), Apple (Markkula).  So even there you see a kind of a serial entrepreneur (or VC or executive) effect which is another form of what you’re talking about. Fourth, drilling deeper into the motivations of the great serial entrepreneurs I know, the dominant themes are: Desire to prove oneself—either “I can do it again—it wasn’t a fluke the first time”, or “I was the junior partner last time, now I’ll be the senior partner”, or “I got fired from my last company, I’ll show those f****** VCs”, or something like that. Desire to continue working and being productive—“I’m 26 or 30 or 34, I have a lot of energy, I have to keep moving, and I’m certainly not going to go to work for some boring big company or be another hack VC... obviously I need to start another company”. In love with the technology or a new idea—there’s more of this than cynical people think. A feeling that we’re in a unique time and place where it’s possible for us to start, build, and be successful with multiple companies—it’d be a shame to walk away from the opportunity to continue to be a part of such a magical time and place.  This is a big motivator for me, by the way.  Growing up, I would have never dreamed that an industry like this would exist or that I would get to be a part of it.  I pinch myself every day. Money, but not just “I can buy a fancier cashmere car cover” kind of thing (although there is some of that)—just as often I think it’s money as a way to keep score (often in the form of something like, “I can’t believe Mark Cuban is a billionaire and I’m not; I can do that too”), or money as a way to have an impact on the world philanthropically—the more you make, the more you can give away.  That last one is certainly becoming a bigger and bigger motivator for me. With any given serial entrepreneur, it’s probably a mix of these. Fifth, a sharply related topic to all of this is that the opportunities are bigger than ever before.  It’s not an accident that companies like Google or Facebook or Paypal just get huge, and apparently overnight. For the first time in history, you have a global market of 1+ billion people, all connected over an interactive network where they’re all a click away from you.  That’s amazing. And 100 million new people are being added to that count every year, and that will continue for the next 30 years. A huge and growing market makes all kinds of magical things possible, and I think that’s what we’re seeing now. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"The Psychology of Entrepreneurial Misjudgment: Biases 1-6 Posted on March 24, 2008 Charlie Munger is an 80-something billionaire who cofounded top-tier law firm Munger, Tolles & Olson and is Warren Buffett’s long-time partner and Vice-Chairman at Berkshire Hathaway, one of the most successful companies of all time. Some people, including me, consider Mr. Munger to be an even more interesting thinker and writer than Mr. Buffett, and recently a group of Mr. Munger’s friends assembled a compilation book of his most interesting thoughts and speeches called Poor Charlie’s Almanack, inspired by Ben Franklin’s Poor Richard’s Almanack.  (The Munger book is only available on Amazon in used form, although you can apparently buy a new copy here.) Mr. Munger’s magnum opus speech, included in the book, is The Psychology of Human Misjudgment—an exposition of 25 key forms of human behavior that lead to misjudgment and error, derived from Mr. Munger’s 60 years of business experience.  Think of it as a practitioner’s summary of human psychology and behavioral economics as observed in the real world. In this series of blog posts, I will walk through all 25 of the biases Mr. Munger identifies, and then adapt them for the modern entrepreneur.  In each case I will start with relevant excerpts of Mr. Munger’s speech, and then after that add my own thoughts. One: Reward and Punishment Superresponse Tendency I place this tendency first in my discussion because almost everyone thinks he fully recognizes how important incentives and disincentives are in changing cognition and behavior. But this is not often so. For instance, I think I’ve been in the top five percent of my age cohort almost all my adult life in understanding the power of incentives, and yet I’ve always underestimated that power. Never a year passes but I get some surprise that pushes a little further my appreciation of incentive superpower. ...We [should] heed the general lesson implicit in the injunction of Ben Franklin in Poor Richard’s Almanack: “If you would persuade, appeal to interest and not to reason.” This maxim is a wise guide to a great and simple precaution in life: Never, ever, think about something else when you should be thinking about the power of incentives... One of the most important consequences of incentive superpower is what I call “incentive caused bias.” A man has an acculturated nature making him a pretty decent fellow, and yet, driven both consciously and subconsciously by incentives, he drifts into immoral behavior in order to get what he wants, a result he facilitates by rationalizing his bad behavior [like a salesman who harms her customers by selling them the wrong product because she gets paid more for selling it, versus the right product—see, e.g., the mutual fund industry]. ...Another generalized consequence of incentive caused bias is that man tends to “game” all human systems, often displaying great ingenuity in wrongly serving himself at the expense of others. Antigaming features, therefore, constitute a huge and necessary part of almost all system design. ...Military and naval organizations have very often been extreme in using punishment [the inverse of reward] to change behavior, probably because they needed to cause extreme behavior. Around the time of Caesar, there was a European tribe that, when the assembly horn blew, always killed the last warrior to reach his assigned place, and no one enjoyed fighting this tribe. Human response to incentives is indeed a huge behavioral motivator, and I think Mr. Munger is right that once you think you realize how big it is, you need to assume it’s even bigger. This is why stock options work so well in startups—and the fewer people in a startup, the better stock options work, since when there are only a few people in a company, it’s usually crystal clear to each person how her work will impact the value of the company. There is a wrong-headed and dangerous theory afoot that restricted stock (grants of fully in-the-money shares of stock) is a more appropriate motivator of employees of tech companies than stock options: Mr. Gates wanted Mr. Buffett’s input on whether to drop options in favor of restricted stock at Microsoft. [Gates] recalls asking: “How will employees respond to getting a lottery ticket that gives them a definite amount instead of one that could amount to nothing or a ridiculous sum?” Mr. Buffett’s reply, according to Mr. Gates, was: “My wife would rather have a ticket for one fur coat, than a ticket that gave her two or nothing.” Overt sexism aside, from an incentive standpoint the result of shifting from stock options to restricted stock should be obvious: current employees will be incented to preserve value instead of creating value.  And new hires will by definition be people who are conservative and change-averse, as the people who want to swing for the fences and get rewarded for creating something new will go somewhere else, where they will receive stock options—in typically greater volume than anyone will ever grant restricted stock—and have greater upside. And sure enough, in the wake of shifting towards restricted stock and away from stock options, Microsoft’s stock has been flat as a pancake.  The incentive works. Now, against that, it is true that stock options, particularly for public companies, have an often-destructive random component: they tend to increase in value in rising stock market environments and decrease in value (potentially to zero) in falling stock market environments, regardless of whether value is being created inside your particular company. For that reason, in the long run it probably makes sense for some new approach to stock-based compensation to be developed that both preserves the motivation to create as opposed to preserve value, but factors out the environmental swings of rising and falling stock markets.  Some form of indexing against market averages would probably do the trick.  This has been tried from time to time, and I expect it to be tried more in the future, at least for public companies. As a company grows, stock options and other forms of equity-based motivation become less and less useful as an incentive tool, since it becomes harder for many employees in a large company to see how their individual behavior would have any effect on the stock price of the overall corporation.  So, more tactical incentives kick in, such as cash bonuses. The design of tactical incentives—e.g. bonuses—is a whole topic in and of itself, and is critically important as your company grows.  The most significant thing to keep in mind is that how the goals are designed really matters—as Mr. Munger says, people tend to game any system you put in place, and then they tend to rationalize that gaming until they believe they really are doing the right thing. I think it was Andy Grove who said that for every goal you put in front of someone, you should also put in place a counter-goal to restrict gaming of the first goal. So, for example, if you are incenting your recruiters on the number of new employees recruited and hired, you need to also give them a counter-goal (and tie it to their compensation) that measures the quality of the new hires three months in.  Otherwise the recruiters are guaranteed to give you what you don’t want: a lot of mediocre new hires. One of the great unwritten Silicon Valley skewed incentive stories was a major datacenter vendor in the late 90’s that incented its salespeople based on bookings of long-term datacenter leases, without sufficient counter-goals tied to revenue collection or the customer’s ability to pay.  Sure enough, soon the company’s reported bookings were heading straight up, revenue was flat, and cash headed straight down, resulting in a truly spectacular bankruptcy.  The salespeople got paid, though, so they were happy. More recently, skewed incentives in the mortgage industry—mortage issuers getting paid based on quantity of mortgages issued, versus ability to pay—caused many of the current catastrophic Wall Street financial meltdowns you get to read about every day. Even engineers need counter-goals: incent engineers based purely on a ship date, and you’ll get a shipping product with lots of bugs.  Incent based on number of bugs fixed, and you’ll never get any new features.  And so on. Especially in smaller companies, peer pressure can be a very effective form of incentive.  This is greatly enabled and abetted by transparency.  People hate to be embarrassed in front of their peer group, so if it’s crystal clear who’s performing well and who isn’t, poor performers will be highly motivated to improve—and if they’re not, that’s good to know, since obviously then you really need to fire them. Finally, any entrepreneur should be highly attuned to incentives when hiring outside executives, especially a CEO.  Hire a CEO and give her a large stock-option grant with four-year vesting, and you can guarantee she will sell the company in year four.  Give her a stock-option grant with accelerated vesting on change of control and she will sell the company sooner than that.  Founders can get tripped up on this because they naturally have an emotional incentive to see the company succeed that hired executives often do not share. And of course, never get caught between a venture capitalist and her incentives. Two: Liking/Loving Tendency ...[W]hat will a man naturally come to like and love, apart from his parent, spouse and child? Well, he will like and love being liked and loved... [M]an will generally strive, lifelong, for the affection and approval of many people not related to him. One very practical consequence of Liking/Loving Tendency is that it acts as a conditioning device that makes the liker or lover tend (1) to ignore faults of, and comply with wishes of, the object of his affection, (2) to favor people, products, and actions merely associated with the object of his affection (as we shall see when we get to “Influence-from-Mere-Association Tendency”), and (3) to distort other facts to facilitate love. The application of this principle to entrepreneurs is obvious: entrepreneurs want to be liked just like everyone else, and wanting to be liked can be a major impediment to entrepreneurial success due to at least two major reasons. First, an entrepreneur, like any CEO, has to make tough decisions about what her company will do, and those decisions will often run counter to the preferences of her employees.  You don’t have to be involved in that many startups to find one where the entrepreneur knows she needs to make a tough decision—such as change strategy, or cancel a flawed project—but can’t quite do it because employees won’t like it.  Of course this always backfires: employees also don’t like leaders who don’t make the tough decisions that have to be made. Second, an entrepreneur, like any manager, has to fire people who aren’t great or who aren’t right for the tasks at hand.  This naturally makes people not like you, particularly the people you fire.  But again, not doing this backfires: nobody great wants to be in a company populated by mediocre or ill-fitting peers. I think these pressures are intensified in a small company versus a larger company, because in a small company everyone tends to know everyone else and people naturally form strong personal relationships within the group—so the desire to be liked is stronger, and the perceived risk from making decisions that people won’t like is higher. A specific form of this dynamic in a startup is when you have multiple founders, of whom one is the CEO.  The founder who is the CEO inevitably discovers that it becomes very hard to stay close personal friends with the other founders.  As they say, it’s lonely at the top—if you’re doing your job right. Finally, some entrepreneurs have emotional resistance to pursuing a strategy that does not meet with immediate approval from press, analysts, and other entrepreneurs.  This is worth watching carefully—if everyone agrees right up front that whatever you are doing makes total sense, it probably isn’t a new and radical enough idea to justify a new company. Three: Disliking/Hating Tendency In a pattern obverse to Liking/Loving Tendency, the newly arrived human is also “born to dislike and hate” as triggered by normal and abnormal triggering forces in its life... As a result, the long history of man contains almost continuous war... Disliking/Hating Tendency also acts as a conditioning device that makes the disliker/hater tend to (1) ignore virtues in the object of dislike, (2) dislike people, products, and actions merely associated with the object of his dislike, and (3) distort other facts to facilitate hatred. If this is a problem inside your company, then you have bigger issues than I can help you with. However, I think this dynamic kicks in for a startup when thinking about competitors. I see two destructive consequences of this bias in startups with competitors: First, I believe startups often overfocus on their competitors.  It’s the easiest thing in the world to orient yourself in opposition to another company in the same market, and to plan your actions based on what will cause damage to the competitor or block the competitor from getting business. In the startup world, that often leads to multiple competitors engaged in a shooting war in a market that’s still too small for anyone to succeed. I think it’s much better for a startup to focus on creating and developing a large market, as opposed to fighting over a small market. So when your startup’s competitive juices get flowing—especially for the first time—and you find yourself fixated on a competitor, be sure to take a step back and say, is this really what we want to be focused on right now—is the market we’re both in really large enough to warrant this?  If so, sure, go for it, guns blazing.  But if not, stepping back and thinking about how to focus instead on creating a large market might be more valuable. A variant on this dynamic is letting your competitor determine your strategy by watching what he does and then making countermoves.  The issue here is that it’s highly likely that neither one of you actually knows that much about what you are doing yet—since you are in a new market, by definition—and while you know you don’t know that much about what you’re doing yet, you only observe your competitors’s deliberate actions as opposed to seeing their equivalent or greater level of internal confusion.  So they seem like they know what they’re doing, and so you fall into assuming they know more than you do, when they probably don’t. Second, when you are in a truly competitive situation, this bias can easily lead you to underestimate your competitor by, as Mr. Munger says, “ignoring virtues in the object of dislike”. His product sucks, his salespeople aren’t as good, his venture capitalists are those morons who backed that large datacenter vendor that went bankrupt—and so on. Notably, this attitude can become cultural in your company very quickly.  I think that if you’re in a shooting war, even if you privately think your competitor is an amoral pinhead, that you establish a tone that says, we’ll assume that he’s highly competent and has many fine virtues, which we will respect and then systematically target with our own strengths and virtues until we have killed him. Four: Doubt-Avoidance Tendency The brain of man is programmed with a tendency to quickly remove doubt by reaching some decision. It is easy to see how evolution would make animals, over the eons, drift toward such quick elimination of doubt. After all, the one thing that is surely counterproductive for a prey animal that is threatened by a predator is to take a long time in deciding what to do... So pronounced is the tendency in man to quickly remove doubt by reaching some decision that behavior to counter the tendency is required from judges and jurors. Here, delay before decision making is forced. And one is required to so comport himself, prior to conclusion time, so that he is wearing a “mask” of objectivity. And the “mask” works to help real objectivity along, as we shall see when we next consider man’s Inconsistency-Avoidance Tendency... What triggers Doubt-Avoidance Tendency? Well, an unthreatened man, thinking of nothing in particular, is not being prompted to remove doubt through rushing to some decision. As we shall see later when we get to Social-Proof Tendency and Stress-Influence Tendency, what usually triggers Doubt-Avoidance Tendency is some combination of (1) puzzlement and (2) stress. This is probably a good one for entrepreneurs.  You’d better not have a lot of doubts about what you are doing because everyone else will, and if you do too, you’ll probably give up. Of course, an entrepreneur’s doubt avoidance is only a plus right up to the point where it becomes pigheaded stubbornness that interferes with her ability to see reality, particularly when a strategy is not working. In my view, entrepreneurial judgment is the ability to tell the difference between a situation that’s not working but persistence and iteration will ultimately prove it out, versus a situation that’s not working and additional effort is a destructive waste of time and radical change is necessary. I don’t believe there are any good rules for being able to tell the difference between the two.  Which is one of the main reasons starting a company is so hard. Five: Inconsistency-Avoidance Tendency [People are] reluctant to change, which is a form of inconsistency avoidance. We see this in all human habits, constructive and destructive. Few people can list a lot of bad habits that they have eliminated, and some people cannot identify even one of these. Instead, practically every one has a great many bad habits he has long maintained despite their being known as bad. Given this situation, it is not too much in many cases to appraise early-formed habits as destiny. When Marley’s miserable ghost says, “I wear the chains I forged in life,” he is talking about chains of habit that were too light to be felt before they became too strong to be broken. [T]ending to be maintained in place by the anti-change tendency of the brain are one’s previous conclusions, human loyalties, reputational identity, commitments... It is easy to see that a quickly reached conclusion, triggered by Doubt-Avoidance Tendency, when combined with a tendency to resist any change in that conclusion, will naturally cause a lot of errors in cognition for modern man. And so it observably works out. We all deal much with others whom we correctly diagnose as imprisoned in poor conclusions that are maintained by mental habits they formed early and will carry to their graves... And so, people tend to accumulate large mental holdings of fixed conclusions and attitudes that are not often reexamined or changed, even though there is plenty of good evidence that they are wrong... As Lord Keynes pointed out about his exalted intellectual group at one of the greatest universities in the world, it was not the intrinsic difficulty of new ideas that prevented their acceptance. Instead, the new ideas were not accepted because they were inconsistent with old ideas in place... We have no less an authority for this than Max Planck, Nobel laureate, finder of “Planck’s constant.” Planck is famous not only for his science but also for saying that even in physics the radically new ideas are seldom really accepted by the old guard. Instead, said Planck, the progress is made by a new generation that comes along, less brain-blocked by its previous conclusions... One corollary of Inconsistency-Avoidance Tendency is that a person making big sacrifices in the course of assuming a new identity will intensify his devotion to the new identity. After all, it would be quite inconsistent behavior to make a large sacrifice for something that was no good. And thus civilization has invented many tough and solemn initiation ceremonies, often public in nature, that intensify new commitments made. This goes hand-in-hand with doubt-avoidance, and again is usually a plus for a startup, since it leads to greater commitment on the part of the entrepreneur and the team.  (And yes, I am in favor of blood oaths for startups.) Perhaps this bias is most relevant to how new markets develop.  Sometimes you get lucky—you bring a new product to market, and the target customers all go, great, we’ll take it!  However, often you get a level of resistance from the market that can be puzzling—“can’t they see that our new product would be better for them than what they have now?” This in turn leads to the odd dynamic you often see where a startup will field a new product, nobody wants it, and the startup goes belly up.  Then three or four or five years later, another startup launches with a very similar product, and this time the market says, hell yes! I think this is something that every entrepreneur needs to watch very carefully.  Sometimes it’s simply a matter of timing—and if people just aren’t ready for a new idea, you usually can’t make them ready, and you have to wait for them to change or for a new generation of customers to come along. My favorite way around this problem is the one identified by Clayton Christensen in The Innovator’s Dilemma: don’t go after existing customers in a category and try to get them to buy something new; instead, go find the new customers who weren’t able to afford or adopt the incarnation of the status quo. For example, when the personal computer was invented, the desirable market was not the universe of people who were already buying computers—a.k.a. mainframe and minicomputer buyers—but rather the universe of the people who couldn’t afford a mainframe or minicomputer and therefore had never had a computer before. Similarly, the desirable market for Hotmail in the early days was not existing email aficionados who were already using sophisticated email desktop software, but rather the universe of people who were coming on the Internet for the first time who didn’t even have email yet and for whom web-based email was by far the easiest way to start. Conversely, one of the reasons that today’s consumer Internet companies have the wind at our backs versus our peers 10 years ago is that a whole new generation of consumers has come of age in the last 10 years for whom the Internet is their primary medium—time and demographics are on our side now.  That makes life a lot easier, let me tell you.  Meanwhile, the average age of television viewers continues drifting higher and higher... Six: Curiosity Tendency This is, frankly, an odd one for Mr. Munger to include, since it’s primarily a plus, and he doesn’t really identify a downside. The only important thing I can think to add—aside from the importance of hiring curious people—is that lack of curiosity can be a huge danger to a startup in the following way: often, your initial strategy won’t quite work, but you can learn as you go based on other things that happen in the market and eventually iterate into a strategy that does work.  Obviously, insufficient curiosity can prevent you from seeing the new data and lead you to continue to pursue a losing strategy even when you wouldn’t have to. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Age and the Entrepreneur: Some data Posted on August  8, 2007 A short time back, several smart bloggers engaged in an enthusiastic debate about age and entrepreneurs—some taking the position that kids have a leg up on older entrepreneurs at least for certain categories of startups, and others theorizing that age is largely irrelevant (or as Ali G would put it, “geezers is good entrepreneurs as well, man”). I have opinions on this topic, but rather than just mouthing off like I would normally do, I decided to go get some data.  This post presents that data—the next post will have the mouthing off. I’m not aware of any systematic data on age and high-tech entrepreneurs.  As far as I’m aware, all we have are anecdotes.  However, a professor of psychology at University of California Davis named Dean Simonton has conducted extensive research on age and creativity across many other fields, including science, literature, music, chess, film, politics, and military combat. Dr. Simonton’s research is unparalleled—he’s spent his career studying this and related topics and his papers make for absolutely fascinating reading. For this post, I’ll be concentrating on his paper Age and Outstanding Achievement: What Do We Know After a Century of Research? from 1988.  I haven’t been able to find a PDF of the paper online but you can read a largely intact cached HTML version courtesy of Google Scholar. Let’s go to the paper: For centuries, thinkers have speculated about the association between a person’s age and exceptional accomplishment: Is there an optimal age for a person to make a lasting contribution to human culture or society? When during the life span can we expect an individual to be most prolific or influential? You can see why I think this is relevant. Here we adopt the product-centered approach, that is, our focus is on real-life achievements rather than performance on abstract... measures. ... [A]chievement [takes] the form of noteworthy creativity... the goal is to assess how productivity changes over the life span... [I] focus on individual accomplishment in such endeavors as science, philosophy, literature, music, and the visual arts. ... [Studies like these focus] on three core topics: (a) the age curve that specifies how creative output varies over the course of a career, (b) the connection between productive precocity, longevity, and rate of output, and (c) the relation between quantity and quality of output (i.e., between “productivity” and “creativity”). Dr. Simonton also discusses leadership as distinct from creative production, but I’m ignoring the leadership part for now since it’s quite different. One empirical generalization appears to be fairly secure: If one plots creative output as a function of age, productivity tends to rise fairly rapidly to a definite peak and thereafter decline gradually until output is about half the rate at the peak. This is the centerpiece of Dr. Simonton’s overall theory across many domains.  And is probably not unexpected.  But here’s where it gets really interesting: [T]he location of the peak, as well as the magnitude of the postpeak decline, tends to vary depending on the domain of creative achievement. At one extreme, some fields are characterized by relatively early peaks, usually around the early 30s or even late 20s in chronological units, with somewhat steep descents thereafter, so that the output rate becomes less than one-quarter the maximum. This age-wise pattern apparently holds for such endeavors as lyric poetry, pure mathematics, and theoretical physics... The typical trends in other endeavors may display a leisurely rise to a comparatively late peak, in the late 40s or even 50s chronologically, with a minimal if not largely absent drop-off afterward. This more elongated curve holds for such domains as novel writing, history, philosophy, medicine, and general scholarship. Well, that’s interesting. It must be stressed that these interdisciplinary contrasts do not appear to be arbitrary but instead have been shown to be invariant across different cultures and distinct historical periods. As a case in point, the gap between the expected peaks for poets and prose authors has been found in every major literary tradition throughout the world and for both living and dead languages. Indeed, because an earlier productive optimum means that a writer can die younger without loss to his or her ultimate reputation, poets exhibit a life expectancy, across the globe and through history, about a half dozen years less than prose writers do. You know what that means—if you’re going to argue that younger entrepreneurs have a leg up, then you also have to argue that they will have shorter lifespans.  Fun with math! You may not be surprised to find that in creative fields, the power law rule—also known as the 80/20 rule—definitely applies: A small percentage of the workers in any given domain is responsible for the bulk of the work. Generally, the top 10% of the most prolific elite can be credited with around 50% of all contributions, whereas the bottom 50% of the least productive workers can claim only 15% of the total work, and the most productive contributor is usually about 100 times more prolific than the least. Here’s where it gets really interesting again: Precocity, longevity, and output rate are each strongly associated with final lifetime output—that is, those who generate the most contributions at the end of a career also tend to have begun their careers at earlier ages, ended their careers at later ages, and produced at extraordinary rates throughout their careers. ... These three components are conspicuously linked with each other: Those who are precocious also tend to display longevity, and both precocity and longevity are positively associated with high output rates per age unit. OK, so on to the main question, which is, when’s the peak? Those creators who make the most contributions tend to start early, end late, and produce at above-average rates, but are the anticipated career peaks unchanged, earlier, or later in comparison to what is seen for their less prolific colleagues? Addressing this question properly requires that we first investigate the relation between quantity and quality, both within and across careers. ... This is a very complex topic and Dr. Simonton goes into great detail about it throughout his work.  I’m going to gloss over it a bit, but if you are interested in this topic, by all means dig into it more via Google Scholar. First, if one calculates the age curves separately for major and minor works within careers, the resulting functions are basically identical... Second... minor and major contributions... fluctuate together.  Those periods in a creator’s life that see the most masterpieces also witness the greatest number of easily forgotten productions, on the average. Another way of saying the same thing is to note that the “quality ratio,” or the proportion of major products to total output per age unit, tends to fluctuate randomly over the course of any career. The quality ratio neither increases nor decreases with age... These outcomes are valid for both artistic and scientific modes of creative contribution.  What these two results signify is that... age becomes irrelevant to determining the success of a particular contribution. OK, that’s interesting.  Quality of output does not vary by age... which means, of course, that attempting to improve your batting average of hits versus misses is a waste of time as you progress through a creative career.  Instead you should just focus on more at-bats—more output.  Think about that one. If this sounds insane to you, Dr. Simonton points out that the periods of Beethoven’s career that had the most hits also had the most misses—works that you never hear.  As I am always fond of asking in such circumstances, if Beethoven couldn’t increase his batting average over time, what makes you think you can? [C]reativity is a probabilistic consequence of productivity, a relationship that holds both within and across careers. Within single careers, the count of major works per age period will be a positive function of total works generated each period, yielding a quality ratio that exhibits no systematic developmental trends. And across careers, those individual creators who are the most productive will also tend, on the average, to be the most creative: Individual variation in quantity is positively associated with variation in quality. [This] constant-probability-of-success model has an important implication for helping us understand the relation between total lifetime output and the location of the peak age for creative achievement within a single career. Because total lifetime output is positively related to total creative contributions and hence to ultimate eminence, and given that a creator’s most distinguished work will appear in those career periods when productivity is highest, the peak age for creative impact should not vary as a function of either the success of the particular contribution or the final fame of the creator. ... Thus, even though an impressive lifetime output of works, and subsequent distinction, is tied to precocity, longevity, and production rate, the expected age optimum for quantity and quality of contribution is dependent solely on the particular form of creative expression. Anyone who demonstrates... an age decrement in achievement is likely to provoke controversy. After all, aging is a phenomenon easy enough to become defensive about, and such defensiveness is especially probable among those of us who are already past the putative age peak for our particular field of endeavor... I think Dr. Simonton is ready to start blogging. His paper then goes on to discuss many possible extrinsic factors such as health that could impair later-life output, but in the end he concludes that the data is pretty conclusive that such extrinsinc factors serve as “random shocks” to any individual’s career that do not affect the overall trends. He then goes on to discuss possible intrinsic factors that could explain a relationship between age and creative accomplishment: G. M. Beard was not merely the earliest contributor [in 1874] to the empirical literature on age and achievement but its first theorist as well. According to him, creativity is a function of two underlying factors, enthusiasm and experience. Enthusiasm provides the motivational force behind persistent effort, yet enthusiasm in the absence of the second factor yields just original work. Experience gives the achiever the ability to separate wheat from chaff and to express original ideas in a more intelligible and persistent fashion. Yet experience in the absence of enthusiasm produces merely routine contributions.  Genuine creativity requires the balanced cooperation of both enthusiasm and experience. Beard postulates, however, that these two essential components display quite distinctive distributions across the life span. Whereas enthusiasm usually peaks early in life and steadily declines thereafter, experience gradually increases as a positive monotonic function of age. The correct equilibrium between the two factors is attained between the ages of 38 and 40, the most common age optima for creative endeavors. Prior to that expected peak, an individual’s output would be excessively original, and in the postpeak phase the output would be overly routine. The career floruit in the late 30s thus represents the uniquely balanced juxtaposition of the rhapsodies of youth and the wisdom of maturity. Beard’s theory is not without attractive features... Beard’s account, for all its simplicity, can boast a respectable amount of explanatory power. Besides handling the broad form of the age curve, this theory leads to an interpretation of why different endeavors may peak at distinct ages. The contrast between poetic and prose literature, for instance, can be interpreted as the immediate consequence of the assumption that the two domains demand a different mix of the two factors: poetry, more enthusiasm, and prose, more experience. Indeed, in fields in which expertise may be far more crucial than emotional vigor, most notably in scholarship, we would anticipate little if any decline with age, and such is the case. Dr. Simonton, however, then goes on to explain that this theory does not really match the data—for example, the data shows that quality of output in practically all fields does not decline systematically with age, which is what you’d expect from Beard’s theory. The paper then digs into possible correlations between intelligence as measured by such metrics as IQ, and creative output: [E]ven if a minimal level of intelligence is requisite for achievement, beyond a threshold of around IQ 120 (the actual amount varying across fields), intellectual prowess becomes largely irrelevant in predicting individual differences in... creativity. So what have we learned in a nutshell? Generally, productivity—output—rises rapidly from the start of a career to a peak and then declines gradually until retirement. This peak in productivity varies by field, from the late 20s to the early 50s, for reasons that are field-specific. Precocity, longevity, and output rate are linked.  “Those who are precocious also tend to display longevity, and both precocity and longevity are positively associated with high output rates per age unit.”  High producers produce highly, systematically, over time. The odds of a hit versus a miss do not increase over time.  The periods of one’s career with the most hits will also have the most misses.  So maximizing quantity—taking more swings at the bat—is much higher payoff than trying to improve one’s batting average. Intelligence, at least as measured by metrics such as IQ, is largely irrelevant. So here’s my first challenge: to anyone who has an opinion on the role of age and entrepreneurship—see if you can fit your opinion into this model! And here’s my second challenge: is entrepreneurship more like poetry, pure mathematics, and theoretical physics—which exhibit a peak age in one’s late 20s or early 30s—or novel writing, history, philosophy, medicine, and general scholarship—which exhibit a peak age in one’s late 40s or early 50s?  And how, and why? [Update: Naval Ravikant has written a particularly interesting response to this post here.] This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Luck and the Entrepreneur: The four kinds of luck Posted on August 14, 2007 In the last few weeks, I’ve been reading huge stacks of books on the psychology of creativity and motivation—which is the reason for the relative scarcity of substantive blog posts.  Said post situation will be remedied shortly, by a series of posts on—surprise!—the psychology of creativity and motivation. But first, to complement my post on age and the entrepreneur from a few days ago, this post begins a series of occasional posts about luck and the entrepreneur. Luck is something that every successful entrepreneur will tell you plays a huge role in the difference between success and failure.  Many of those successful entrepreneurs will only admit this under duress, though, because if luck does indeed play such a huge role, then that seriously dents the image of the successful entrepreneur as an omniscient business genius. Moreover, some of those people would shrug and say that luck is simply out of your hands.  Sometimes you have it, sometimes you don’t.  But perhaps there’s more to it than that. Dr. James Austin, a neurologist and philosopher (!), wrote an outstanding book called Chase, Chance, and Creativity—originally in 1978, then updated in 2003.  It’s the best book I’ve read on the role of luck, chance, and serendipity in medical research—or, for that matter, any creative endeavor.  And because he’s a neurologist, he has a grounding in how the brain actually exerts itself creatively—although there is more recent research on that topic that is even more illuminating (more on that later). In the book, Dr. Austin outlines his theory of the four kinds of luck—or, as he calls it, chance; I will use the terms interchangeably. First, he defines chance as follows: Chance... something fortuitous that happens unpredictably without discernable human intention. Chance is unintentional, it is capricious, but we needn’t conclude that chance is immune from human interventions.  However, one must be careful not to read any unconsciously purposeful intent into “interventions”... [which] are to be viewed as accidental, unwilled, inadvertent, and unforseeable. Indeed, chance plays several distinct roles when humans react creatively with one another and with their environment... We can observe chance arriving in four major forms and for four different reasons.  The principles involved affect everyone. Here’s where it helps to be a neurologist writing on this topic: The four kinds of chance each have a different kind of motor exploratory activity and a different kind of sensory receptivity. The [four] varieties of chance also involve distinctive personality traits and differ in the way one particular individual influences them. OK, so what are they? In Chance I, the good luck that occurs is completely accidental.  It is pure blind luck that comes with no effort on our part. In Chance II, something else has been added—motion. Years ago, when I was rushing around in the laboratory [conducting medical research], someone admonished me by asking, “Why all the busyness?  One must distinguish between motion and progress\". Yes, at some point this distinction must be made.  But it cannot always be made first.  And it is not always made consciously.  True, waste motion should be avoided.  But, if the researcher did not move until he was certain of progress he would accomplish very little... A certain [basic] level of action “stirs up the pot”, brings in random ideas that will collide and stick together in fresh combinations, lets chance operate. Motion yields a network of new experiences which, like a sieve, filter best when in constant up-and-down, side-to-side movement... Unluck runs out if you keep stirring up things so that random elements can combine, by virtue of you and their inherent affinities. Sounds like a startup! Chance II springs from your energetic, generalized motor activities... the freer they are, the better. [Chance II] involves the kind of luck [Charles] Kettering... had in mind when he said, “Keep on going and chances are you will stumble on something, perhaps when you are least expecting it.  I have never heard of anyone stumbling on something sitting down.” OK, now here’s where it gets interesting: Now, as we move on to Chance III, we see blind luck, but it tiptoes in softly, dressed in camouflage. Chance presents only a faint clue, the potential opportunity exists, but it will be overlooked except by that one person uniquely equipped to observe it, visualize it conceptually, and fully grasp its significance. Chance III involves involves a special receptivity, discernment, and intuitive grasp of significance unique to one particular recipient. Louis Pasteur characterized it for all time when he said, “Chance favors the prepared mind.” I thought that was Eric Bogosian in Under Siege 2: Dark Territory, but OK. ...The classic example of [Chance III] occured in 1928, when Sir Alexander Fleming’s mind instantly fused at least five elements into a conceptually unified nexus [when he discovered penicillin—one of the most important medical breakthroughs ever]. He was at his work bench in the laboratory, made an observation, and his mental sequences then went something like this: (a) I see that a mold has fallen by accident into my culture dish; (2) the staphylococcal colonies residing near it failed to grow; (3) therefore, the mold must have secreted something that killed the bacteria; (4) this reminds me of a similar experience I had once before; (5) maybe this new “something” from the mold could be used to kill staphylococci that cause human infections. Actually, Fleming’s mind was exceptionally well prepared.  Some nine years earlier, while suffering from a cold [you can’t make this stuff up], his own nasal drippings had found their way onto a culture dish.  He noted that the bacteria around his mucous were killed, and astutely followed up the lead.  His experiments then led him to discover... lysozyme... [which] proved inappropriate for medical use, but think of how receptive Fleming’s mind was to the penicillin mold when it later happened on the scene! OK, what about Chance IV? [Chance IV] favors the individualized action. This is the fourth element in good luck—an active, but unintentional, subtle individualized prompting of it. Chance IV is the kind of luck that develops during a probing action which has a distinctive personal flavor. The English Prime Minister, Benjamin Disraeli, summed up the principle underlying Chance IV when he noted:  “We make our fortunes and we call them fate.” Chance IV comes to you, unsought, because of who you are and how you behave. ...Chance IV is so personal, it is not easily understood by someone else the first time around... here we probe into the subterranean recesses of personal hobbies and behavioral quirks that autobiographers know about, biographers rarely. [In neurological terms], Chance III [is] concerned with personal sensory receptivity; its counterpart, Chance IV, [is] involved with personal motor behavior. [You] have to look carefully to find Chance IV for three reasons. The first is that when it operates directly, it unfolds in an elliptical, unorthodox manner. The second is that it often works indirectly. The third is that some problems it may help solve are uncommonly difficult to understand because they have gone through a process of selection. We must bear in mind that, by the time Chance IV finally occurs, the easy, more accessible problems will already have been solved earlier by conventional actions, conventional logic, or by the operations of the other forms of chance.  What remains late in the game, then, is a tough core of complex, resistant problems.  Such problems yield to none but an unusual approach... [Chance IV involves] a kind of discrete behavioral performance focused in a highly specific manner. Here’s the money quote: Whereas the lucky connections in Chance II might come to anyone with disposable energy as the happy by-product of any aimless, circular stirring of the pot, the links of Chance IV can be drawn together and fused only by one quixotic rider cantering in on his own homemade hobby horse to intercept the problem at an odd angle. Chance I is completely impersonal; you can’t influence it. Chance II favors those who have a persistent curiosity about many things coupled with an energetic willingness to experiment and explore. Chance III favors those who have a sufficient background of sound knowledge plus special abilities in observing, remembering, recalling, and quickly forming significant new associations. Chance IV favors those with distinctive, if not eccentric hobbies, personal lifestyles, and motor behaviors. This of course leads to a number of challenges for how we live our lives as entrepreneurs and creators in any field: How energetic are we?  How inclined towards motion are we?  Those of you who read my first age and the entrepreneur post will recognize that this is a variation on the “optimize for the maximum number of swings of the bat” principle.  In a highly uncertain world, a bias to action is key to catalyzing success, and luck, and is often to be preferred to thinking things through more throughly. How curious are we?  How determined are we to learn about our chosen field, other fields, and the world around us?  In my post on hiring great people, I talked about the value I place on curiosity—and specifically, curiosity over intelligence.  This is why.  Curious people are more likely to already have in their heads the building blocks for crafting a solution for any particular problem they come across, versus the more quote-unquote intelligent, but less curious, person who is trying to get by on logic and pure intellectual effort. How flexible and aggressive are we at synthesizing—at linking together multiple, disparate, apparently unrelated experiences on the fly?  I think this is a hard skill to consciously improve, but I think it is good to start most creative exercises with the idea that the solution may come from any of our past experiences or knowledge, as opposed to out of a textbook or the mouth of an expert.  (And, if you are a manager and you have someone who is particularly good at synthesis, promote her as fast as you possibly can.) How uniquely are we developing a personal point of view—a personal approach—a personal set of “eccentric hobbies, personal lifestyles, and motor behaviors” that will uniquely prepare us to create?  This, in a nutshell, is why I believe that most creative people are better off with more life experience and journeys afield into seemingly unrelated areas, as opposed to more formal domain-specific education—at least if they want to create. In short, I think there is a roadmap to getting luck on our side, and I think this is it. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Pmarca Guide to Personal Productivity Posted on June  4, 2007 One of my all-time favorite guilty pleasures is indulging in productivity porn. Productivity porn (or, for those really in the know, “productivity pr0n\") consists of techniques, tactics, and tricks for maximizing personal productivity—or, as they say, “getting things done”. Having enjoyed such fine purveyors of prodporn as Merlin Mann, Danny O’Brien, Gina Trapani, David Allen, and Tim Ferriss, I’d like to return the favor with the following: the Pmarca Guide to Personal Productivity. The techniques that follow work together as an integrated set for me, but they probably won’t for you.  Maybe you’ll get one or two ideas—probably out of the ideas I stole from other people.  If so, I have succeeded. Let’s start with a bang: don’t keep a schedule. I’m totally serious.  If you pull it off—and in many structured jobs, you simply can’t—this simple tip alone can make a huge difference in productivity. By not keeping a schedule, I mean: refuse to commit to meetings, appointments, or activities at any set time in any future day. As a result, you can always work on whatever is most important or most interesting, at any time. Want to spend all day writing a research report?  Do it! Want to spend all day coding?  Do it! Want to spend all day at the cafe down the street reading a book on personal productivity?  Do it! When someone emails or calls to say, “Let’s meet on Tuesday at 3”, the appropriate response is: “I’m not keeping a schedule for 2007, so I can’t commit to that, but give me a call on Tuesday at 2:45 and if I’m available, I’ll meet with you.” Or, if it’s important, say, “You know what, let’s meet right now.” Clearly this only works if you can get away with it.  If you have a structured job, a structured job environment, or you’re a CEO, it will be hard to pull off. But if you can do it, it’s really liberating, and will lead to far higher productivity than almost any other tactic you can try. This idea comes from a wonderful book called A Perfect Mess, which explains how not keeping a schedule has been key to Arnold Schwarzenegger’s success as a movie star, politician, and businessman over the last 20 years. Want to meet with Arnold?  Sure, drop on by.  He’ll see you if he can.  But you might want to call first.  Sorry, he doesn’t schedule appointments in advance. As a result, for 20 years he has been free to work on whatever is most important in his life at any time. Those of you in California may recall how, once Arnold decided to run for Governor, he went into a blaze of action and activity that resulted in a landslide victory.  The book attributes this in part to the fact that his schedule was completely clear and he could spend all day, every day on his new political career, without having to worry about distractions or commitments. If you have at any point in your life lived a relatively structured existence—probably due to some kind of job with regular office hours, meetings, and the like—you will know that there is nothing more liberating than looking at your calendar and seeing nothing but free time for weeks ahead to work on the most important things in whatever order you want. This also gives you the best odds of maximizing flow, which is a whole ’nother topic but highly related. I’ve been trying this tactic as an experiment in 2007, as those of you who have emailed me to suggest we get together or that I go to a conference or to a meeting will attest.  And I am so much happier, I can’t even tell you.  I get so much more time to focus on the things that really matter—in my case, my two companies, my nonprofit boards, and my lovely wife. The other great thing about this tactic is that it doesn’t have to be all or nothing—there are quite a few things that still sneak onto my calendar that I really can’t get out of.  But one is still able to draw the line between “must do” and “sounds interesting but I’m not keeping a schedule”. Keep three and only three lists: a Todo List, a Watch List, and a Later List. The more into lists you are, the more important this is. Into the Todo List goes all the stuff you “must” do—commitments, obligations, things that have to be done.  A single list, possibly subcategorized by timeframe (today, this week, next week, next month). Into the Watch List goes all the stuff going on in your life that you have to follow up on, wait for someone else to get back to you on, remind yourself of in the future, or otherwise remember. Into the Later List goes everything else—everything you might want to do or will do when you have time or wish you could do. If it doesn’t go on one of those three lists, it goes away. Each night before you go to bed, prepare a 3x5 index card with a short list of 3 to 5 things that you will do the next day. And then, the next day, do those things. I sit down at my desk before I go to sleep, pull up my Todo List (which I keep in Microsoft Word’s outline mode, due to long habit), and pick out the 3 to 5 things I am going to get done tomorrow.  I write those things on a fresh 3x5 card, lay the card out with my card keys, and go to bed.  Then, the next day, I try like hell to get just those things done.  If I do, it was a successful day. People who have tried lots of productivity porn techniques will tell you that this is one of the most successful techniques they have ever tried. Once you get into the habit, you start to realize how many days you used to have when you wouldn’t get 3 to 5 important/significant/meaningful things done during a day. Then, throughout the rest of the day, use the back of the 3x5 card as your Anti-Todo List. This isn’t a real list.  And the name is tongue firmly in cheek. What you do is this: every time you do something—anything—useful during the day, write it down in your Anti-Todo List on the card. Each time you do something, you get to write it down and you get that little rush of endorphins that the mouse gets every time he presses the button in his cage and gets a food pellet. And then at the end of the day, before you prepare tomorrow’s 3x5 card, take a look at today’s card and its Anti-Todo list and marvel at all the things you actually got done that day. Then tear it up and throw it away. Another day well spent, and productive. I love this technique—being able to put more notches on my accomplishment belt, so to speak, by writing down things on my Anti-Todo list as I accomplish them throughout the day makes me feel marvelously productive and efficient.  Far more so than if I just did those things and didn’t write them down. Plus, you know those days when you’re running around all day and doing stuff and talking to people and making calls and responding to emails and filling out paperwork and you get home and you’re completely exhausted and you say to yourself, “What the hell did I actually get done today?” Your Anti-Todo list has the answer. By the way, in order to do this, you have to carry a pen with you everywhere you go.  I recommend the Fisher Space Pen.  It’s short and bullet-shaped so it won’t poke you in the thigh when it’s in your pocket, it’s wonderfully retro, it helped save the Apollo 11 mission, and it writes upside down.  What’s not to like? Structured Procrastination. This one is lifted straight from the genius mind of John Perry, a philosophy professor at Stanford. Read his original description, by all means.  You even get to see a photo of him practicing jumping rope with seaweed on a beach while work awaits.  Outstanding. The gist of Structured Procrastination is that you should never fight the tendency to procrastinate—instead, you should use it to your advantage in order to get other things done. Generally in the course of a day, there is something you have to do that you are not doing because you are procrastinating. While you’re procrastinating, just do lots of other stuff instead. As John says, “The list of tasks one has in mind will be ordered by importance. Tasks that seem most urgent and important are on top. But there are also worthwhile tasks to perform lower down on the list. Doing these tasks becomes a way of not doing the things higher up on the list. With this sort of appropriate task structure, the procrastinator becomes a useful citizen. Indeed, the procrastinator can even acquire, as I have, a reputation for getting a lot done.” Reading John’s essay was one of the single most profound moments of my entire life. For example, I hate making phone calls.  Hate it.  Love sending emails, enjoy seeing people face to face (sometimes), but I hate making phone calls. I can get so much done while I am avoiding making a phone call that I need to make, I can barely believe it. In fact, that’s what’s happening right now. The other key two-word tactic: Strategic Incompetence. The best way to to make sure that you are never asked to do something again is to royally screw it up the first time you are asked to do it. Or, better yet, just say you know you will royally screw it up—maintain a strong voice and a clear gaze, and you’ll probably get off the hook. Of course, this assumes that there are other things that are more important at which you are competent. Which, hopefully, there are. Organizing the company picnic, sending faxes or Fedexes, negotiating with insurance brokers, writing in plain English... the list of things at which one can be strategically incompetent is nearly endless. Do email exactly twice a day—say, once first thing in the morning, and once at the end of the workday. Allocated half an hour or whatever it takes, but otherwise, keep your email client shut and your email notifications turned off. Anyone who needs to reach you so urgently that it can’t wait until later in the day or tomorrow morning can call you, or send a runner, or send up smoke signals, or something else. Or, more likely, find someone else who can do whatever it is that needs doing. (If you communicate with your spouse or key family members via email during the day, then just set up a separate email account just for them and leave that open all day, but keep your primary email closed.  And never give out the family email address to anyone noncritical—including your boss.) Only doing email twice a day will make you far more productive for the rest of the day. The problem with email is that getting an email triggers that same endorphin hit I mentioned above—the one that a mouse gets when he bonks on the button in the cage and gets a food pellet. Responding to an email triggers that same hit. The pleasure chemical hits your neocortex and you go “ahhh\" inside and feel like you’ve done something. So you sit and work with your mail client open and you interrupt your work every time an email comes in and you answer it and you send another email and you feel great in the moment. But what you’re really doing is fracturing your time, interrupting your flow, and killing your ability to focus on anything long enough to get real high-quality work done. This one is far easier to say than do.  And it won’t be feasible during projects where lots of updates during the day really are important—raising money, for example, or closing a big deal. Me, I’m just trying to get down to checking email only a half dozen times per day. When you do process email, do it like this: First, always finish each of your two daily email sessions with a completely empty inbox. I don’t know about you, but when I know I have emails in my inbox that haven’t been dealt with, I find it hard to concentrate on other things. The urge to go back to my email is nearly overpowering. (I am apparently seriously addicted to endorphins.) Second, when doing email, either answer or file every single message until you get to that empty inbox state of grace. Not keeping a schedule helps here, a lot, if you can pull it off—you can reply to a lot of messages with “I’m sorry, I’m not keeping a schedule in 2007, I can’t commit to that.” Third, emails relating to topics that are current working projects or pressing issues go into temporary subfolders of a folder called Action. You should only have Action subfolders for the things that really matter, right now. Those subfolders then get used, and the messages in them processed, when you are working on their respective projects in the normal course of your day. Fourth, aside from those temporary Action subfolders, only keep three standing email folders: Pending, Review, and Vault. Emails that you know you’re going to have to deal with again—such as emails in which someone is committing something to you and you want to be reminded to follow up on it if the person doesn’t deliver—go in Pending. Emails with things you want to read in depth when you have more time, go into Review. Everything else goes into Vault. Every once in a while, sweep through your Action subfolders and dump any of them that you can into Vault. (And do the same thing for messages in your Pending folder—most of the things in there you will never look at again.  Actually, same is true for Review.) You can get away with this because modern email clients are so good at search (well, most of them—and you can always move to GMail) that it’s not worth the effort to try to file emails into lots of different folders. Obviously you may need some additional permanent folders for important things like contracts, or emails from your doctor, or the like, but these are exceptions and don’t change your standard operating procedure. Don’t answer the phone. Let it go to voicemail, and then every few hours, screen your voicemails and batch the return calls. Cell phones and family plans are so cheap these days that I think the best thing to do is have two cell phones with different numbers—one for key family members, your closest friends, and your boss and a few coworkers, and the other for everyone else. Answer the first one when it rings, but never answer the second one. One of the best and easiest ways to avoid distractions in the workplace is to be wearing those cute little IPod earbud headphones (or any other headphones of your choice). People, for some reason, feel much worse interrupting you if you are wearing headphones than if you’re not. It’s great—a lot of the time, people will walk up to you, start to say something, notice the headphones, apologize (using exaggerated mouth motions), and walk away. This is great—half the time they didn’t actually need to talk to you, and the other half of the time they can send an email that you can process at the end of the day during the second of your two daily email sweeps. Here’s the best part: you don’t actually have to be listening to anything. Hell, you don’t even have to have the headphones plugged into anything. I’m not going to talk a lot about getting up early or going to bed late or anything else related to the course of a typical day, because everyone’s different. Personally I go back and forth between being a night owl (99% of the time) and a morning person (1%—I’m going to try to push it to 2%). But the thing that matters almost more than anything in determining whether I’ll have a happy, satisfying day is this: no matter what time you get up, start the day with a real, sit-down breakfast. This serves two purposes. First, it fuels you up.  Study after study have shown that breakfast is, yes, the most important meal of the day.  It’s critical to properly fuel the body for the day’s activities and it’s also critical to staying lean or losing weight.  (People who don’t have breakfast tend to eat more, and worse, at lunch.) Second, it gives you a chance to calmly, peacefully collect your thoughts and prepare mentally and emotionally for the day ahead. This works whether you do it with kids and/or a partner, or you’re solo. Personally I think it’s worth whatever effort is involved to go to bed early enough to wake up early enough to have a good solid 45 minutes or an hour for breakfast each morning, if you can pull it off. Only agree to new commitments when both your head and your heart say yes. This one is from the great Robert Evans. (Hold out for the audiobook—trust me.) It’s really easy to get asked to do something—a new project, a nonprofit activity, a social event—and to have your head say yes and your heart say no, and then your mouth says yes. The next thing you know, you’re piled up with all kinds of things on your schedule that sounded like a good idea at the time but you really don’t want to do. And distract you from the things that really matter. And make you angry, and bitter, and sullen, and hostile. (Oh, wait, I’m projecting.) In my experience, it takes time to tell the difference between your head saying yes and your heart saying yes. I think the key is whether you’re really excited about it. If you get that little adrenaline spike (in a good way) when you think about it, then your heart is saying yes. The corollary, of course, is that when your head says no and your heart says yes, your mouth should generally say yes as well :-). But not when your head says yes and your heart says no. Do something you love. As you’ve probably concluded by now, most of the tactics described in this post involve keeping oneself as free as possible to pursue one’s core interests, and dreams. If you’re not doing something you love with the majority of your time, and you have any personal freedom and flexibility whatsoever, it’s time for a change. And this doesn’t mean something that you love doing in theory—but rather, the core thing you love doing in practice. Please feel free to nominate additions to the list!  Next time my mobile wiki-based GTD Outlook synchronized hipster PDA reminds me, I’ll check ’em out. Notes based on reader feedback: Turns out Robert Benchley wrote about structured procrastination back in 1949.  Wonderful essay—highly recommended. The sharpest reaction has been to my theory of not keeping a schedule.  I’ll stick to my theory but make (or re-make) a couple of clarifying points. First, it is certainly true that many people have jobs and responsibilities where they can’t do that.  Or maybe can only do it partially.  And many people enjoy living a highly structured life and obviously this approach is not for them. But if your reaction is, “boy, I wish I could do that”, then it may well be worth rethinking your approach to your career. I can tell you from personal experience that being stuck in a role where you have a lot of structure but feel like you never get anything done is not the optimal way to advance in one’s profession, or maximize one’s job satisfaction. Second, I do not recommend pursuing this approach in one’s personal life :-). On another topic, the tactic of each night, write down the 3 to 5 things you need to do the next day has struck some people as too simplistic. That may be the case for some people, but I can’t tell you how many times I’ve arrived home at night and am at a loss as to what I actually got done that day, despite the fact that I worked all day. And I also can’t tell you how often I’ve had a huge, highly-structured todo list in front of me with 100 things on it and I stare at it and am paralyzed into inaction (or, more likely, structured procrastination). So a day when I get 3 to 5 concrete, actionable things done in addition to all the other stuff one has to do to get through the day—well, that’s a good day. A few people have said, why not just use GTD (David Allen’s “Getting Things Done” approach). While I find GTD to be highly inspiring, in practice I think it’s awfully complex.  At least if your job is based on project work (as opposed to having a highly structured role like CEO or head of sales). For me, an organization system that requires significant time to deal with in and of itself is not optimal.  Much better, for me at least, is to focus on stripping away nonessentials and freeing up as much time as possible to deal with whatever is most important. Finally, I discovered after writing this post that Paul Graham talks a bit about the role of time and focus in personal productivity in his essay on “The Power of the Marginal”. Thanks for all the comments! This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Pmarca Guide to Career Planning: Introduction Posted on September 30, 2007 In real life—as opposed to blogging—one of my least favorite things to do is give career planning advice.  Most people who say they want career planning advice aren’t actually looking for advice—they just want validation of the path they have already chosen.  Because of that, giving someone career planning advice is one of the surest ways to end up feeling like an a******. However, as with so many other things, career planning is a topic about which I have plenty of opinions.  And since I started this blog, I’ve received a lot of questions from people who are looking for career planning advice.  So, this series of posts will present my opinions on career planning in today’s world. These posts are aimed at high-potential people who want to excel throughout their careers and make a significant impact on their fields and the world.  These posts are not appropriate for people for whom work/life balance is a high priority or for whom lifestyle is particularly important—if that’s you, there are plenty of existing career planning resources for you already! My background is biased towards high-tech companies and Silicon Valley, and my advice will be most relevant to people entering either my industry or other industries that are like my industry—fast moving, rapidly changing, and characterized by lots of new companies and lots of opportunity for new people.  Some of this advice may be applicable to people entering other kinds of fields—but I wouldn’t know and I won’t guarantee it. I’ll use a lot of words like “ambition” and “promotion” and “gaining more responsibility”.  It may seem like I’m talking about moving up through the management ranks and managing more and more people, but my intention is for all of this advice to be equally relevant to people in purely technical careers, such as software programming.  If you aren’t interesting in managing people, then when I talk about promotion and advancement, just think about getting broader latitude to work on or lead more complex technical projects, assuming more technical seniority within a company, and the like. Everything that follows is purely personal opinion—specifically, these are the things I would want to know if I were entering college today.  I’m sure there are many equally valid counterpoints to each of my points, and I look forward to reading them on other people’s blogs! This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Pmarca Guide to Career Planning: Opportunity Posted on September 30, 2007 The first rule of career planning: Do not plan your career. The world is an incredibly complex place and everything is changing all the time.  You can’t plan your career because you have no idea what’s going to happen in the future.  You have no idea what industries you’ll enter, what companies you’ll work for, what roles you’ll have, where you’ll live, or what you will ultimately contribute to the world.  You’ll change, industries will change, the world will change, and you can’t possibly predict any of it. Trying to plan your career is an exercise in futility that will only serve to frustrate you, and to blind you to the really significant opportunities that life will throw your way. Career planning = career limiting. The sooner you come to grips with that, the better. The second rule of career planning: Instead of planning your career, focus on developing skills and pursuing opportunities. I’ll talk a lot about skills development in the next post.  But for the rest of this post, I’m going to focus in on the nature of opportunities. Opportunities are key.  I would argue that opportunities fall loosely into two buckets: those that present themselves to you, and those that you go out and create.  Both will be hugely important to your career. Opportunities that present themselves to you are the consequence—at least partially—of being in the right place at the right time.  They tend to present themselves when you’re not expecting it—and often when you are engaged in other activities that would seem to preclude you from pursuing them.  And they come and go quickly—if you don’t jump all over an opportunity, someone else generally will and it will vanish. I believe a huge part of what people would like to refer to as “career planning” is being continuously alert to opportunities that present themselves to you spontaneously, when you happen to be in the right place at the right time. A senior person at your firm is looking for someone young and hungry to do the legwork on an important project, in addition to your day job. Your former manager has jumped ship to a hot growth company and calls you three months later and says, come join me. Or, a small group of your smartest friends are headed to Denny’s at 11PM to discuss an idea for a startup—would you like to come along? I am continually amazed at the number of people who are presented with an opportunity like one of the above, and pass. There’s your basic dividing line between the people who shoot up in their careers like a rocket ship, and those who don’t—right there. The second bucket of opportunities are those you seek out and create.  A lot of what will follow in future posts in this series will discuss how to do that.  However, let me say up front that I am also continually amazed at the number of people who coast through life and don’t go and seek out opportunities even when they know in their gut what they’d really like to do.  Don’t be one of those people.  Life is way too short. The world is a very malleable place.  If you know what you want, and you go for it with maximum energy and drive and passion, the world will often reconfigure itself around you much more quickly and easily than you would think. Now, I’m not proposing that you simply ping pong from opportunity to opportunity randomly.  You can have a strategy.  And here’s how I think that strategy should work. People who manage money professionally don’t think about individual investments in isolation; they think of those investments as part of an overall portfolio.  Each investment has its potential return—the benefit you get from owning it—and its potential risks—the things that can go wrong.  A portfolio, then, is a set of investments, and the portfolio assumes the return and risk characteristics of all of the investments blended together. Viewed in that context, it is often logical to have individual investments within a portfolio that are far more risky than one would normally find comfortable—if the potential return is good enough.  Or, investments that are far less risky and have far less return potential than one would normally want—to protect one’s downside.  The risk of any individual investment is not important; what is important is how the risks—and the potential returns—of all of the investments combine in the overall portfolio. I believe you should look at your career as a portfolio of jobs/roles/opportunities.  Each job that you take, each role that you choose to fill, each opportunity you pursue, will have a certain potential return—the benefits you can get from taking it, whether those benefits come in the form of income, skill development, experience, geographic location, or something else.  Each job will also have a certain risk profile—the things that could go wrong, from getting fired for not being able to handle the job’s demands, to having to move somewhere you don’t want to, to the company going bankrupt, to the opportunity cost of not pursuing some other attractive opportunity. Once you start thinking this way, you can think strategically about your career over its likely 50+ year timespan. For example, when you are just out of school and have a low burn rate and geographic flexibility, you can take jobs with a certain return/risk profile.  If you get married and have kids, you will take jobs with a different return/risk profile.  Later, when your kids grow up and you are once again free to move about and you don’t have to worry about tuition payments and a mortgage on a big house in a great school district, but you now have far more experience than you did when you were first starting out, you can take jobs with a third return/risk profile. Most people do not think this way.  They might occasionally think this way, but they don’t do it systematically.  So when an opportunity pops up, they evaluate it on a standalone basis—“boy, it looks risky, I’m not sure I should do it”.  What you should automatically do instead is put it in context with all of the other risks you are likely to take throughout your entire career and decide whether this new opportunity fits strategically into your portfolio. Let’s dig into the concept of risk a little more. I’m not talking about the form of risk that you think of when you think of stepping out into the crosswalk and getting run over by an Escalade.  I’m talking about the form of risk that financial professionals deal with (see the classic book Against the Gods: The Remarkable Story of Risk for more on this), and startup entrepreneurs deal with, and that you deal with any time you make any decision.  There are a set of potential downsides to almost any decision—but they can be analyzed, and often quantified, and thereby brought under control. Which is important, because in life, there is generally no opportunity without risk.  Doing the legwork on that extra project for the senior person at your firm?  You risk exhausting yourself and doing your day job poorly.  Joining your former manager at that hot growth company?  Maybe it tanks six months later and then your current employer won’t rehire you.  Join those smart friends at Denny’s and start a new company with them?  Maybe it completely fails, and you have to explain why you were so foolish at every job interview you do for the rest of your life.  There are always real and legitimate reasons why people often pass on opportunities—they see the risks and they wish to avoid them. The issue is that without taking risk, you can’t exploit any opportunities.  You can live a quiet and reasonably happy life, but you are unlikely to create something new, and you are unlikely to make your mark on the world. To quote Aaron Brown—a legendary Morgan Stanley derivatives trader and poker expert—from his extraordinary book The Poker Face of Wall Street, when talking about hiring traders at an investment bank: What I listen for is someone who really wanted something that could be obtained only through taking the risk, whether that risk was big or small. It’s not even important that she managed the risk skillfully; it’s only important that she knew it was there, respected it, but took it anyway. Most people wander through life, carelessly taking whatever risk crosses their path without compensation, but never consciously accepting extra risk to pick up the money and other good things lying all around them. Other people reflexively avoid every risk or grab every loose dollar without caution. I don’t mean to belittle these strategies; I’m sure they make sense to the people who pursue them.  I just don’t understand them myself. I do know that none of these people will be successful traders. ...or successful at anything important in life. So, when you are presented with an opportunity, carefully analyze its risks, but: Do so within the context if your likely lifetime portfolio of risks... And do so realizing that taking risk can be a good thing when it leads to pursuing the best opportunities. All that said, here are some of my opinions about the kinds of risks you should take and when: When you are just out of school—and assuming that you are relatively free to move and have a low burn rate—is when you should optimize for the rate at which you can develop skills and acquire experiences that will serve you well later.  You should specifically take income risk in order to do that.  Always take the job that will best develop your skills and give you valuable experiences, regardless of its salary.  This is not the time in your career to play it safe. When you have family obligations—a spouse, two and a half kids, a dog, and a picket fence—that’s obviously the time to crank back on the income risk and instead take a little risk that you might not learn as much or advance as quickly or join that hot new startup.  However, even this is not black and white!  In Silicon Valley, for example, it can still make a lot of sense for a young parent to take a risk on a hot new startup because it will usually be easy to get another job if the startup fails—especially if one has developed more useful skills and experiences along the way. There may be times when you realize that you are dissatisfied with your field—you are working in enterprise software, for example, but you’d really rather be working on green tech or in a consumer Internet company.  Jumping from one field into another is always risky because your specific skills and contacts are in your old field, so you’ll have less certainty of success in the new field.  This is almost always a risk worth taking—standing pat and being unhappy about it has risks of its own, particularly to your happiness.  And it is awfully hard to be highly successful in a job or field in which one is unhappy. Likewise with geography risk.  You start out in one city—say, working at a software company in Philadelphia—and you’re doing well.  You get the opportunity to jump to a faster growing software company in Silicon Valley.  Should you take the risk of moving geographies—to a place where you don’t know anybody, and where the cost of living is higher?  Almost certainly—the additional risks of not having an extensive personal network and of tolerating a lower standard of living for some period of time are almost certainly overcome by the upside of being at a better company, relocating yourself to the heart of your industry, and setting yourself up to exploit many more great opportunities over the next decades. Working for a big company is, I believe, much risker than it looks.  I’ll talk about this more in the next post, but people who work at big companies are subject to impersonal layoffs at any time, and often forego the opportunity to develop skills and gain experiences as rapidly as they would at someplace smaller and faster growing.  And then five or ten years pass, and you realize your skills and experiences are only relevant for jobs at other big companies—and then you have a real problem. Finally, pay attention to opportunity cost at all times.  Doing one thing means not doing other things.  This is a form of risk that is very easy to ignore, to your detriment. Those are just a few examples.  You will run into specific return/risk situations that nobody can predict ahead of time.  When you do, just sit down and tease apart the risks—and think hard about whether, in the context of your overall career portfolio, they are really so scary that they justify passing on the return potential of a great opportunity.  They often won’t. One more quote, this time from Nassim Nicholas Taleb in The Black Swan: Seize any opportunity, or anything that looks like opportunity.  They are rare, much rarer than you think... Many people do not realize they are getting a lucky break in life when they get it.  If a big publisher (or a big art dealer or a movie executive or a hotshot banker or a big thinker) suggests an appointment, cancel anything you have planned: you may not see such a window open up again. Of course, if you really are high-potential, you’re naturally going to be seeking out risks in your career in order to maximize your level of achievement, so you’re thinking, c’mon, Andreessen, get to the next point.  For which, see the next post! This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Pmarca Guide to Career Planning: Skills and education Posted on October  1, 2007 [Please read my opening disclaimers.  Note especially that these are only personal views; I am not trying to malign anyone else’s choice of career or education path.  These are simply the things I would want to be told if I were entering college today.] This post discusses skills acquisition throughout your lifetime, including your formal education.  So I will start with college and move on from there. What should I study in college? Some people argue that college will be your one chance in life to pursue your passion—to spend four years doing nothing but studying whatever you love the most, whether that’s Renaissance literature or existential philosophy. If you intend to have an impact on the world, the faster you start developing concrete skills that will be useful in the real world, the better—and your undergrad degree is a great place to start.  Once you get into the real world and you’re primed for success, then you can pursue your passion. A typical liberal arts degree will be almost useless on its own.  So you usually won’t have the option of immediately entering the workforce in a high-impact way when you graduate, and you’ll have to go get a useful graduate degree. And even if you are already planning to get a useful graduate degree, you are much better off combining it with a substantive undergraduate degree—thereby becoming a “double threat”.  More on this in a bit. Which undergraduate degrees are useful in the real world? Typically, those that have a technical element of some form—that teach you how to do something substantive. Engineering degrees obviously qualify.  The current myth that engineering and computer science degrees are less useful because all the jobs are going to India and China is silliness; ignore it. Hard science degrees—physics, chemistry—also clearly qualify, as do mathematics and economics. Why do I take this stance? Technical degrees teach you how to do something difficult and useful that matters in the real world.  Even if you don’t end up actually doing what the degree teaches you how to do, going through the experience of learning how to do it will help you go through other serious learning experiences in your career.  Complexity and difficulty will not faze you. Plus, technical degrees teach you how think like an engineer, a scientist, an economist, or a mathematician—how to use reason, logic, and data.  This is incredibly useful in the real world, which generally demands rigorous thinking on the path to doing anything big. Plus, technical degrees indicate seriousness of purpose to future employers and partners.  You get coded right up front as someone who is intent on doing real things. Graduating with a technical degree is like heading out into the real world armed with an assault rifle instead of a dull knife.  Don’t miss that opportunity because of some fuzzy romanticized view of liberal arts broadening your horizons. What graduate degrees are useful in the real world? Generally, if you have a useful undergrad degree, I think graduate degrees are overrated.  You can usually hit the workforce in a real job with just an undergraduate degree and progress rapidly according to your own ability and energy from there. Of course, you’re hearing this from someone who could barely stand to stay in school long enough to finish undergrad, so take that for what it’s worth. If you don’t have a useful undergrad degree, then a useful graduate degree is definitely a great idea.  Business, math, economics, science—something practical, substantive. Quite a few people in business have paired a liberal arts undergrad degree with an MBA.  They seem to do just fine.  But I think that’s a missed opportunity—much better would be an MBA on top of an engineering or math undergraduate degree.  People with that combination are invaluable, and there aren’t nearly enough of them running around. As far as PhD’s are concerned—some of my best friends have PhD’s.  However, most of the people who have a huge impact on the world—outside of pure research and education—do not have PhD’s.  Draw from that whatever conclusion you think makes sense. What college or university should I go to? Try very very hard to go to one of the best colleges or universities in the world for your chosen field. Don’t worry about being a small fish in a big pond—you want to always be in the best pond possible, because that’s how you will get exposed to the best people and the best opportunities in your field. If you can’t start out in one of the top schools for your field, then work your butt off and get great grades and transfer as fast as you possibly can into a top school. And if you can’t do that—if you end up getting your undergrad at a school that’s not one of the top in your field—then strongly consider pursuing a graduate degree in your field at a great school for your field. In this way, even if your only option is starting out at a community college, by the time you finish 4-6 years of education, you can vault yourself into the top tier of your field. What should I do while I’m in school? I’m a huge fan of gaining practical experience in school by working during the school year, and then doing as many internships and co-op programs as you can. Particularly at research universities—where you want to be—there are lots of on-campus jobs that will give you highly valuable work experience.  Take a job that will teach you something useful and practical—the two obvious examples are working for a professor in your field with an active research program who needs undergrads to do some of the work, and being a staff member at a campus computer lab or research lab. And then aggressively pursue internship and co-op programs—to get real-world working experience at companies in your field, before you even graduate.  Target the best companies in your field, and go after the opportunities early and often. If you do this right, by the time you graduate even with just an undergrad degree, you can have a year and a half of real working experience at high-quality companies plus another four years of practical experience from an on-campus job under your belt. Plus, you will be implicitly demonstrating to future employers how determined you are to succeed and how hard you are willing to work. In contrast, almost any other way you can spend your time while in school aside from getting reasonably good grades is a mistake. How should I think about skills development once I’m out of school? You should view graduating from school as just the beginning of your development of a whole portfolio of useful skills. One of the single best ways you can maximize the impact you will have on the world and the success you will have in your career is by continuously developing and broadening your base of skills. My favorite way of thinking about this is: Seek to be a double/triple/quadruple threat. Scott Adams—the creator of Dilbert—nails it: If you want an average successful life, it doesn’t take much planning. Just stay out of trouble, go to school, and apply for jobs you might like. But if you want something extraordinary, you have two paths: Become the best at one specific thing. Become very good (top 25%) at two or more things. The first strategy is difficult to the point of near impossibility. Few people will ever play in the NBA or make a platinum album. I don’t recommend anyone even try. The second strategy is fairly easy. Everyone has at least a few areas in which they could be in the top 25% with some effort. In my case, I can draw better than most people, but I’m hardly an artist. And I’m not any funnier than the average standup comedian who never makes it big, but I’m funnier than most people. The magic is that few people can draw well and write jokes. It’s the combination of the two that makes what I do so rare. And when you add in my business background, suddenly I had a topic that few cartoonists could hope to understand without living it. ...Get a degree in business on top of your engineering degree, law degree, medical degree, science degree, or whatever. Suddenly you’re in charge, or maybe you’re starting your own company using your combined knowledge. Capitalism rewards things that are both rare and valuable. You make yourself rare by combining two or more “pretty goods” until no one else has your mix... It sounds like generic advice, but you’d be hard pressed to find any successful person who didn’t have about three skills in the top 25%. The fact is, this is even the secret formula to becoming a CEO.  All successful CEO’s are like this.  They are almost never the best product visionaries, or the best salespeople, or the best marketing people, or the best finance people, or even the best managers, but they are top 25% in some set of those skills, and then all of a sudden they’re qualified to actually run something important. You can apply this principle to the degrees you can choose to get in school. I already talked about combining an undergrad engineering degree with an MBA.  I’ll hire as many of those people as I possibly can. An MBA plus a law degree can be a great combination—and probably far more useful than either of those degrees by themselves. Or even combine two undergrad degrees—computer science plus physics, say, or physics plus economics. You can also apply this principle to skills that you develop once you leave school. Let me cite as examples five skills that you can develop once you leave school that, in combination with your degree or degrees and your other skills, can help maximize your potential: First, communication. I always advise young people to become good public speakers (top 25%). Anyone can do it with practice. If you add that talent to any other, suddenly you’re the boss of the people who have only one skill... At least one of the skills in your mixture should involve communication, either written or verbal. The great thing about communication is that most people are terrible at it, because they never take it seriously as a skill to develop. This is particularly true of engineers and technical people, who often quaintly believe that the world works logically and that people will automatically recognize the quality of things. Of course, communication is critically important because it’s how you convey information and concepts to lots of people in ways that will cause them to change their behavior. This is one good argument for certain liberal arts undergrad degrees, such as English.  But you don’t need specific college training to be a good communicator—you can learn communication many other ways, including by doing, by practicing, by taking classes (how about a class in standup comedy?  I’m serious!), and by reading a lot.  And communication in combination with some other useful skill is much more powerful than communication alone. An engineer or a finance person or a lawyer who can communicate is hugely more valuable than one who cannot. And in the long run, you are going to have a very hard time ever changing the world if you can’t communicate really well. If at all possible, learn how to manage people. The best way is to learn from a great manager. Early in your career, make sure you are working for a great manager—you’ll know her when you see her in action—and then ask her to teach you how to do it. And then give it a shot—ask for and get responsibility for a team of people whom you manage. Even if your career path won’t involve managing lots of people, being able to manage will give you a highly valuable tool that you can pull out whenever you need it, instead of forcing you to always be reliant on other people to manage. Worst case, you’ll understand a lot more about why companies work the way they do and why people are the way they are.  Which is hugely helpful when you set about doing something new. I don’t mean, learn how to sell someone a set of steak knives they don’t need—although I hear that can be quite an education by itself. I mean, learn how to convince people that something is in their best interest to do, even when they don’t realize it up front. Think of this as the art of being able to interact with people such that they will do what you want, predictably and repeatedly, as long as you are making sense and offering them something they should want. This is another terribly underrated skill, at least among people who aren’t professional salespeople.  But it’s an incredibly general skill that can be helpful not only in your career but throughout your entire life.  Knowing how to sell can also help you recruit, raise money, talk to investors, create business partnerships, deal with reporters and analysts, and more—even, God help you, in your marriage and with your kids. Spending a year or more in an actual salesforce can be a superb idea even if you have no intention of making your career in sales.  John Doerr once told me that the year he spent “carrying a bag” in sales at Intel in the late 70’s was the most valuable year of his life in terms of skills development—skills he now uses every day as one of the world’s most successful venture capitalists. If you’ve ever had John Doerr try to talk you into something, you’ll know what he means. A strong level of financial literacy—financial theory, understanding financial statements, budgeting and planning, corporate structure, how equity and debt markets work—will be a huge boost for almost any career. Again, this is a more general skill that it appears to be—having financial skills will also help you in your personal life, as well as in any nonprofit organizations in which you participate. And if you ever want to start your own company, being financially literate will be a huge help. If you’re, for example, a programmer working at a tech company and you don’t know anything about finance, go find a finance person and offer to teach her all about software in return for her teaching you all about finance. Otherwise, finance is something you can easily learn by taking classes, or by reading books. Also, make an investment in yourself by reading the Financial Times and the Wall Street Journal every day.  Read those two papers cover to cover for five years and you’ll know a lot of what you need to know.  (This recommendation will be even more practical once Rupert Murdoch makes the Wall Street Journal web site free.  The Financial Times just announced its web site is becoming free for casual readers.  But even still, if I were you, I’d get paper subscriptions to those two papers, and every day take an hour and sit in a corner and read them cover to cover—except of course for the Journal’s op-ed pages; those will rot your brain.) Fifth, international. Time spent on the ground in other countries and in other cultures will pay off in many different ways throughout your career. If your company, or university, offers you the opportunity to spend a year in another country, it’s probably a pretty good idea to take it. Personally I’d incline towards spending that time in younger, faster growing market economies—like China, India, South Korea, or Argentina—versus older, slower growing market economies like France or Germany.  But almost any international exposure is likely to be helpful. This is another of those skills where there’s both a pragmatic benefit—you will have experience on the ground with people in a specific country—and a general benefit—you will know how to think more broadly than the average American, or American president, who has never been out of the country. There aren’t very many interesting businesses anymore that don’t have a strong international element—in fact, many American companies now generate the majority of their revenue and profit outside the US.  Having a global perspective can only help you maximize your future opportunities. Any final thoughts on education? If you’re in college now, or about to graduate from college, and you come from an upper middle class background—especially if you are going to an Ivy League school—take the time to read a provocative essay David Brooks wrote several years ago called “The Organization Kid”. I asked several [Ivy League] students to describe their daily schedules, and their replies sounded like a session of Future Workaholics of America: crew practice at dawn, classes in the morning, resident-adviser duty, lunch, study groups, classes in the afternoon, tutoring disadvantaged kids in Trenton, a cappella practice, dinner, study, science lab, prayer session, hit the StairMaster, study a few hours more... [N]owhere did I find any real unhappiness with this state of affairs; nowhere did I find anybody who seriously considered living any other way. These super-accomplished kids aren’t working so hard because they are compelled to... It’s not the stick that drives them on, it’s the carrot. Opportunity lures them... [I]n a rich information-age country like America, promises of enjoyable work abound—at least for people as smart and ambitious as these. “I want to be this busy,” one young woman insisted, after she had described a daily schedule that would count as slave-driving if it were imposed on anyone... That doesn’t mean that these leaders-in-training are money-mad (though they are certainly career-conscious). It means they are goal-oriented. An activity—whether it is studying, hitting the treadmill, drama group, community service, or one of the student groups they found and join in great numbers—is rarely an end in itself. It is a means for self-improvement, résumé-building, and enrichment. College is just one step on the continual stairway of advancement, and they are always aware that they must get to the next step (law school, medical school, whatever) so that they can progress up the steps after that... They’re not trying to buck the system; they’re trying to climb it, and they are streamlined for ascent... Kids of all stripes [today] lead lives that are structured, supervised, and stuffed with enrichment... Today’s elite kids are likely to spend their afternoons and weekends shuttling from one skill-enhancing activity to the next. By the time they reach college, they take this sort of pace for granted... In short, at the top of the meritocratic ladder we have in America a generation of students who are extraordinarily bright, morally earnest, and incredibly industrious. They like to study and socialize in groups. They create and join organizations with great enthusiasm. They are responsible, safety-conscious, and mature. They feel no compelling need to rebel—not even a hint of one. They not only defer to authority; they admire it. “Alienation” is a word one almost never hears from them. They regard the universe as beneficent, orderly, and meaningful. At the schools and colleges where the next leadership class is being bred, one finds not angry revolutionaries, despondent slackers, or dark cynics but the Organization Kid. Now, if your parents are middle class, or lower middle class, and you’re attending a state school or a local college, and you’re working your way through school in order to pay for tuition, you can stop reading now; you probably don’t have anything to worry about.  But if you read Brooks’ essay and recognize yourself, read on. The good news is that Brooks’ fundamental thesis is correct: kids graduating from top colleges and universities today are in many ways better prepared for achievement and success than ever before.  As a group, you are better educated, better trained, more motivated, and more serious than many of your predecessors.  And that is fantastic. The risk, however, is this: If you have lived an orchestated existence, gone to great schools, participated in lots of extracurricular activities, had parents who really concentrated hard on developing you broadly and exposing you to lots of cultural experiences, and graduated from an elite university in the first 22 or more years of your life, you are in danger of entering the real world, being smacked hard across the face by reality, and never recovering. What do I mean?  It’s possible you got all the way through those first 22 or more years and are now entering the workforce without ever really challenging yourself.  This sounds silly because you’ve been working hard your whole life, but working hard is not what I’m talking about.  You’ve been continuously surrounded by a state of the art parental and educational support structure—a safety net—and you have yet to make tough decisions, by yourself, in the absence of good information, and to live with the consequences of screwing up. In my opinion, it’s now critically important to get into the real world and really challenge yourself—expose yourself to risk—put yourself in situations where you will succeed or fail by your own decisions and actions, and where that success or failure will be highly visible. By failure I don’t mean getting a B or even a C, but rather: having your boss yell at you in front of your peers for screwing up a project, launching a product and seeing it tank, being unable to meet a ship date, missing a critical piece of information in a financial report, or getting fired. Why?  If you’re going to be a high achiever, you’re going to be in lots of situations where you’re going to be quickly making decisions in the presence of incomplete or incorrect information, under intense time pressure, and often under intense political pressure.  You’re going to screw up—frequently—and the screwups will have serious consequences, and you’ll feel incredibly stupid every time.  It can’t faze you—you have to be able to just get right back up and keep on going. That may be the most valuable skill you can ever learn.  Make sure you start learning it early. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Pmarca Guide to Career Planning: Where to go and why Posted on October  3, 2007 When picking an industry to enter, my favorite rule of thumb is this: Pick an industry where the founders of the industry—the founders of the important companies in the industry—are still alive and actively involved. This is easy to figure out—just look at the CEO, chairman or chairwoman, and board of directors for the major companies in the industry. If the founders of the companies are currently serving as CEO, chairman or chairwoman, or board member of their companies, it’s a good industry to enter.  It is probably still young and vital, and there are probably still opportunities to exploit all over the place, either at those companies or at new companies in that industry. If not—if the industry’s founders are dead, or old and out of touch—beware.  That industry is now dominated by companies that are being run by second or third or even fourth generation managers who inherited their companies pre-built, and are serving as caretakers. If you are young and want to have an impact, you want to be in an industry where there is a lot of growth and change and flux and opportunity. As an industry ages, the vitality drains out until all that’s left is a set of ossified remnants in the form of oligopolostic entities of which you would find being a part to be completely soul-killing. The exception comes when an industry has gotten so old and ossified that the clear opportunity exists to up-end it and introduce a new order, a new way of doing things, and therefore a new set of companies. In some industries this happens routinely—e.g. every 10-20 years.  This is the case in technology, for example, and financial services. It doesn’t seem to happen ever in certain other industries which I won’t name for fear of being permanently cut off from my necessary supply of oil, gas, music, and movies. If you’re going to enter an old industry, make sure to do it on the side of the forces of radical change that threaten to up-end the existing order—and make sure that those forces of change have a reasonable chance at succeeding. Second rule of thumb: Once you have picked an industry, get right to the center of it as fast as you possibly can. Your target is the core of change and opportunity—figure out where the action is and head there, and do not delay your progress for extraneous opportunities, no matter how lucrative they might be. Never worry about being a small fish in a big pond.  Being a big fish in a small pond sucks—you will hit the ceiling on what you can achieve quickly, and nobody will care.  Optimize at all times for being in the most dynamic and exciting pond you can find.  That is where the great opportunities can be found. Apply this rule when selecting which company to go to.  Go to the company where all the action is happening. Or, if you are going to join a startup or start your own company, always make sure that your startup is aimed at the largest and most interesting opportunity available—the new markets that are growing fast and changing rapidly. Also apply this rule when selecting which city to live in.  Go to the city where all the action is happening. For technology, at least in the US, this is Silicon Valley.  For entertainment, this is Los Angeles.  For politics, Washington DC.  For coffee, Seattle.  For financial services, New York—unless you are convinced that there are equally compelling opportunities someplace else, like London or Hong Kong or Shanghai. In my opinion, living anywhere other than the center of your industry is a mistake.  A lot of people—those who don’t live in that place—don’t want to hear it.  But it’s true.  Geographic locality is still—even in the age of the Internet—critically important if you want to maximize your access to the best companies, the best people, and the best opportunities.  You can always cite exceptions, but that’s what they are: exceptions. No one cares who the top filmmaker in Chicago is—hell, people often don’t even care who the top filmmaker in New York is, and quite a lot of films get made out of New York.  On the other hand, the top 50 filmmakers in Los Angeles are all very important people in their industry. Let’s flavor all of the above with a little nuance: “Current importance” may not be the same as “greatest change”. Whenever you believe that the currently dominant companies, or cities, are not the places of greatest change and opportunity, you have a decision to make. Perhaps New York, while clearly the financial services capital of the world, is not the place of greatest opportunity for someone new.  Perhaps, for you, that would be Dubai, or Buenos Aires, or Prague, or Macau. And perhaps Goldman Sachs, Morgan Stanley, Lehman Brothers, Citigroup, and JP Morgan Chase, while clearly the most important financial services companies in the world, are not the companies of greatest opportunity for someone new.  Perhaps, for you, that’s a totally different kind of financial services company, like Paypal. Then you have a decision to make—whether to tilt a little conservative and stick with the currently most important place and companies under the rationale that they are still the major agents of change in the industry, or tilt aggressive and go someplace or to some firm that’s up and coming and might represent disruptive change and therefore even greater opportunity. Either way, to quote Pink Floyd, “set the controls for the heart of the sun”—be sure you’re heading where the action is, where the biggest opportunities in your field are, as you’ve chosen to think about it.  Don’t fart around in second and third tier companies that don’t have a clear mission to dominate their markets. In a rapidly changing field like technology, the best place to get experience when you’re starting out is in younger, high-growth companies. (This is not necessarily true in older and more established industries, but those aren’t the industries we’re talking about.) There are a bunch of great things that you get when you go to a younger, high-growth company: You’ll get to do lots of stuff.  There will be so much stuff to do in the company that you’ll be able to do as much of it as you can possibly handle.  Which means you’ll gain skills and experience very quickly. You’ll probably get promoted quickly.  Fast-growing companies are characterized by a chronic lack of people who can step up to all the important new leadership jobs that are being created all the time.  If you are aggressive and performing well, promotions will come quickly and easily. You’ll get used to being in a high-energy, rapidly-changing environment with sharp people and high expectations.  It’s like training for a marathon while wearing ankle weights—if you ever end up going to a big company, you’ll blow everyone away.  And if you ever go to a startup, you’ll be ready for the intensity. Reputational benefit.  Having Silicon Graphics from the early 90’s, or Netscape from the mid-90’s, or eBay from the late 90’s, or Paypal from the early 00’s, or Google from the mid-00’s on your resume is as valuable as any advanced degree—it’s a permanent source of credibility. In contrast to going to a big company: working for a big company teaches you how to work for big companies.  The way things work at a big company is usually unique to big companies.  So, working for a big company is often a statement that you plan to spend your career at big companies—and lots of people are very happy doing that, but I doubt that’s your intention or you wouldn’t be reading this post. In contrast to going to a startup: when you are first starting your career, you should realize that raw startups are highly variable in terms of the experiences you will have.  Some can be great, but many are very poorly managed and go nowhere.  You will probably be better off going somewhere that’s already succeeding, gain skills and experience, and then go to a startup. In contrast to going to a mediocre small or mid-sized company that’s not growing: those are great places to go if you don’t want to go anywhere yourself.  If you find yourself stuck in one, either figure out how to get the company unstuck and on a fast growth path, or get yourself unstuck. There is a caveat to all this, which is as follows: Don’t just be a “summertime soldier”—don’t go someplace because it’s already successful, and then bail when things get tough. Any hiring manager for the rest of your career will be able to read that on your resume just by looking at the dates. High-growth companies virtually always hit speed bumps, or even huge potholes.  Stuff goes wrong.  Going through the experience of gutting through the hard parts and coming out the other end will be a key part of your real-world education and will serve you very well down the road, especially if you ever start your own company. Then, once you’ve racked up killer skills and experiences at a high-growth company, feel free to go to a startup. Picking which startup to join probably deserves its own post.  However, in a nutshell, look for one where you understand the product, see how it might fit into a very large market, and really like and respect the people who are already there. Or, start your own company. If your startup fails, try another one.  If that one fails, get back into a high-growth company to reset your resume and get more skills and experiences.  Then start another company.  Repeat as necessary until you change the world. Finally, every job you take and every role you fill will always be a tactical opportunity and a strategic opportunity. The tactical opportunity is obvious: kick ass and take names—gain skills and experiences that will be valuable to you in the future, and do so well that everyone you work with is singing your praises for decades to come. The strategic opportunity is less obvious and often overlooked. Every job, every role, every company you go to is an opportunity to learn how a business works and how an industry works. Learn everything you can about the business and the industry in which you find yourself. Think strategically: how would I start a firm like this today?  Or, if I were starting a company in this industry today, how would it be different than this firm?  Why is this firm and other firms in this industry doing what they do?  What are the assumptions underneath their behavior?  Should those assumptions be changing?  How might this industry work differently?  Which customers are being underserved?  What new technologies might change things completely?  How were things working 10 years ago, versus today, versus 10 years from now?  And, my favorite: if the creators of this industry were starting out today, what would they be doing now? In FX’s great new series Damages, a young attorney named Ellen Parsons has gone to work for a famous law firm called Hewes and Associates, run by the legendary, ruthless, and amoral Patty Hewes.  Ellen, rattled by the intensity of her experience at Hewes and Associates, asks her mentor Hollis Nye what she should do: Hollis Nye: My advice to you, Ellen, is to stop trying to figure Patty out.  You’ll never change her, but she’ll change you. Nye: By giving you access to how she thinks.  You signed up for this; now, keep your head down, and do the work.  That’s why you’re there, isn’t it? Nye: Then don’t be shortsighted.  Start using her.  Learn everything you can, then get the hell out of there before it’s too late. Ellen: How exactly will I know when that is? Nye: Ah.  That’s for another walk. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Guide to Big Companies: Turnaround! Posted on June 20, 2007 So you’ve been hired/promoted/brought out of retirement to become CEO of and turn around your NASDAQ/NYSE/LSE-listed 5,000+ employee software/semiconductor/media company that’s recently been getting trounced by competitors, brutalized by the press, and savaged in the stock market. Here’s your turnaround plan in 9 easy steps. Step 1: Go dark and execute. Your predecessor in the CEO job inevitably spent way too much time explaining to reporters, investors, analysts, and anyone else who would listen (that cute new Wall Street videoblogger?) why your company was actually doing just fine and how brighter times were just around the corner as your competitive position deteriorated and your financial results fell apart, and nobody believed it anyway. Money talks, hype walks—when you’re hitting your numbers, everyone thinks you’re a genius and believes everything you say, no matter how silly.  When you’re not hitting your numbers, everyone thinks you’re a moron and won’t believe anything you say, no matter how true. So go dark, focus on the business, and don’t talk publicly for at least six months. Mark “Who?\" Hurd sets the gold standard here. Step 2: But first, throw your predecessor completely under the bus. Can’t forget this one!  Tell Wall Street that your predecessor was such an incredibly dim bulb that in retrospect you can’t even understand how he got past security and into the building, much less was picked to be CEO.  He completely fouled the financials and sabotaged the business and as a result, earnings for the next several quarters are going to come in way below expectations. The fun part about this one is that your stock won’t even drop because everyone has already figured that out. Step 3: Identify the 3-5 things that are working surprisingly well in your business, and double down on those. Any big company, no matter how moribund and poorly run, has a number of products and projects that are going better than expected—and usually come as a complete surprise. Drawing on Peter Drucker’s classic admonition to “focus on opportunities, not problems\", figure out what these surprise successes are and double down on them. Promote their general managers, elevate their business units in the organization, give them more funding, and get out of the way. Step 4: Identify the 3-5 things that are consuming a lot of money and time and yet going nowhere, and kill those. A good starting point is your predecessor’s pet projects—line ’em up and shoot ’em. Frankly, they don’t even have to be consuming that much money.  They’re almost certainly consuming time and management bandwidth, and they need to go. You can also consider this a warmup exercise for Step 5. Step 5: Lay off a third of the workforce. History shows that you’re going to have to ultimately do it anyway, either via death of a thousand cuts (or six to eight distinct rounds of layoffs), or all at once. So do it all at once. A company that requires a turnaround has, in all likelihood, hired too many people for the size of the business opportunity it actually has.  This impairs profitability, driving away investors and submerging the stock price at precisely the time the company needs a healthy acquisition currency; this demotivates your great people by surrounding them by too many mediocre people and too much bureaucracy; and this slows everything in your company to a crawl because there are simply too many people running around who have to talk about everything before anything gets done. Grit your teeth, offer the most generous severance and assistance packages you possibly can, and get it done. Your ability to continue to employ the other two-thirds of your people is at stake. Step 6: Reduce layers, then promote up and comers and put them clearly in charge. A company that requires a turnaround has, in all likelihood, too many layers of management.  Nuke as many of them as you can. Then develop a list of your top 20 or 30 up and comers—strong, sharp, aggressive, ambitious director- or VP-level managers who want to succeed and want your company to succeed.  And promote them, and put them in sole charge of clearly identified teams and missions.  (And give them big ol’ fresh option packages.) As CEO, you should only have at most one executive between you and these 20 or 30 up and comers once you are done promoting them and putting them in charge of their teams and missions. If you don’t know who those top 20 or 30 up and comers are, if you don’t promote them, if you don’t put them clearly in charge of the things that matter, or if you have more than one layer of management between you and them when you’re done, you’re probably doomed. Step 7: Figure out the single most important thing your company has to win at, and put your single best person in charge of winning at it. Step 8: Look at the market, figure out 3-5 new areas in which your company is not currently playing or winning, but are clearly going to grow a lot—and acquire the best company in each of those areas. Here you’re looking for growth—for products, trends, perhaps phenomena outside but adjacent to your current products and markets, that are going to grow a lot in the next few years. You have to acquire, because if you’re in a turnaround situation, you aren’t going to have the time or bandwidth to build them in-house—unless you’re the very rare exception. When you do acquire, you’re going to have to pay up, because new things that are growing really fast in growth markets are always expensive—whether private or public—especially compared to the PE multiple of a big company in turnaround. So here’s hoping you did a great job at Step 5. Step 9: In six months, relaunch the company with a single, crisp, coherent message and strategy. Then go dark again and go right back to work. Of course, there’s more to being the CEO of a turnaround than these 9 steps.  There are a thousand other things you’re going to have to do.  But these are the 9 most important. To quote the great Tommy Lasorda: “This fucking job ain’t that fucking easy.” Appendix for media companies only: Step 10: For God’s sake, stop suing your customers. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Guide to Big Companies: Retaining great people Posted on July  5, 2007 This post is about retaining great people, particularly at big companies in industries like technology, where stock options matter and where people can relatively easily move from one company to another. Actually, I lied.  This post isn’t really about retention at all. Companies that are winning—even really big, old ones—never have a retention problem.  Everyone wants to stay, and when someone does leave, it’s really easy to get someone great to take her place. Companies that have a retention problem usually have a winning problem.  Or rather, a “not winning” problem. The typical case is a company that used to be a hot growth company, but the growth has flattened out, causing the stock to tank and everyone to be in a bad mood.  Or, alternately, an older big company that did really well for a while but more recently hasn’t been doing so well, causing the stock to tank and everyone to be in a bad mood. In other words, a company in transition—from winning at one point, to not winning now. The only way a company in that situation can retain great people is to start winning again. Great people want to work at a winner. All the raises, perks, and HR-sponsored “company values” drafting sessions in the world won’t help you retain great people if you’re not winning—not even the $6,000 heated Japanese toilets in all the restrooms, the $30,000 Olympic lap pool out back, and the free $4 bottles of organic orange juice in all the snack rooms. This seems deeply unfair when you’re going through it, because when you’re not winning, that’s exactly when you need all those great people the most! Oh well.  That’s the price we pay for living in a society where jobs aren’t for life anymore. So the right question is, how can we start winning again? In this post, I’m going to punt on large parts of the answer to that question, as follows: I already discussed the big company turnaround scenario in my last post in this series, which describes how to take a big company that is no longer winning and set it up to win again. A company that was a hot startup a few years ago and grew fast but is now seeing growth slow has a slightly different problem—your original product cycle has peaked and you need to find a new product cycle.  That’s your big challenge, way beyond retention.  But I’ll talk about that in a future post. Retention follows from the steps you are taking to orchestrate the turnaround and/or get to the next big product cycle. Having adroitly sidestepped most of what you need to do, let me now address some things you can do to help the retention situation while you are addressing the deeper issues required to win again. First, don’t give up.  I am particularly talking about the former hot startup that is now a large slow-growth company.  It is easy to say, well, we’re not a startup anymore, we’re not a growth company anymore—now we’re a big company, and we need to change our culture and our methods to attract and retain the kinds of people who like to work at big companies. Doing that will make your situation far worse, by causing the remaining great people you do have to abandon ship even faster.  Who wants to work for a company that has given up on having energy and drive and ambition?  And then you will end up with a staff that only knows how to be a big company—that only knows how to maintain something that someone else has already built—which is death in any industry where things change all the time. Second, focus.  In a technology company, focus on retaining the great architects and managers.  In other kinds of companies, focus on retaining the equivalent people—the people who are the magnets for retaining other great people and hiring more great people. You have to retain the magnets—or at least a critical mass of them—because without them, you’re going to lose everyone else. If you bear down and focus on retaining the magnets, retaining everyone else—for example, in a software company, the junior programmers, the product managers, the user interface designers, the salespeople, the sales engineers, the marketing staff, and so on—will be much easier. Third, clean house.  Any company with a retention problem probably also has an overstaffing problem and a mediocrity problem and needs to fix both of those at the same time. Identify and eliminate the jobs of the following categories of people: People who are “vesting in peace”—so called “VIPs”.  VIPs are a particular problem at the former hot startup that has plateaued.  They suck the life out of their environment and have to go. “Summertime soldiers”—people who only joined in the first place because you were already successful and have no interest in really bearing down and applying themselves to a challenge.  Again, a classic problem for the former hot startup.  Look particularly hard at the people who joined in the two years following the IPO—some of them are undoubtedly very hard working, but others are summertime soldiers and have to go. Mediocre performers—every company has some, unless you have been routinely firing your bottom 10% every year, and even then you probably have some. Taking out the people who fall into these categories will make your remaining great people feel better immediately, and will save you a lot of money and stock options that you can reallocate to better purposes—such as new compensation packages for your remaining great people. Fourth, promote your best people—especially into the jobs vacated by the more senior of the people you just fired—and give them very interesting challenges. That is so fundamental that I’m not even going to discuss it further here. Fifth, simplify and clarify your organizational structure to make sure that your best people have direct responsibility for their projects. Companies coming off a period of significant success usually have grown a lot and/or bought a lot of other companies, and typically have messy or overly complex org structures.  This is a great opportunity to clean that up—and in particular, to move to an organizational model where each of your stars has clear, direct, and comprehensive responsibility for a critical mission. Nuke all matrices.  Nuke all dual reporting structures.  And nuke as many shared services functions as you possibly can. For example, in a software company, break up the centralized documentation group, QA group, build group, etc. and disperse those people into the individual product divisions.  Give your product division heads complete responsibility for everything they need to ship great products—except for sales.  And then in sales, give your territory heads everything they need to kill their numbers. A great general rule of thumb for this kind of organizational redesign is that you want to tolerate overlap.  So each product division has its own QA team—so what?  Your division heads—who are now your best people—will be able to move so much faster that way that it’s worth it.  Plus, you saved so much money taking out the VIPs, summertime soldiers, and mediocre people that you’re still ahead on headcount expense. Remember, it’s generally a good idea, once you do all of this restructuring, to end up with smaller team sizes than you had before.  By reducing the size of a team, and increasing the average quality level within the team, you will usually speed things up, while saving money. Finally, be sure to take out layers—especially at the top of the company.  The best people who are now running all the key projects and divisions should be no more than one layer away from the CEO, and usually that means you can take out at least one layer, maybe two, and (shudder) maybe even more. Sixth, put the recruiters to work, aggressively—but don’t rely on them for everything. Notably, for the really critical open jobs, go out and recruit the right person yourself, or better yet promote from within. And here’s a neat trick that actually works.  Go out and re-recruit the best people who already left.  Some of them have since discovered that the grass isn’t actually greener at whatever mediocre startup they joined or whatever other big company they jumped to.  Give them fat packages against the new mission and get them back. Seventh, ramp up college recruiting.  This will be very important for you over the next couple years.  College recruiting is the best way to get a bunch of new fired up people into your company who are hungry and who don’t realize quite how badly you suck.  (That was a joke.) Eighth, communicate within—tell everyone in your company clearly and unambiguously, we are here to win and here’s how we’re going to do it.  It won’t be easy, but we can do it and we will do it, and we will have amazing stories to tell our grandchildren. You don’t need to be certain of all the answers!  Colin Powell says, “You know you’re a good leader when people follow you, if only out of curiosity.”  So project boldness, and have that glint in your eye where people know you’re up to something big. Ninth, shake things up.  Directly on Powell’s curiosity point—change the story to something new.  Overhaul the organization, move people around, fire people, promote other people, cancel products, double down on other products, do some acquisitions, cut some big deals, do some spinoffs, whatever—but change the story.  Reintroduce curiosity. When all else fails, do a “shake and bake”—do a big transformative deal that you’re not sure will work but which you think has a real shot.  That will at the very least inject energy back into the situation. I am being deliberately cavalier about this tactic, especially the “shake and bake” part.  You can easily destroy your company with this kind of move. But—and this is a very important but—a company in crisis often has a severe narrative or “story” problem that accompanies its business problems, and it can be hard to get people inside and outside the company motivated to reengage without you forcing a dramatic change to the story in some fundamental way. Stories don’t change by themselves.  Change the story. Next topic: how to talk a great person out of going to a startup. I’m assuming based on all of the above that if you do the blocking and tackling right, you’re going to be able to convince a lot of your great people to not go to a different big company. Talking someone out of going to a startup is a separate challenge. Someone usually wants to move from a big company to a startup for one or more of the following four reasons: First, she wants to build a new company instead of being a caretaker in someone else’s company. You can talk someone out of this if you can show her how, if she stays with you for two more years, you are going to concretely better train and prepare her to kick butt at a startup when she does make such a move—particularly if she is on the management track. Give her a promotion, a big new job with a big new challenge, and clear responsibility.  And tell her that if she kicks butt at this more significant challenge, she’ll not only be better prepared to be out on her own, but you will personally give her glowing recommendations and help her find the perfect startup or the perfect VC for her—in two years. Then, two years later, you can do the same thing again. I believe you are doing someone a huge favor when you do this.  Most startups aren’t very good and have no prospect of real success, and most big company people aren’t very good at picking ’em, although they never believe that.  And by staying, your great person is gaining incredibly valuable experience by taking on new challenges and new responsibilities at your company that will help her succeed and flourish down the road wherever she ultimately decides to go. It’s not that unusual to see a young superstar division head or senior vice president at a big company who has been promoted rapidly over the last several years who has also been periodically on the verge of going to a startup and stayed each time for a new challenge instead.  And there she is, running 100 or 500 or 2,000 people and doing incredibly well in her career.  Win/win. Now, if you’re not willing to promote ’em, that’s another story. Second, she has a killer idea for a startup, or has fallen in love with a startup’s killer idea. In this case, you’re probably better off letting her go to the startup. This isn’t the case nearly as often as you’d think.  Some of the startups I’ve seen great people join—including very recently—boggle my brain at how bad the ideas were. Third, she wants the financial upside of a startup. Visions of being the next Larry Page (Larriett Page?) are dancing in her head. You can often defeat this by simply explaining the realities of the compensation package she’s being offered. Explain to her how her options will likely be worthless when the startup fails, how small a percentage of the company she’s actually being offered, how much she’s going to be diluted by future financing rounds, how far below market her package is overall, and how bad the medical and dental benefits are for her kids.  And if she hasn’t changed her mind by that point, tell her a cramdown round story. Fourth, she can’t function in a large environment.  It’s too frustrating, too boring, too many rules, too much management, whatever. In this case, you are probably also better off letting her go to the startup. Things not to do when trying to retain great people: Now we’re getting into personal opinion, but for what it’s worth... Don’t create a new group or organization within your company whose job is “innovation”.  This takes various forms, but it happens reasonably often when a big company gets into product trouble, and it’s hugely damaging. First, you send the terrible message to the rest of the organization that they’re not supposed to innovate. Second, you send the terrible message to the rest of the organization that you think they’re the B team. That’s a one-two punch that will seriously screw things up. Instead, focus on boosting the innovation culture of the entire company. Don’t do arbitrary large spot bonuses or restricted stock grants to try to give a small number of people huge financial upside. An example is the Google Founders’ Awards program, which Google has largely stopped, and which didn’t work anyway. It sounds like a great idea at the time, but it causes a severe backlash among both the normal people who don’t get it (who feel like they’re the B team) and the great people who don’t get it (who feel like they’ve been screwed). In general, the intangibles that keep great people are: the quality of the people they’re working with, the interestingness level of their projects, and whether they are learning and growing. The tangibles are: winning, and a high stock price. As the leader, you have to really believe that you can get your company back to winning and therefore back to a high stock price. If not, you should sell the company. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Why there’s no such thing as Web 2.0 Posted on June  4, 2007 Proposed: There’s no such thing as Web 2.0. Well, that’s not actually true. Here’s what I think happened. In the beginning, Web 2.0 was a conference. As conferences go, a good one—with a great name. The first Web 2.0 conference was held in the fall of 2004, and coincided with a large number of people in the tech industry (myself included) peeking our heads out from the fallout from the nuclear winter of 2001-2003 and realizing that the Web was not only not dead, it was thriving. From there, it was easy to conclude that “Web 2.0” was a thing, a noun, something to which you could refer to explain a new generation of Web services and Web companies. Many people have since pointed out that there is no clear definition of Web 2.0. Tim O’Reilly, whose organization created the conference (and the term), attempted to define Web 2.0 as follows: ”Web 2.0 is the network as platform, spanning all connected devices; Web 2.0 applications are those that make the most of the intrinsic advantages of that platform: delivering software as a continually-updated service that gets better the more people use it, consuming and remixing data from multiple sources, including individual users, while providing their own data and services in a form that allows remixing by others, creating network effects through an “architecture of participation,” and going beyond the page metaphor of Web 1.0 to deliver rich user experiences.” This is, believe it or not, the short definition. The long one was much, much longer. Tim’s a wonderful guy, a friend, and a true pioneer, but if the creator of the term can’t come up with a crisper definition than that, what hope do the rest of us have? I believe the reality is this: what we have seen over the last several years is the Web itself coming into its own. After an initial phase of the Web as a medium, in which lots of people attempted to make the Web look like a newspaper, or a magazine, or a TV channel, we as an industry have recently been collectively developing a much clearer idea of what the Web is really like as a medium in and of itself. This has led to broad realization of a set of design patterns for how Web services and Web companies often get built and used. And of course, many of those design patterns are described by the sub-bullets of Tim’s and others’ multifaceted definitions of Web 2.0. And if it is useful for people to refer to those design patterns collectively with a term, then Web 2.0 maybe makes sense. Personally, I side with those who say “it’s just the Web”—that’s matter of semantics and reasonable people can disagree. But here’s the problem. Web 2.0 has been picked up as a term by the entrepreneurial community and its corollaries in venture capital, the press, analysts, large media and Internet companies, and Wall Street to describe a theoretical new category of startup companies. Or a “space”, if you will. As in, “Foobarxango.com is in the Web 2.0 space”. At its simplest level, this is just shorthand to indicate a new Web company. The technology industry has a long history of creating and naming such “spaces” to use as shorthand. Before the “Web 2.0 space”, you had the “dot com space”, the “intranet space”, the “B2B space”, the “B2C space”, the “security space”, the “mobile space” (still going strong!)... and before that, the “pen computing” space, the “CD-ROM multimedia space”, the “artificial intelligence” space, the “mini-supercomputer space”, and going way back, the “personal computer space”.  And many others. But there is no such thing as a “space”. There is such a thing as a market—that’s a group of people who will directly or indirectly pay money for something. There is such a thing as a product—that’s an offering of a new kind of good or service that is brought to a market. There is such a thing as a company—that’s an organized business entity that brings a product to a market. But there is no such thing as a “space”. And, as far as startups are concerned, there is no such thing as Web 2.0. What happens when startups start getting referred to as “Web 2.0 startups”—or for that matter, “B2B startups” or “mobile startups” or “pen computing startups”—or as being in the Web 2.0/B2B/mobile/pen computing “space”—is that trends are getting mistaken for markets and products. You can’t build a company based on a trend. Trends are obvious, and there’s no startup opportunity in the obvious. You have to build a company based on a new kind of product (or service—I am using the terms interchangeably) and you have to take that product to a market. It frankly doesn’t really matter which trends, or design patterns, you incorporate into your product. If the product is compelling to the market, it will succeed. If the product is not compelling to the market, it will fail. It’s not much more complicated than that. The hard part is creating that new and compelling product.  (This is left as an exercise to the reader.) Spending too much time thinking about trends and “spaces” is a great way for an entrepreneurial team to go right off the rails and bring another derivative product to market, which the market then promptly ignores. I can’t tell you how many pitches I’ve seen for startups that are chasing the latest trend and have no chance. And I can’t tell you how few pitches I’ve seen for new and compelling products. As a result of the widespread adoption of language like “Web 2.0 companies” and the “Web 2.0 space”—and startups referring to themselves as such, most of which will fail—you get a predictably cynical backlash from people who then dismiss the whole category as trendy marketing hype full of me-too wannabes and in the process throw out the baby with the bathwater and dismiss all the legitimately new and exciting products and companies that are being created all around us. As an entrepeneur, I am frankly torn as to whether or not to even post this piece. It may be in my best interest to have more of my fellow entrepreneurs off chasing trends and pitching their “Web 2.0 startups” to the latest enterprise software VC who is now “doing Web 2.0 deals” instead of building real products that might compete with one of my companies. But I think there are so many cool new products and companies being created these days—many of which have little to do with any conventional wisdom around buzzwords—and I’m so excited about them, and so proud of them on behalf of my industry, that I can’t help myself :-). This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Top 10 science fiction novelists of the ’00s—so far Posted on June 15, 2007 We are blessed so far this decade with an amazing crop of new science fiction novelists. Writing in a variety of styles, this crew is arguably more insightful, more interesting, higher intensity, and bolder than many (but not all!) of their predecessors—and in my view revitalizing the genre at a time when more new technologies that will radically reshape all our lives are incubating and percolating than ever before. So, taking nothing away from authors like David Brin who have long been established and continue to produce top-notch work, here are my nominations for the top 10 new science fiction novelists of—more or less—the decade, plus one bonus. And, they’re not all British. Stross, in my opinion, is first among equals—the single best emerging talent with several outstanding novels in various styles under his belt and hopefully many more to come. “One of us” in the sense that his career includes a stint as—not kidding—Linux columnist for Computer Shopper magazine, Stross is equally adept at both near-future and radically-extrapolated timeframes, and both hyper-serious and humorous moods. Glasshouse is Stross’s latest book and perhaps the best introduction to his work.  A paranoid journey into a world of intergalactic teleportation and arbitrary physical body reshaping will have you thinking twice about who you are, and how you know who you are. Singularity Sky and Iron Sunrise are top-notch post-Singularity space opera featuring perhaps the most inventive alien opponent ever created for science fiction—“the Festival”.  You’ll never look at telephones that drop out of the sky the same way again. Accelerando is the best envisioning of the Singularity committed to paper so far.  This book is really cool, both in the sense of how the kids mean it, and also in tone—the plot, which spans about 100 years, is emotionally cold but amazingly inventive and highly likely to keep you up nights thinking hard about where we’re all headed in the long run. The Atrocity Archives and The Jennifer Morgue, in contrast, are highly entertaining shaggy dog stories about an IT guy named Bob who gets drafted into mankind’s fight against forces of evil from another dimension—James Bond meets Call of Cthulhu meets The Office. Finally, Stross is also an active blogger with, let’s say, strong points of view. Morgan writes outstanding, page-turning, highly inventive military- and detective-flavored hard science fiction set in turbulent worlds where hard men are faced with hard challenges. Altered Carbon is definitely the place to start, Morgan’s first and perhaps most inventive novel, Robert Heinlein meets Raymond Chandler—and first of a trio. Broken Angels is a strong followup that tilts more towards military fiction while still occupying the same universe. Woken Furies completes the trilogy with more hard-boiled action featuring a protagonist who has to fight a younger, and really mean, version of himself, which he does not enjoy. Thirteen is undoubtedly Morgan’s best-written novel so far—this is an author whose skills are growing rapidly, and this book shows it.  Not officially released in the US yet (I just read the British version, Black Man, renamed for US consumption), Thirteen is a near-future story of genetic engineering gone badly wrong—a future version of all those classic paranoid political thrillers of the 70’s but with a much harder edge.  Highly recommended.  Also very helpful re advising on things to think about before booking your next trip back from Mars. Reynolds is the real deal—doctorate in astrophysics and former staff scientist at the European Space Agency—and writes as if Robert Heinlein knew a thousand times more about science and completely lost his ability to write for warm characters.  While Reynolds’ work is cold and dark—almost sterile—in human terms, he operates on a scale and scope seldom seen, and everything he writes is grounded in real advanced theoretical physics.  Highly recommended for anyone who likes large-scale space opera and big ideas. Revelation Space, Redemption Ark, and Absolution Gap—together, Reynolds’ flagship trilogy—are three of the darkest, largest-scale, and most scientifically complex hard science fiction novels ever written.  Highly recommended to anyone who thinks that sounds like a good idea (I did!). Century Rain is Reynolds’ most approachable novel so far—a trippy far-future expedition to an apparently inexplicable complete clone of Earth and all its inhabitants from our year 1959.  Like Morgan’s work, strong overtones here of Raymond Chandler—in a good way (in a great way). Chasm City has more overshades of Richard Morgan—lots of combat, science, and intrigue.  Are you sure you know who you are? The Prefect is just out and I haven’t read it yet, but it’s next on the stack. MacLeod is incredibly creative—his imagination is second to none—and he’s a superb writer.  Many of his books have political overtones that may or may not interfere with your ability to enjoy them.  Sometimes MacLeod seems to think that socialism is going to work a lot better in the future than it did in the past.  But if you can get through that, his novels certainly qualify as dizzyingly inventive and frequently rewarding. The Star Fraction, The Stone Canal, The Cassini Division, and The Sky Road form the Fall Revolution sequence, MacLeod’s first major body of work.  Cyberpunk, political revolution, high-tech combat, love-slave androids, cloning, wormholes, artificial intelligence, and nuclear deterrence for hire—oh my!  Join the Felix Dzerzhinsky Workers’ Defense Collective today. The Execution Channel, MacLeod’s latest, takes a left turn into a paranoid post-9/11 near future featuring war with Iran, flu pandemics, nuclear terrorist attacks, government conspiracies, and the Execution Channel, broadcasting actual footage of murders and executions around the clock.  Haven’t read it yet, but sounds like fun. Hamilton is the clear heir to Heinlein in my view.  Large-scale space opera told through a shifting and interlinked cast of people from various walks of life, and amazing storytelling—or, as (accurately) blurbed by Richard Morgan, “flat-out huge widescreen all-engines-at-full I-dare-you-not-to-believe-it space opera”. It’s taken Hamilton a little while to find his talent, but he’s definitely found it.  His two latest novels are superb: Pandora’s Star and its sequel Judas Unchained.  Plain on staying up late, you’ll roll straight from the first into the second—and they are not short (in the best way!). Another post-cyberpunk Heinlein heir, Scalzi writes strong, highly characterized, inventive novels that have been racking up tremendous review after tremendous review for the past few years. Start with Old Man’s War (don’t worry, they put the old dude in a young body, so you don’t need to find out what it’s like to fight aliens after hip replacement surgery).  Progress directly to sequel The Ghost Brigades (Sci Fi Essential Books) and triquel The Last Colony. Scalzi is also an active blogger, turns out! This way lie dragons... literally, and not like you’ve ever met before.  Asher is an incredidly strong author of science fiction with a distinctive horror overlay.  Not for the squeamish, but highly inventive. Asher’s primary work is the Polity series—Gridlinked, The Line of Polity, Brass Man, and Polity Agent.  The extended story of an enigmatic agent for the all-powerful artificial intelligences who rule the whole of human space, the Polity, these novels blend Ian Fleming with large-scale military combat, advanced theoretical xenobiology, nanotechnology gone badly wrong, and war drones with bad attitudes.  Most definitely entertaining. Follow those up with The Skinner and The Voyage of the Sable Keech, and then the delectable standalone novella Prador Moon.  One of the most distinctively imagined “bad bug” alien races, one of the most creative and lethal new worlds, and a historical scandal of horrific proportions combine in a whirlwind of violence and battle. Asher is blogging as well! Gibson meets Heinlein (can you tell I was a Heinlein fan growing up?) in a melange of science fiction themes, most particularly artificial intelligence, filtered through a distinctly female point of view.  A rapidly developing talent worth reading, and watching for future advances. Read Spin State and then read Spin Control. Watts’ fifth novel, Blindsight, has put him on the map—a new tale of alien contact, as conducted by a team of entitites from a future Earth that will send a chill down your spine without even getting to the alien part. My last and final entry of the top 10 is the one I am least certain about.  Marusek is off the charts in terms of creativity and inventiveness—in his debut novel, Counting Heads, he extrapolates with incredible verve and detail an Earth circa 2134 that is a near-utopia.  I frankly need to read it again.  I think it may be a failure as a novel, but if so, it’s an amazing failure.  Well worth keeping an eye on at the very least—has to win the award for highest potential. Vinge, a retired San Diego State Univeristy professor of mathematics and computer science, is one of the most important science fiction authors ever—with Arthur C. Clarke one of the best forecasters in the world. First, if you haven’t had the pleasure, be sure to read True Names, Vinge’s 1981 novella that forecast the modern Internet with shocking clarity.  (Ignore the essays, just read the story.)  Fans of Gibson and Stephenson will be amazed to see how much more accurately Vinge called it, and before Neuromancer’s first page cleared Gibson’s manual typewriter.  Quoting a reviewer on Amazon: When I was starting out as a PhD student in Artificial Intelligence at Carnegie Mellon, it was made known to us first-year students that an unofficial but necessary part of our education was to locate and read a copy of an obscure science-fiction novella called True Names. Since you couldn’t find it in bookstores, older grad students and professors would directly mail order sets of ten and set up informal lending libraries—you would go, for example, to Hans Moravec’s office, and sign one out from a little cardboard box over in the corner of his office. This was 1983—the Internet was a toy reserved for American academics, “virtual reality” was not a popular topic, and the term “cyberpunk” had not been coined. One by one, we all tracked down copies, and all had the tops of our heads blown off by Vinge’s incredible book. True Names remains to this day one of the four or five most seminal science-fiction novels ever written, just in terms of the ideas it presents, and the world it paints. It laid out the ideas that have been subsequently worked over so successfully by William Gibson and Neal Stephenson. And it’s well written. And it’s fun. So what?  Well, he’s done it again.  Vinge’s new novel, Rainbows End (yes, the apostrophe is deliberately absent), is the clearest and most plausible extrapolation of modern technology trends forward to the year 2025 that you can imagine. Stop reading this blog right now.  Go get it.  Read it, and then come back. We’ll see how things turn out, but I would not be the least bit surprised if we look back from 2025 and say, “I’ll be damned, Vinge called it”, just like we look back today on 1981’s True Names and say the same thing. He better write a sequel. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Posted on July  2, 2007 This is the first in a series of occasional posts in which I will talk about Ning, the new Internet service that I have created with my co-founder and CEO Gina Bianchini and an outstanding team here in Palo Alto, California and around the world. In this series of posts I’ll discuss Ning both from the perspective of what we are doing it and how we are doing it—an applied case study of building a new Internet company in the ’00’s, if you will. In this first post, I set the context by providing a brief overview of Ning and why we created it. Ning gives you the ability to create your own social network for anything—in about two minutes, for free. When you create your own social network on Ning, you choose from a set of features —including videos, photos, blogs, music, discussions, profiles, friends, messaging, and more. You can make your network public or private. You can also customize every aspect of your social network’s appearance—by choosing from a set of themes or adding your own HTML and CSS. You can customize how your social network works  to the nth degree—by dragging and dropping; by dipping into HTML and CSS; and, if you’re a programmer, by modifying the underlying source code and using our extensive suite of platform APIs to do anything you want. The social network that you create on Ning is yours—it’s what you want to create for your friends, your family, your interests, your city, your class, your start-up, your political candidate, or your nonprofit activity.  It’s whatever you want it to be. Network Creators on Ning have already created 71,531 social networks on an incredibly broad range of topics—and, in turn, those networks are being visited today by millions of people. Ning continually adds new features and APIs, and makes sure your network—and every other network on Ning—runs fast, reliably, and at high scale. By default, the service is free and we run targeted ads on  your network.  We also let you buy the right to run your own ads or not have ads run at all, plus a range of additional premium services that give you additional capabilities like more storage and bandwidth. From a handful of huge social networks, to millions of social networks of all sizes: I’m an enormous fan of the first generation of social networks—services like MySpace, Facebook, and Youtube.  I think they are incredibly useful and compelling services that are bringing tens of millions of people into the world of social networking—and that’s a really big deal. I also think that in time, many people will decide they want to create their own social networks—echoing the 1990’s, when tens of millions of people who were introduced to the online world by proprietary online services like AOL, Compuserve, and Prodigy ultimately decided they wanted to create and live in a world of millions of web sites, not just a world of a few large walled gardens. I think both approaches—large proprietary walled gardens, and millions of specialized social networks created by regular people—will coexist just fine, but the more people learn what social networking makes possible, the more interested they will be in creating their own worlds, their own social networks, around every conceivable need and niche: their families, friends, cities, companies, start-ups, classes, hobbies, interests, political candidates, nonprofit activities, and so on. That’s why my co-founder Gina and I started Ning—to see what we could do to make it as easy as possible for regular people, potentially in the millions, to build their own social networks for anything. We wanted to enable people to create their own worlds, not just join someone else’s. What kinds of social networks are people building on Ning? The range and variation among the 71,531 social networks than have already been created on Ning astonishes me daily. Networks for music video directors to handbell musicians to PHP coders to lovers of all things cute to penguin aficionados.  Activites ranging from wakeboarding to cycling to baby naming to bedroom music studios to crime fiction.  Networks for TV shows, movies, and bands ranging from the Smashing Pumpkins to We Live Here to We’re An American Band to The Class to CSI to the Sick Puppies.  And networks in languages from Chinese to Spanish to Argentinian Spanish to German and beyond. And those examples don’t even take into account all the private networks that are by invitation only. It’s all over the map—more proof, if anyone needed it, that human creativity is boundless. There are already more social networks on Ning than on the entire rest of the Internet. Of course, collectively the networks on Ning are not yet as large as the big walled gardens—MySpace, Facebook, Youtube—but both the number of networks on Ning and the number of active members, including the average number of active members per network, are growing very fast. What’s a social network, really? I think that sometimes people have too narrow a view of what “social network” means—or can mean. Of course the standard definition—today—is an online environment where people have profiles and interact via one another via friend links, messages, invitations, discussions, and sharing videos, photos, and music. And those networks are certainly easy to create on Ning. But even today, we see a lot of social networks that are customized and focused—perhaps focused mostly on videos, or mostly on a certain kind of music, or mostly on photos of art or nature—or focused in other, even more creative ways. I think the definition of what it means to be a social network is going to expand rapidly from here—to incorporate many kinds of behavior and many features that people would be surprised by today, ranging from real-time communication to ecommerce to mobile uploading and downloading to games and beyond. I believe that in the long run, “social network” will imply people interacting online, in a dizzying array of modes, methods, and styles—in software environments that let people express themselves and connect in any way they can possibly envision. You can already see that happening on Facebook since the introduction of the Facebook platform five weeks ago, and you can certainly see it happening on Ning—and we are going to push new features as hard and as fast as we possibly can, and open up as many new capabilities and ways to interact as we and Network Creators can imagine. You can expect a lot of creativity in this whole field over the next five years. Our plan is to build a very large and very vibrant platform in which millions of people can create their own highly tailored and customized social networks for anything and invite in tens or even hundreds of millions of people to join and participate. To get here, our first step was to build the service itself—the underlying platform (which I will discuss in detail in the next post in this series) and the “your own social network for anything” application you see today.  We did this over the last two and a half years. With the release of “your own social network for anything” at the end of February, we clearly achieved product/market fit. As a result, we’re now in scaling mode—running the service itself at a steadily increasing level of performance, reliability, and scale, and continually adding new features and new APIs that let people do more and more, both with the features we provide and by building their own features on our platform. From here, as we continue to scale, we plan to support the service by generating revenue from two primary sources: targeted ads, which we run by default on pages throughout the service; and premium services, which let a Network Creator go beyond the boundaries of the free service—including buying the right to run your own ads, or not have ads run at all. That’s it—pretty simple! Why I love working on Ning and at Ning: As I’ve previously discussed on this blog, I think the Internet is coming into its own as a medium, right now. After 12 years of experimentation, when I and a lot of other people tried a lot of experiments to try to figure out how people everywhere were really going to use this marvelous collective invention, I think it’s becoming crystal clear what some of the defining characteristics of the Internet really are. Giving people the ability to communicate in many new ways—making geography finally irrelevant. Giving people the ability to express themselves in many new ways—the impact of the printing press, magnified a millionfold. Giving people the ability to create their own worlds for everything they care about—and connecting with everyone else who shares the same interests, goals, and dreams. These are things that previous technology and media—telephone, telegraph, paper mail, fax, television, radio, newspapers, magazine—occasionally approached in sharply limited and fragmented ways... but now with the Internet are available to over a billion people worldwide already and a lot more every day. And I think that over the next several years we are going to see an unleashing of creativity and innovation in this realm that will make the 1990’s look like a sideshow act. It’s a magical time, and I couldn’t be more fired up to be a part of it. Ning is one approach—of many, to be sure—to putting these new capabilities into the hands of a huge number of people, and one that I am very excited about and one that we plan to pour a huge amount of effort into—tuning, tweaking, adding features, scaling, expanding, and improving, hopefully for years to come. In the next post in this series I will describe the Ning platform in depth, and how you can use it to build practically any social experience you can think of with surprisingly little effort. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Book of the week: Best book for tech entrepreneurs this year Posted on July 18, 2007 Steve Blank is a super-experienced Silicon Valley technology entrepreneur who is best known for starting E.piphany, a successful software company, and also founded or worked at a broad range of meaningful tech companies over the last 30 years including Zilog, Convergent, MIPS, Ardent (one of the most innovative mini-supercomputer companies of the late 80’s), and Rocket Science Games.  Today he is a director at several tech companies including Immersion, Cafepress, Macrovision (boo hiss), and IMVU, and lectures on entrepreneurship at Stanford and UC Berkeley. In other words, this is a dude with serious street cred. Steve is one of the most strategic thinkers you will find on the topic of starting high-tech companies.  A lot of entrepreneurs come up with an idea and run with it; Steve, on the other hand, takes a comprehensive approach at analyzing and specifying exactly what a company is going to do to get started and become successful.  And because he’s a real-world entrepreneur, he doesn’t think in terms of abstract frameworks like many commentators and theorists, but rather the real, concrete things that a startup has to do to be successful. And he’s just written and published a book, The Four Steps to the Epiphany, that is a very practical how-to manual for startups. In a nutshell, Steve proposes that companies need a Customer Development process that complements their Product Development Process.  And he lays out exactly what he thinks that Customer Development process should be.  This goes directly to the theory of Product/Market Fit that I have discussed on this blog before—in this book, Steve provides a roadmap for how to get to Product/Market Fit. Buy it, read it, keep it under your pillow and absorb it via osmosis. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"The three kinds of platforms you meet on the Internet Posted on September 16, 2007 [Title with sincere apologies to Mitch Albom and his wonderful book.] One of the hottest of hot topics these days is the topic of Internet platforms, or platforms on the Internet.  Web services APIs (application programming interfaces), web services protocols like REST and SOAP, the new Facebook platform, Amazon’s web services efforts including EC2 and S3, lots of new startups talking platform (including my own company, Ning)... well, “platform” is turning into a central theme of our industry and one that a lot of people want to think about and talk about. However, the concept of “platform” is also the focus of a swirling vortex of confusion—lots of platform-related concepts, many of them highly technical, bleeding together; lots of people harboring various incompatible mental images of what’s about to happen in our industry as a consequence of various platforms.  I think this confusion is due in part to the term “platform” being overloaded and being used to mean many different things, and in part because there truly are a lot of moving parts at play that intersect in fascinating but complex ways. This post is my attempt to disentangle and examine the topic of “Internet platform” in detail.  I will go at it by identifying three distinct approaches to providing an Internet platform, and project forward on where I think each of the three approaches will go.  At best, I might be able to help make a new landscape clear.  At worst, hopefully I can at least provide one framework for future discussion. Let’s start with a basic definition.  From a previous post: A “platform” is a system that can be programmed and therefore customized by outside developers—users—and in that way, adapted to countless needs and niches that the platform’s original developers could not have possibly contemplated, much less had time to accommodate. We have a long and proud history of this concept and this definition in the computer industry stretching all the way back to the 1950’s and the original mainframe operating systems, continuing through the personal computer age and now into the Internet era.  In the computer industry, this concept of platform is completely settled and widely embraced, and still holds going forward. The key term in the definition of platform is “programmed”.  If you can program it, then it’s a platform.  If you can’t, then it’s not. So, if you’re thinking about computing on the Internet, whenever anyone uses the word “platform”, ask: “Can it be programmed?”  Specifically, with software code provided by the user?  If not, it’s not a platform, and you can safely ignore whoever’s talking—which means you can safely ignore 80%+ of the people in the world today who are using the term “platform” and don’t know what it means.  (Yes, there are hardware platforms too!  But those are different and I’m not talking about them.) Now, traditionally in the field of computing, there has been a single main way of providing a platform.  You provided a computer system—a mainframe, a PC operating system, a database, or even an ERP system or a game—that contained a programming environment that let people create and run code, plus an API that let them hook into the core system in various ways and do things. To quote Tony Stark, “That’s how Dad did it, that’s how America does it, and it’s worked out pretty well so far.” The Internet—as a massive distributed system of many millions of internetworked computers running many different kinds of software—complicates things, and gives rise to three new models of platform that you see playing out in the Internet industry today. I call these Internet platform models “levels”, because as you go from Level 1 to Level 2 to Level 3, as I will explain, each kind of platform is harder to build, but much better for the developer.  Further, as I will also explain, each level typically supersets the levels below. As I describe these three levels of Internet platform, I will walk through the pros and cons of each level as I see them.  But let me say up front—they’re all good.  In no way to I intend to cast aspersions on what anyone I discuss is doing.  Having a platform is always better than not having a platform, period.  Platforms are good, period. So, let’s walk through the three levels of Internet platforms. Level 1 is what I call an “Access API”. This is the kind of Internet platform that is most common today.  This is typically a platform provided in the form of a web services API—which will typically be accessed using an access protocol such as REST or SOAP. Architecturally, the key thing to understand about this kind of platform is that the developer’s application code lives outside the platform—the code executes somewhere else, on a server elsewhere on the Internet that is provided by the developer.  The application calls the web services API over the Internet to access data and services provided by the platform—by the core system—and then the application does its thing, on its own.  That’s why I call this an “Access API”—the key point is that the API is accessed from outside the core system. This is of course the approach taken by eBay, Paypal, the Google Search API (before they killed it), Flickr, Delicious, etc.  Whenever someone pulls photos out of Flickr to put them on another web site, or whenever someone creates a Google Maps mashup, they’re using a Level 1 Internet platform. This is undoubtedly a very useful thing and has now been proven effective on a widespread basis.  However, the fact that this is also what most people think of when they think of “Internet platform” has been seriously confusing, as this is a sharply limited approach to the idea of providing a platform. What’s the problem?  The entire burden of building and running the application itself is left entirely to the developer.  The developer needs to provide her own runtime system, programming language, database, servers, storage, networking, bandwidth, and security, and needs to take responsibility for running all of the above—and then exposing the application to users.  This is a very high bar in terms of both technical expertise and financial resources. As a consequence, you don’t see that many applications get built relative to what you’d think would be possible with these APIs—in fact, uptake of web services APIs has been nothing close to what you saw with previous widespread platforms such as Windows or the Mac. This is, however, by far the easiest kind of Internet platform to create.  As the platform owner, you don’t have to worry about developer code running inside your system or developer functionality injecting itself into your system; you retain completely control over your user interface; and you can sharply limit the load impact that third parties can have on your systems—i.e., throttling is straightforward. Because of this and because Level 1 platforms are still highly useful, notwithstanding their limitations, I believe we will see a lot more of them in the future—which is great.  And in fact, as we will see, Level 2 and Level 3 platforms will typically all incorporate an Level 1-style access API as well. Level 2 is what I call a “Plug-In API”. This is the kind of platform approach that historically has been used in end-user applications to let developers build new functions that can be injected, or “plug in”, to the core system and its user interface. For example, Photoshop has for a long time had a widely used and highly successful plug-in API.  Lots of people have used the Photoshop plug-in API to build tons of new functionality for Photoshop ranging from support for new file formats to new ways to retouch images to new special effects to apply to images. More recently, Firefox is well known for having a great plug-in, or extension, API that lets third parties build a wide range of Firefox plug-ins.  These plug-ins span functions from blogging to dowloading to search to language translation. In the Internet realm, the first Level 2 platform that I’m aware of is the Facebook platform. When you develop a Facebook app, you are not developing an app that simply draws on data or services from Facebook, as you would with a Level 1 platform.  Instead, you are building an app that acts like a “plug-in\" into Facebook—your app literally shows up within the Facebook user experience, often as a box in the middle of a page that Facebook otherwise defines, such as a user profile page. Your Facebook app can of course also use Facebook’s Level 1-style access API—their web services API—to pull data or services from Facebook’s core systems—and in fact the two approaches neatly complement each other, because without the access API your embedded Facebook app wouldn’t know anything about the system in which it was embedded and wouldn’t be very useful. I think that Facebook’s platform approach is a harbinger of a large number of new Internet plug-in APIs that will be created for lots of other Internet services from here on out.  Which is great: developers will be able to inject new functions into many other Internet services in the future, just like they can with Facebook today. As a historical side note, in retrospect, this is what AOL should have done in the mid 1990’s when the web first popped up.  At that point, AOL had a huge user base relative to the consumer Internet.  However, AOL was completely closed—third parties couldn’t build new functions or apps that could plug into AOL and be used by AOL users.  As a consequence, all of the creativity and third-party effort that AOL might have harnessed had they provided a plug-in API—a way for third parties to build apps that would inject new functions into the AOL user experience—went to the web instead.  A few years later, it became clear to AOL users that the web is where all the interesting stuff was, and then when broadband came along and people had to switch ISPs anyway, the users bailed on AOL. Seen through this lens, Facebook—and I mean this in the best possible way—is the new AOL, but, by also being a platform, executing the opportunity correctly. Technically, with an Internet plug-in API approach such as Facebook’s, the third-party app itself lives outside the platform—outside the core system—just like I described for Level 1 platforms.  The code for the app runs somewhere else.  This means that just like with Level 1 platforms, the entire burden of building and running a Level 2 platform-based app is left entirely to the developer—who still needs to provide her own runtime system, programming language, database, servers, storage, networking, bandwidth, and security, and who still needs to take responsibility for running all of the above. As a result, the technical expertise and financial resources required of a Level 2 platform’s developer—if she intends to build a meaningful app—are very high. Technical expertise: the developer has to be a world-class expert at building and deploying Internet applications, which have lots of moving parts. Financial resources: the developer has to foot the bill for servers, storage, networking gear, bandwidth, etc., which can be significant for meaningful apps—especially if they succeed. In fact, if an app succeeds on a Level 2 platform, the technical and financial burdens on the developer can rapidly become overwhelming—leading me to summarize with the phrase “success kills”. On top of that, there’s an issue for the platform provider as well.  When a third party app embedded into a Level 2 platform is down, because the developer doesn’t know how to scale or doesn’t have the money required to do so, the error shows up as an error within the core system.  For example, whenever an individual Facebook app is down, users see the error within their Facebook pages—even though Facebook itself is not responsible for the app outage, nor could Facebook do anything about that outage even if they wanted to.  Ordinary users will not realize who is at fault and will tend to blame the core system—in this case, Facebook. For these reasons, I think that while Level 2 platforms are clearly very powerful and are wonderful for users, these issues sharply constrain the number of developers who can build apps to those who have the technical capability and the financial resources to build their own primary Internet systems anyway—which is a small fraction of the people who will ultimately want to be developers on popular Internet platforms. The great news, though, is that unlike a Level 1 platform where the burden of exposing the app to users is also placed on the developer, Level 2 Internet platforms—as demonstrated by Facebook—will be able to directly help their developers get users for their apps.  This is one of the reasons I have called the Facebook platform a breakthrough—Facebook provides a whole series of mechanisms by which Facebook users are exposed to third-party apps automatically, just by using Facebook.  This is great for developers, and hopefully new Level 2 Internet platforms will follow in Facebook’s footsteps—and not in MySpace’s, which could have been a Level 2 Internet platform well before Facebook but instead took a very hostile stance towards third-party developers. It is also worth nothing that Level 2 platforms are significantly harder to create than Level 1 platforms.  Facebook, for example, had to anticipate and provide technical solutions for a whole series of issues—user interface issues, security issues, performance issues, caching issues, etc.—to provide their plug-in API that providers of access APIs don’t have to worry about.  This is perhaps why we haven’t seen more Level 2 platforms—yet. Level 3 is what I call a “Runtime Environment”. In a Level 3 platform, the huge difference is that the third-party application code actually runs inside the platform—developer code is uploaded and runs online, inside the core system.  For this reason, in casual conversation I refer to Level 3 platforms as “online platforms”.  Let me explain. A Level 1 platform’s apps run elsewhere, and call into the platform via a web services API to draw on data and services—this is how Flickr does it. A Level 2 platform’s apps run elsewhere, but inject functionality into the platform via a plug-in API—this is how Facebook does it.  Most likely, a Level 2 platform’s apps also call into the platform via a web services API to draw on data and services. A Level 3 platform’s apps run inside the platform itself—the platform provides the “runtime environment” within which the app’s code runs. In addition, it is highly likely that a Level 3 platform will also superset Level 2 and Level 1—i.e., a Level 3 platform will typically also have some kind of plug-in API and some kind of access API. Put in plain English?  A Level 3 platform’s developers upload their code into the platform itself, which is where that code runs.  As a developer on a Level 3 platform, you don’t need your own servers, your own storage, your own database, your own bandwidth, nothing... in fact, often, all you will really need is a browser.  The platform itself handles everything required to run your application on your behalf. Obviously this is a huge difference from Level 2.  And this difference—and what makes it possible—is why I think Level 3 platforms are the future. Let’s start with one big issue right up front: Level 3 platforms are much harder to build than Level 2 platforms. As a platform provider, once you accept the idea that user code—code that you didn’t write and you can’t vet for quality or security—is going to run within your platform, you have a whole pile of issues you have to deal with that a Level 2 platform can simply ignore. The Level 2 platform’s apps will be running their code elsewhere—at the end of the day, the running code is someone else’s problem.  With a Level 3 platform, all the running code for all the apps is your problem. What are some of those issues?  To list a few: You have to provide a runtime environment that can execute arbitrary third-party application code.  You have to build a system for accepting and managing that code.  You have to build integrated development tools into your interface to let people develop that code.  You have to provide an integrated database environment suitable for applications to store and process their data.  You have to deal with security in many different ways to prevent applications from stepping on one another or on your system—for example, sandboxing.  You have to anticipate the consequences an application succeeding and needing to be automatically scaled.  And you have to build an automated system underneath all that to provide the servers, storage, and networking capabilities required to actually run all of the third-party applications. And you probably also have to provide Level 2 functionality—a plug-in API—and Level 1 functionality—an access API—so that third-party applications can actually do useful things once they are running within your system. The bad news is that this is a truly intense technical and business undertaking, and not for the faint of heart. The good news is that what it makes possible is magical. Here’s what’s magical: the level of technical expertise required of someone to develop on your platform drops by at least 90%, and the level of money they need drops to $0.  Which opens up development to a universe of people for whom developing on a Level 2 or Level 1 platform is prohibitively difficult or expensive. Actually, it gets even better than that.  You can provide an open source ecosystem within your platform to let users freely share code with one another—actual running code!  You can in essence have your own open source dynamic within your platform—in the best case, allowing users to clone and modify one another’s applications with a level of ease that the software industry has never seen.  The rate of rapid evolutionary application development that can result from this approach will, I think, be mind-boggling as it plays out. You can also, if you want, provide a marketplace that lets people buy and sell code—then you can have the open source dynamic and the profit incentive.  The sky’s the limit in terms of how much development can happen on a platform like that. The Level 3 Internet platform approach is ironically much more like the computer industry’s typical platform model than Levels 2 or 1. Back to basics: with a traditional platform, you take a computer, say a PC, with an operating system like Windows.  You create an application.  The application code runs right there, on the computer.  It doesn’t run elsewhere—off the platform somewhere—it just runs right there—technically, within a runtime environment provided by the platform.  For example, an application written in C# runs within Microsoft’s Common Language Runtime, which is part of Windows, which is running on your computer. I say this is ironic because I’m not entirely sure where the idea came from that an application built to run on an Internet platform would logically run off the platform, as with Level 1 (Flickr-style) or Level 2 (Facebook-style) Internet platforms.  That is, I’m not sure why people haven’t been building Level 3 Internet platforms all along—apart from the technological complexity involved. However, I think this will change, because the advantages of being a Level 3 platform—particularly the advantages to the developer, and thereby for the platform—are so overwhelming. So who’s building Level 3 Internet platforms now? First, I am—Ning has been built from the start to be a Level 3 platform. I’ll be writing more about this in another post, but in a nutshell, Ning is a full online platform for creating and running social networking applications.  We provide all of the platform functions I described above, including the ability for users to either create their own applications or run clones or modified copies of applications we or other people provide. There are close to 100,000 such applications currently running on the Ning platform—you can see them at Ning in the form of all of the various social networks and applications in the system—and that number is growing very quickly. Second, in a completely different domain, Salesforce.com is also taking a Level 3 platform approach—Salesforce now provides quite sophisticated ways for users and developers to create and upload code and program the Salesforce platform from a browser. Salesforce provides a Level 3 platform both because it lets users easily customize Salesforce to do whatever they need, and also because it definitively trumps the criticism they historically got from packaged software vendors like Siebel who accused Salesforce of not being as adaptable as a piece of software you install on your own servers. You probably don’t see this in action much—unless you’re a Salesforce user—but they’re doing really interesting work in this area and getting great results. Third, and again in a completely different domain, Second Life is a Level 3 platform. It’s a little different in that Second Life provides its own client—for its immersive 3D world—but you can think of the Second Life client as analogous to a browser in that it’s an Internet client that draws on content being sent down from Second Life’s servers. Then, within Second Life, there is a complete runtime environment for running code provided by any user—you can create items within Second Life and program them to do anything and behave in any way that you can possibly imagine.  And you can, with permission, look at the code of another user’s item and then make a copy or modify it to do whatever you want.  And all of that code is running on Second Life’s servers. It’s a tremendously dynamic platform that lets users build a dizzying array of worlds and objects that are all completely customized—programmed. Fourth, Amazon is—I would say—“sort of” building a Level 3 Internet platform with EC2 and S3.  I say “sort of” because EC2 is more focused on providing a generic runtime environment for any kind of code than it is for building any specific kind of application—and because of that, there are no real APIs in EC2 that you wouldn’t just have on your own PC or server. By this, I mean: Ning within our platform provides a whole suite of APIs for easily building social networking applications; Salesforce within its platform provides a whole suite of APIs for easily building enterprise applications; Second Life within its platform provides a whole suite of APIs for easy building objects that live and interact within Second Life.  EC2, at least for now, has no such ambitions, and is content to be more of a generic hosting environment. However, add S3 and some of Amazon’s other web services efforts to the mix, and you clearly have at least the foundation of a Level 3 Internet platform. Interestingly, Amazon’s FPS—Flexible Payments Service—is itself a Level 3 Internet platform.  You actually upload code written in a specialized programming language—which they called GK, for “Gatekeeper code”—that controls how payments happen; that code runs within Amazon’s online systems.  It’s a really innovative way to provide a highly flexible vertical service—and great to see! Fifth and last, Akamai, coming from a completely different angle, is tackling a lot of the technical requirements of a Level 3 Internet platform in their “EdgeComputing” service—which lets their customers upload Java code into Akamai’s systems.  The Java code then runs on the “edge” of the network on Akamai’s servers, and is distributed, managed, and secured so that it runs at scale and without stepping on other customers’ applications. This is not a full Level 3 Internet platform, nor do I think Akamai would argue that it is, but there are significant similarities in the technical challenges, and it’s certainly worth watching what they do with their approach over time. These examples illustrate one final point about Level 3 platforms: you have to commit to never killing your platform.  This is a sharp difference. Think about it:  For a Level 1 or Level 2 platform, if you kill the platform, you still have a working and useful system.  If the Google Search API gets killed—and it was!—you still have Google Search which is still useful to its users.  If the Facebook platform gets killed—which presumably it won’t be—you still have Facebook which is still useful to users as a social networking service in exactly the same way it was before they introduced their platform. On the other hand, if you kill a Level 3 platform, you destroy the whole reason people use your system to begin with—to develop and run custom code.  If you remove the platform from Ning, Ning is useless—applications don’t run, and users can’t do anything.  If you remove the platform from Salesforce, all the users who are using customized apps can’t use Salesforce anymore.  If you remove the platform from Second Life, none of the objects or experiences in the virtual world work anymore and the whole user experience collapses. Like my old boss Jim Barksdale used to say, it’s the difference between the chicken and the pig at a ham and egg breakfast.  The chicken’s involved but the pig is committed. I believe that in the long run, all credible large-scale Internet companies will provide Level 3 platforms.  Those that don’t won’t be competitive with those that do, because those that do will give their users the ability to so easily customize and program as to unleash supernovas of creativity. I think there will also be a generational shift here.  Level 3 platforms are “develop in the browser”—or, more properly, “develop in the cloud”.  Just like Internet applications are “run in the browser”—or, more properly, “run in the cloud”.  The cloud being large-scale Internet services run on behalf of users by large Internet companies and other entities.  I think that kids coming out of college over the next several years are going to wonder why anyone ever built apps for anything other than “the cloud”—the Internet—and, ultimately, why they did so with anything other than the kinds of Level 3 platforms that we as an industry are going to build over the next several years—just like they already wonder why anyone runs any software that you can’t get to through a browser.  Granted, I’m overstating the point but I’m doing so for clarity, and I’m quite confident the point will hold. First, how will we see the new platforms of the future? We are used to seeing platforms ship as products—you buy and install a PC or a server and you build an app that runs on it, or equivalently you download and install an open source platform such as Perl or Ruby and you build an app that runs on it. The platforms of the future won’t be like that.  The platforms of the future will be online services that you will tap into over the Internet, perhaps with nothing more running locally than a browser.  They won’t have anything you download, or even an SDK.  They will look more like services than software.  To paraphrase the Book of Matthew, “you will know them by their URLs”. Second, beware overfocusing on the apps of the past when thinking about the platforms of the future. Lots of people got confused by the idea of apps running in the browser because when they thought of apps, they thought of the apps they used already on their PCs—Word, Excel, Powerpoint—and not the apps that would get built on the web—eBay, Amazon, Salesforce.com.  Now, it turns out in the fullness of time that word processing, spreadsheets, and presentation apps are also moving into the web—as Google is demonstrating.  But way before that happened, the web led people to create lots of new kinds of applications that were not possible on the PC. A new platform typically enables a new set of applications that were not previously possible.  Why else would there be a need for a new platform? But: keep this in mind; look for the new applications that a new platform makes possible, as opposed to evaluating the new platform on the basis of whether or not you see older classes of applications show up on it right away. Third, lots and lots of people have opinions about platforms, but the people whose opinions matter are programmers, and people who can make decisions about what programmers program. This sounds incredibly elitist, to which I say: first, the whole point of platforms is that they let people program on them.  So people who aren’t programming, or making decisions about programmers programming on them, don’t have a lot to do with them, and often don’t know what they’re talking about.  Second, is is really easy to learn how to program—in fact, it’s never been easier.  So there’s really no excuse for anyone who wants to have opinions to not learn to program—in fact, that’s a great excuse to learn how to program! And on that note, I’m going to go to sleep now and dream about “for” loops and “if/then” statements. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Music of the week: Three views of the blues, through jazz Posted on July 10, 2007 My three favorite jazz-based blues albums, all timeless: First, Ahmad Jamal’s Ahmad’s Blues—the best mellow piano trio jazz/blues album ever, a live 1958 performance in an intimate nightclub setting that just wraps around you and envelops you in a mellow, sensual world of the blues.  My favorite album for just relaxing at home.  Instantly puts you at ease.  You also immediately feel like you’ve been listening to it your entire life. Second, Ray Bryant’s All Blues—wonderful straight-ahead jazz/blues piano trio, lead by the incomparable Ray Bryant, who plays with an assured rhythm and style all his own.  This one always cheers me up.  Great music to work to—toe-tapping yet mellow enough to not be distracting. Third, Miles Davis’s Kind Of Blue—perhaps the best jazz album ever, also happens to be one of the best blues albums ever.  It so routinely makes the top 10 (or top 1) lists of jazz albums that you forget just how perfect it is in almost every way.  Miles, John Coltrane, Cannonball Adderley, Bill Evans, Wynton Kelly—some of the best jazz musicians of all time, in one place, playing the twentieth century’s most beautiful music.  This album is my refuge—the one that’s guaranteed to take me away to a place where everything just fits right. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Eleven lessons learned about blogging, so far Posted on July 10, 2007 This post is to share lessons I have learned about blogging so far, five weeks into this blog. First, it’s hard to believe it’s only been five weeks. “Internet time” lives, I can tell you that. Second, I’d like to truly thank everyone who has read this blog, linked to this blog, sent this blog to your friends, or come up to me at various parties and events to say that you’ve been reading it—and also the people who have emailed me and especially the people who posted comments before I turned comments off! It’s a lot of fun to interact directly with a community of people who share my interests and passions, and I plan to continue for a long time. Third, I should have started doing this years and years ago. Anyone who says blogs are not widely read is incorrect.  I have been absolutely amazed at the range and diversity of the people who have been reading this blog, and so quickly. It is crystal clear to me now that at least in industries where lots of people are online, blogging is the single best way to communicate and interact. I missed this early on, but I certainly get it now. Fourth, one of the best things about blogs is how they enable a conversation among people with shared interests. However, precisely how this conversation happens is not completely straightforward. Most recently, I turned off comments on this blog because I was no longer willing to spend the time required to moderate for relevance and civility, and that has me thinking hard about the topic of Internet conversation. Those of us who have been on the Internet for a long time recall the heydey of Usenet—a world in which hundreds or thousands of conversations, most of them unmoderated, flourished among the lucky few who had Internet access prior to 1994.  One of the clear negative consequences to the “great opening\" of the Internet from 1994 on was the influx of spam and abuse that substantially damaged those discussions, and shut down many of them. Blogging is clearly the second coming of high-quality Internet conversations, but it is also clear that comments on blogs run the same risk of being damaged by spam and abuse, and that new approaches to maintaining a high quality of discourse are required. The first time I met Dave Sifry, over three years ago, he told me that conversations on the Internet would eventually all revolve around every individual having a blog, each individual posting her own thoughts on her own blog, and blogs cross-linking through mechanisms like trackbacks and blog search engines (such as Dave’s Technorati). The advantage of this new world, said Dave, is that each individual (anonymous or not) would be publicly responsible for their own content and in charge of their own space—substantially reducing the risk of spam and trolls—and the communication would flow through the links.  There would still be the risk of link spam, but at least this new world would make people more responsible for their own content, and that would tend to uplevel the discourse. I think Dave is exactly right, and the implications of this new world are very interesting. I am currently supporting trackbacks on my most recent 20 posts.  I am also reading both Technorati and Google Blog Search results for my blog, multiple times per day.  In addition, I am maintaining a public email address (pmarcablog AT gmail DOT com), for which I am reading all incoming messages, although not responding to most of them (which I warn about on my home page).  I’m also watching the various news aggregation services such as Techmeme, Y Combinator News, Digg, and Reddit, which occasionally link to my posts. This combination of approches makes it easy for me to track what other people are saying about the things I write, and I am trying to follow up as often as possible by either commenting on their blogs (if they have comments turned on) or at least thinking about what they say. Over the next few months I will be experimenting with other approaches to encouraging a flow of conversation in and out of my blog.  Suggestions on this topic are very welcome—please send them to pmarcablog AT gmail DOT com. I would also love to add a real-time component to my blog—e.g. a Flash-based chat room or shoutbox of some kind where people who are on my blog at the same time (including me) can interact.  My friends at Meebo are close to providing this with their new Rooms service but it’s not quite there yet.  I hope to figure out a good approach soon. Fifth, writing a blog is way easier than writing a magazine article, a published paper, or a book—but provides many of the same benefits. I think it’s an application of the 80/20 rule—for 20% of the effort (writing a blog post but not editing and refining it the quality level required of a magazine article, a published paper, or a book), you get 80% of the benefit (your thoughts are made available to interested people very broadly). Arguably blogging is better because the distribution of a blog can be even broader than a magazine article, a published paper, or a book, at least in cases where the article/paper/book is restricted by a publisher to a limited readership base. This of course assumes that you’re not trying to make a living writing magazine articles or books, or you’re not trying to get tenure as a professor by publishing peer-reviewed research papers. However, at least in the former case, even the money part is changing fast.  There are now a meaningful number of bloggers making a reasonable, even great, living by blogging, in some cases substantially more money than they would writing for a magazine or a book publisher. It is going to be tremendous fun to see the race that is rapidly evolving between blogging on the one hand and traditional forms of publishing on the other hand—there are advantages on all sides, but I think blogging is going to post a lot more challenges to magazines, newspapers, books, and other forms of traditional written media in the years to come, and more so than many people in those industries currently imagine. It’s also been striking to me how much more fun blogging is versus public speaking—at least for me.  And the reach from blogging seems to be much broader than speaking even at the largest conferences.  I’m not sure I’ll ever speak in public again—I’ll be at home instead, blogging in my underwear. Sixth, blogging tolerates and even encourages stylistic idiosyncracies that traditional publishing would not accommodate. Incremental thinking is OK. Interactive feedback with readers is possible, even easy. Revisions in the face of new information are OK—personally, I think it’s a great idea to go back and revise blog posts based on new information. Your weird writing style and flowery language is not necessarily held against you. And of course it’s much easier to link to other information or other people in blogs than it is in books or magazine articles. Seventh, it is totally clear that original content is what generates readership, at least for most bloggers. Some bloggers who blog a lot and link to a ton of interesting things every day have high levels of readership without a lot of original content, but I’d argue they are in the minority—most of the bloggers I’ve talked to over the last year who have significant levels of traffic attribute their readership mostly to original content, and this is certainly true for my blog. I can see this in my blogging statistics—a piece of original content that goes viral generates way more page views than a piece of content that does not. Although my home page readership and my RSS and email subscription numbers are all growing, so we’ll see where it all ends up. Eighth, I am convinced there is a whole world of optimization to be done based on detailed stats and studying what works and what doesn’t on one’s blog.  I’m just getting into that now—using advanced stats from Feedburner and Sitemeter—and will be writing more about this in the future. Ninth, we are definitely entering a world in which bloggers are taken super-seriously by political candidates, company PR departments, government officials, and book editors, among many others.  That trend is just starting—but people who have spent their careers dealing with professional press now definitely “get it\" that what happens on blogs matters just as much, or more. Tenth, it’s been fun to see the traffic to my blog generated by services such as Digg, Reddit, Techmeme, and the like, but the big surprise to me has been the amount of traffic that I get from StumbleUpon. It’s not that uncommon to have days in which StumbleUpon to be my single largest source of incoming traffic. Perhaps I’m just surprised because I don’t know that many people who use it, but I think EBay did a very smart thing buying them, and I hope they keep it going.  If not, there are going to be more startup opportunities around that idea. Eleventh and last, the most common reaction that I got from starting my blog that I didn’t expect was, “finally he’s blogging”. I found that to be quite humorous because of course from the perspective of bloggers who have been active for several years, it’s completely true, and yet here we are still living in a world where most people who have interesting things to say are not yet blogging and have no idea that they’re behind the trend curve. (I also found it to be humorous because if you want to get technical about it, I started my first blog in 1993.) We have an exciting five or ten years ahead of us during which many people who today are not blogging will be quote-unquote finally starting.  Let’s see if we can make them feel welcome when they arrive :-). This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"OK, you’re right, it IS a bubble Posted on October  7, 2007 [IMPORTANT WARNING: What follows is satire.  I’m NOT being serious.  Except for one paragraph at the very end.  See if you can spot that one.] When I first started this blog four months ago, one of the first substantive posts I wrote was called “Bubbles on the brain”. In it, I attempted to use “logic” to explain the reasons we are most likely not in another dot com bubble. Since that time, talk of a new dot com bubble or Web 2.0 bubble or Internet bubble has only escalated in volume and intensity. A huge, massive, inflating bubble. It can’t won’t not last. Here we sit, with over $7 billion in venture funding this year chasing exactly zero good ideas. Paid keyword ads?  All BS.  Once users figure out those things on the side of the page aren’t natural search results, that’s it, no more click-throughs.  Pop goes the souffle. Ad targeting?  Snort.  The creme de la creme for Internet advertising, so to speak, is those acne cream banner ads you see all over Facebook.  That’s it.  That’s the best Internet advertising will ever be.  Get used to the bottom of the barrel, suckers. Subscription fees?  Premium services?  Ecommerce?  Sponsorships?  Mobile advertising?  Mobile fee-based services?  New hosting models?  Video advertising?  Music subscription services?  In-game advertising?  Massively multiplayer games?  Digital gifts?  Affiliate bounties?  HA!  Don’t make me laugh.  Oh, wait—YOU JUST DID. So people everywhere are flocking to these newfangled trendoid web sites by the tens of millions and spend hundreds of millions or billions of hours on them every month.  So what.  It’s all a big fad.  Think hula hoops.  Pet rocks.  The macarena.  The clock is ticking, and the 15 minutes is almost up. Move along, move along, nothing to see here. These are not the droids you’re looking for. Venture capitalists?  All stupid, and unnecessary to boot.  Everyone knows that you shouldn’t need to raise more than $5.37 in loose change to start a new web business.  I mean, c’mon. Entrepreneurs?  Smoking dope.  What are they thinking?  Why aren’t they all working for Apple, helping to build a fatter Nano?  What’s wrong with them?  Potsmoking, mussed-hair, rooftop party-going, trendy glasses-wearing, sandal-clad, Red Bull-snorting, laid-getting wankers, the lot of ’em.  The sooner they realize the world never changes and there are no new opportunities to pursue, the better. Facebook apps?  Good God.  So they spread virally to millions of users in a matter of weeks.  Not worth anything.  Everyone knows that.  Can’t possibly build a business.  I mean, don’t you realize what else can spread to millions of people in a matter of weeks?  Do you want to catch any of those?  I don’t think so! The metabolically-differenced lady has sung. Right now this industry is just like Wile E. Coyote in the old Road Runner cartoons, ran out over the edge of the cliff, hanging in midair, gravity just about to kick in. Where’s it all going from here? Now that I’ve raised a monster Series C round for my own company, all other funding of all other startups will immediately cease.  No new competitors to my company need be started.  There’s certainly no major opportunity in what we’re doing; why go after your fair share of a $0 dollar market? Further, now that my company is in a rapid viral growth loop, will all the users please stop using anything new that comes along.  And while you’re at it, stop using most everything else also, please.  Cut it out with the fads already.  Posthaste.  Chop chop. Venture capitalists, I don’t think I need to tell you what to do.  OK, I do.  Hand back the money you’ve raised from LPs.  Quickly.  Quietly.  OK, now step away.  Don’t make any sudden moves.  Back out of the office park, slowly, slowly.  Hey, look at the bright side—carried interest finally getting taxed properly won’t affect you anymore!  And now you will have time to play 250 rounds of golf a year instead of just 225, and you can focus on getting your Porsche 911’s retrofitted to run on ethanol. All you other startups funded in the last three years?  Punt.  Now.  Liquidate the company—get whatever cash you can for the Aeron chairs and the foosball tables and the lava lamps and the RAID arrays and shut down now, hand the cash back to the investors, preferably on fire, and leave town, head down, in shame.  All those young programmers and product managers can go get jobs in retail footwear where they belong. You big companies—you eBays, you Yahoos, you Googles, you Amazons?  Yes, and you, Microsoft?  Think the new new B2B—back to boring.  What’s with all these new products?  The world is confusing enough.  Shut ’em down and let’s go back to the good old days: Windows ME, Mac OS 9, dialup modems, and 640 megabytes ought to be enough for everyone.  You’re just screwing us all over with all this new fancy broadband video-enabled phone-call-making wifi web-based lightweight touch-interface gorgeous long-battery-life flimflam—just look at how you keep dropping the damn prices.  I knew I’d be better off not buying any of it, ever.  The class action lawsuits are in the mail.  And for God’s sake, raise your dividends—what, you think there’s any growth left in this industry?  Fools.  When the great shareholder revolt comes, you’ll be first up against the wall. You wanton scribblers of what will now once again be referred to as the “press”, as everyone suddenly goes back to reading the news on smudgy-inked paper—start cranking up the I told you so stories.  You know you’ve been wanting to tell ’em—here’s your big chance!  Pulitzer is waiting. The sooner we all get back to 2003, when the few surviving companies had huge giant markets all to themselves, with no competition anywhere in sight, because everyone knew the world had come to an end, the better. I will accept your applause and gratitude in the form of immediate compliance. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"Counterpoint: Ben Horowitz on micromanagement Posted on September 19, 2007 [This is a guest post from my business partner Ben Horowitz, reacting to my recent post about hiring, managing, promoting, and firing executives.  I have italicized the parts where he really tears into me for your added humor value.] While I enjoyed Marc’s post on hiring and firing executives, I think that he unfairly dissed micromanagement. Everyone knows that the hyper-controlling manager with the severe personality disorder who micromanages every crummy decision is no fun to work for. However, it is wrong to condemn the practice of micromanagement on that basis. Specifically, there are times and situations where micromanaging executives is not just ok, but also the right thing to do. Andy Grove has an excellent explanation of this in his classic book High Output Management, where he describes a concept called “Task Relevant Maturity”. Andy explains that employees who are immature in a given task require detailed training and instruction. They need to be micromanaged. On the other hand, if an employee is relatively mature in a task, then it is counterproductive and annoying to manage the details of their work. This is also true when managing executives. Marc might think that he hires an executive because she has the experience and know-how to comprehensively do her job, so any detailed instruction would be unwise and unwarranted. Marc would be wrong about that. It turns out that even—and maybe especially—executives are also immature in certain tasks. It is almost always the case that a new executive will be immature in their understanding of your market, your technology, and your company—its personnel, processes, and culture. Will the new head of engineering at Ning walk in the door with Marc’s understanding of the development process or the technology base? Would it be better for this new head of engineering to make guesses and use her own best—not so good-- judgment, or for Marc to review the first say 20 decisions until the new exec is fully up to speed? In reality—as opposed to Marc’s warped view of reality—it will be extremely helpful for Marc [if he were actually the CEO, which he is not] to meet with the new head of engineering daily when she comes on board and review all of her thinking and decisions. This level of micromanagement will accelerate her training and improve her long-term effectiveness. It will make her seem smarter to the rest of the organization which will build credibility and confidence while she comes up to speed. Micromanaging new executives is generally a good idea for a limited period of time. However, that is not the only time that it makes sense to micromanage executives. It turns out that just about every executive in the world has a few things that are seriously wrong with them. They have areas where they are truly deficient in judgment or skill set. That’s just life. Almost nobody is brilliant at everything. When hiring and when firing executives, you must therefore focus on strength rather than lack of weakness. Everybody has severe weaknesses even if you can’t see them yet. When managing, it’s often useful to micromanage and to provide remedial training around these weaknesses. Doing so may make the difference between an executive succeeding or failing. For example, you might have a brilliant engineering executive who generates excellent team loyalty, has terrific product judgment and makes the trains run on time. This same executive may be very poor at relating to the other functions in the company. She may generate far more than her share of cross-functional conflicts, cut herself off from critical information, and significantly impede your ability to sell and market effectively. Your alternatives are: (a) Macro-manage and give her an annual or quarterly objective to fix it, or... (b) Intensively micromanage her interactions until she learns the fundamental interpersonal skills required to be an effective executive. I am arguing that doing (a) will likely result in weak performance. The reason is that she very likely has no idea how to be effective with her peers.  If somebody is an executive, it’s very likely that somewhere along the line somebody gave her feedback—perhaps abstractly—about all of her weaknesses. Yet the weakness remains. As a result, executives generally require more hands-on management than lower level employees to improve weak areas. So, micromanagement is like fine wine. A little at the right times will really enhance things; too much all the time and you’ll end up in rehab. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
{"text":"An hour and a half with Barack Obama Posted on March  3, 2008 I’ve tried very hard to keep politics out of this blog—despite nearly overpowering impulses to the contrary—for two reasons: one, there’s no reason to alienate people who don’t share my political views, as wrong-headed as those people may clearly be; two, there’s no reason to expect my opinion on political issues should be any more valid than any other reader of what, these days, passes for the New York Times. That said, in light of the extraordinary events playing out around us right now in the runup to the presidential election, I would like to share with you a personal experience that I was lucky enough to have early last year. Early in 2007, a friend of mine who is active in both high-tech and politics called me up and said, let’s go see this first-term Senator, Barack Obama, who’s ramping up to run for President. And so we did—my friend, my wife Laura, and me—and we were able to meet privately with Senator Obama for an hour and a half. The reason I think you may find this interesting is that our meeting in early 2007 was probably one of the last times Senator Obama was able to spend an hour and a half sitting down and talking with just about anyone—so I think we got a solid look at what he’s like up close, right before he entered the “bubble” within which all major presidential candidates, and presidents, must exist. Let me get disclaimers out of the way: my only involvement with the Democratic presidential campaigns is as an individual donor—after meeting with the Senator, my wife and I both contributed the maximum amount of “hard money” we could to the Obama campaign, less than $10,000 total for both the primary and the general election.  On the other hand, we also donated to Mitt Romney’s Republican primary effort—conclude from that what you will. I carried four distinct impressions away from our meeting with Senator Obama. First, this is a normal guy. I’ve spent time with a lot of politicians in the last 15 years.  Most of them talk at you.  Listening is not their strong suit—in fact, many of them aren’t even very good at faking it. Senator Obama, in contrast, comes across as a normal human being, with a normal interaction style, and a normal level of interest in the people he’s with and the world around him. We were able to have an actual, honest-to-God conversation, back and forth, on a number of topics.  In particular, the Senator was personally interested in the rise of social networking, Facebook, Youtube, and user-generated content, and casually but persistently grilled us on what we thought the next generation of social media would be and how social networking might affect politics—with no staff present, no prepared materials, no notes.  He already knew a fair amount about the topic but was very curious to actually learn more.  We also talked about a pretty wide range of other issues, including Silicon Valley and various political topics. With most politicians, their curiosity ends once they find out how much money you can raise for them.  Not so with Senator Obama—this is a normal guy. Second, this is a smart guy. I bring this up for two reasons.  One, Senator Obama’s political opponents tend to try to paint him as some kind of lightweight, which he most definitely is not.  Two, I think he’s at or near the top of the scale of intelligence of anyone in political life today. You can see how smart he is in his background—for example, lecturer in constitutional law at University of Chicago; before that, president of the Harvard Law Review. But it’s also apparent when you interact with him that you’re dealing with one of the intellectually smartest national politicians in recent times, at least since Bill Clinton.  He’s crisp, lucid, analytical, and clearly assimilates and synthesizes a very large amount of information—smart. Third, this is not a radical. This is not some kind of liberal revolutionary who is intent on throwing everything up in the air and starting over. Put the primary campaign speeches aside; take a look at his policy positions on any number of issues and what strikes you is how reasonable, moderate, and thoughtful they are. And in person, that’s exactly what he’s like.  There’s no fire in the eyes to realize some utopian or revolutionary dream.  Instead, what comes across—in both his questions and his answers—is calmness, reason, and judgment. Fourth, this is the first credible post-Baby Boomer presidential candidate. The Baby Boomers are best defined as the generation that came of age during the 1960’s—whose worldview and outlook was shaped by Vietnam plus the widespread social unrest and change that peaked in the late 1960’s. Post-Boomers are those of us, like me, who came of age in the 1970’s or 1980’s—after Vietnam, after Nixon, after the “sexual revolution” and the cultural wars of the 1960’s. One of the reasons Senator Obama comes across as so fresh and different is that he’s the first serious presidential candidate who isn’t either from the World War II era (Reagan, Bush Sr, Dole, and even McCain, who was born in 1936) or from the Baby Boomer generation (Bill Clinton, Hillary Clinton, John Kerry, Al Gore, and George W. Bush). Most of the Boomers I know are still fixated on the 1960’s in one way or another—generally in how they think about social change, politics, and the government. It’s very clear when interacting with Senator Obama that he’s totally focused on the world as it has existed since after the 1960’s—as am I, and as is practically everyone I know who’s younger than 50. What’s the picture that emerges from these four impressions? Smart, normal, curious, not radical, and post-Boomer. If you were asking me to write a capsule description of what I would look for in the next President of the United States, that would be it. Having met him and then having watched him for the last 12 months run one of the best-executed and cleanest major presidential campaigns in recent memory, I have no doubt that Senator Obama has the judgment, bearing, intellect, and high ethical standards to be an outstanding president—completely aside from the movement that has formed around him, and in complete contradiction to the silly assertions by both the Clinton and McCain campaigns that he’s somehow not ready. Before I close, let me share two specific things he said at the time—early 2007—on the topic of whether he’s ready. We asked him directly, how concerned should we be that you haven’t had meaningful experience as an executive—as a manager and leader of people? He said, watch how I run my campaign—you’ll see my leadership skills in action. At the time, I wasn’t sure what to make of his answer—political campaigns are often very messy and chaotic, with a lot of turnover and flux; what conclusions could we possibly draw from one of those? Well, as any political expert will tell you, it turns out that the Obama campaign has been one of the best organized and executed presidential campaigns in memory.  Even Obama’s opponents concede that his campaign has been disciplined, methodical, and effective across the full spectrum of activities required to win—and with a minimum of the negative campaigning and attack ads that normally characterize a race like this, and with almost no staff turnover.  By almost any measure, the Obama campaign has simply out-executed both the Clinton and McCain campaigns. This speaks well to the Senator’s ability to run a campaign, but speaks even more to his ability to recruit and manage a top-notch group of campaign professionals and volunteers—another key leadership characteristic.  When you compare this to the awe-inspiring discord, infighting, and staff turnover within both the Clinton and McCain campaigns up to this point—well, let’s just say it’s a very interesting data point. We then asked, well, what about foreign policy—should we be concerned that you just don’t have much experience there? He said, directly, two things. First, he said, I’m on the Senate Foreign Relations Committee, where I serve with a number of Senators who are widely regarded as leading experts on foreign policy—and I can tell you that I know as much about foreign policy at this point as most of them. Being a fan of blunt answers, I liked that one. But then he made what I think is the really good point. He said—and I’m going to paraphrase a little here: think about who I am—my father was Kenyan; I have close relatives in a small rural village in Kenya to this day; and I spent several years of my childhood living in Jakarta, Indonesia.  Think about what it’s going to mean in many parts of the world—parts of the world that we really care about—when I show up as the President of the United States.  I’ll be fundamentally changing the world’s perception of what the United States is all about. This article was written by Marc Andreessen and originally published on his blog, blog.pmarca.com. These articles are probably some of the best writings on business and startups anywhere but they were taken down years ago. They live here now in this static archive."}
